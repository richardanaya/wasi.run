(function(){const iU=document.createElement("link").relList;if(iU&&iU.supports&&iU.supports("modulepreload"))return;for(const x of document.querySelectorAll('link[rel="modulepreload"]'))nU(x);new MutationObserver(x=>{for(const n of x)if(n.type==="childList")for(const o of n.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&nU(o)}).observe(document,{childList:!0,subtree:!0});function tU(x){const n={};return x.integrity&&(n.integrity=x.integrity),x.referrerpolicy&&(n.referrerPolicy=x.referrerpolicy),x.crossorigin==="use-credentials"?n.credentials="include":x.crossorigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function nU(x){if(x.ep)return;x.ep=!0;const n=tU(x);fetch(x.href,n)}})();const NQ="",SQ=typeof window<"u"&&window.Blob&&new Blob([atob(NQ)],{type:"text/javascript;charset=utf-8"});function rQ(){const SU=SQ&&(window.URL||window.webkitURL).createObjectURL(SQ);try{return SU?new Worker(SU):new Worker("data:application/javascript;base64,"+NQ)}finally{SU&&(window.URL||window.webkitURL).revokeObjectURL(SU)}}var EQ={exports:{}};(function(SU,iU){(function(tU,nU){SU.exports=nU()})(self,function(){return(()=>{var tU={4567:function(x,n,o){var t,Z=this&&this.__extends||(t=function(Q,U){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(F,B){F.__proto__=B}||function(F,B){for(var R in B)Object.prototype.hasOwnProperty.call(B,R)&&(F[R]=B[R])},t(Q,U)},function(Q,U){if(typeof U!="function"&&U!==null)throw new TypeError("Class extends value "+String(U)+" is not a constructor or null");function F(){this.constructor=Q}t(Q,U),Q.prototype=U===null?Object.create(U):(F.prototype=U.prototype,new F)});Object.defineProperty(n,"__esModule",{value:!0}),n.AccessibilityManager=void 0;var e=o(9042),S=o(6114),r=o(9924),E=o(3656),d=o(844),l=o(5596),N=o(9631),W=function(Q){function U(F,B){var R=Q.call(this)||this;R._terminal=F,R._renderService=B,R._liveRegionLineCount=0,R._charsToConsume=[],R._charsToAnnounce="",R._accessibilityTreeRoot=document.createElement("div"),R._accessibilityTreeRoot.classList.add("xterm-accessibility"),R._accessibilityTreeRoot.tabIndex=0,R._rowContainer=document.createElement("div"),R._rowContainer.setAttribute("role","list"),R._rowContainer.classList.add("xterm-accessibility-tree"),R._rowElements=[];for(var J=0;J<R._terminal.rows;J++)R._rowElements[J]=R._createAccessibilityTreeNode(),R._rowContainer.appendChild(R._rowElements[J]);if(R._topBoundaryFocusListener=function(V){return R._onBoundaryFocus(V,0)},R._bottomBoundaryFocusListener=function(V){return R._onBoundaryFocus(V,1)},R._rowElements[0].addEventListener("focus",R._topBoundaryFocusListener),R._rowElements[R._rowElements.length-1].addEventListener("focus",R._bottomBoundaryFocusListener),R._refreshRowsDimensions(),R._accessibilityTreeRoot.appendChild(R._rowContainer),R._renderRowsDebouncer=new r.TimeBasedDebouncer(R._renderRows.bind(R)),R._refreshRows(),R._liveRegion=document.createElement("div"),R._liveRegion.classList.add("live-region"),R._liveRegion.setAttribute("aria-live","assertive"),R._accessibilityTreeRoot.appendChild(R._liveRegion),!R._terminal.element)throw new Error("Cannot enable accessibility before Terminal.open");return R._terminal.element.insertAdjacentElement("afterbegin",R._accessibilityTreeRoot),R.register(R._renderRowsDebouncer),R.register(R._terminal.onResize(function(V){return R._onResize(V.rows)})),R.register(R._terminal.onRender(function(V){return R._refreshRows(V.start,V.end)})),R.register(R._terminal.onScroll(function(){return R._refreshRows()})),R.register(R._terminal.onA11yChar(function(V){return R._onChar(V)})),R.register(R._terminal.onLineFeed(function(){return R._onChar(`
`)})),R.register(R._terminal.onA11yTab(function(V){return R._onTab(V)})),R.register(R._terminal.onKey(function(V){return R._onKey(V.key)})),R.register(R._terminal.onBlur(function(){return R._clearLiveRegion()})),R.register(R._renderService.onDimensionsChange(function(){return R._refreshRowsDimensions()})),R._screenDprMonitor=new l.ScreenDprMonitor,R.register(R._screenDprMonitor),R._screenDprMonitor.setListener(function(){return R._refreshRowsDimensions()}),R.register((0,E.addDisposableDomListener)(window,"resize",function(){return R._refreshRowsDimensions()})),R}return Z(U,Q),U.prototype.dispose=function(){Q.prototype.dispose.call(this),(0,N.removeElementFromParent)(this._accessibilityTreeRoot),this._rowElements.length=0},U.prototype._onBoundaryFocus=function(F,B){var R=F.target,J=this._rowElements[B===0?1:this._rowElements.length-2];if(R.getAttribute("aria-posinset")!==(B===0?"1":""+this._terminal.buffer.lines.length)&&F.relatedTarget===J){var V,k;if(B===0?(V=R,k=this._rowElements.pop(),this._rowContainer.removeChild(k)):(V=this._rowElements.shift(),k=R,this._rowContainer.removeChild(V)),V.removeEventListener("focus",this._topBoundaryFocusListener),k.removeEventListener("focus",this._bottomBoundaryFocusListener),B===0){var i=this._createAccessibilityTreeNode();this._rowElements.unshift(i),this._rowContainer.insertAdjacentElement("afterbegin",i)}else i=this._createAccessibilityTreeNode(),this._rowElements.push(i),this._rowContainer.appendChild(i);this._rowElements[0].addEventListener("focus",this._topBoundaryFocusListener),this._rowElements[this._rowElements.length-1].addEventListener("focus",this._bottomBoundaryFocusListener),this._terminal.scrollLines(B===0?-1:1),this._rowElements[B===0?1:this._rowElements.length-2].focus(),F.preventDefault(),F.stopImmediatePropagation()}},U.prototype._onResize=function(F){this._rowElements[this._rowElements.length-1].removeEventListener("focus",this._bottomBoundaryFocusListener);for(var B=this._rowContainer.children.length;B<this._terminal.rows;B++)this._rowElements[B]=this._createAccessibilityTreeNode(),this._rowContainer.appendChild(this._rowElements[B]);for(;this._rowElements.length>F;)this._rowContainer.removeChild(this._rowElements.pop());this._rowElements[this._rowElements.length-1].addEventListener("focus",this._bottomBoundaryFocusListener),this._refreshRowsDimensions()},U.prototype._createAccessibilityTreeNode=function(){var F=document.createElement("div");return F.setAttribute("role","listitem"),F.tabIndex=-1,this._refreshRowDimensions(F),F},U.prototype._onTab=function(F){for(var B=0;B<F;B++)this._onChar(" ")},U.prototype._onChar=function(F){var B=this;this._liveRegionLineCount<21&&(this._charsToConsume.length>0?this._charsToConsume.shift()!==F&&(this._charsToAnnounce+=F):this._charsToAnnounce+=F,F===`
`&&(this._liveRegionLineCount++,this._liveRegionLineCount===21&&(this._liveRegion.textContent+=e.tooMuchOutput)),S.isMac&&this._liveRegion.textContent&&this._liveRegion.textContent.length>0&&!this._liveRegion.parentNode&&setTimeout(function(){B._accessibilityTreeRoot.appendChild(B._liveRegion)},0))},U.prototype._clearLiveRegion=function(){this._liveRegion.textContent="",this._liveRegionLineCount=0,S.isMac&&(0,N.removeElementFromParent)(this._liveRegion)},U.prototype._onKey=function(F){this._clearLiveRegion(),this._charsToConsume.push(F)},U.prototype._refreshRows=function(F,B){this._renderRowsDebouncer.refresh(F,B,this._terminal.rows)},U.prototype._renderRows=function(F,B){for(var R=this._terminal.buffer,J=R.lines.length.toString(),V=F;V<=B;V++){var k=R.translateBufferLineToString(R.ydisp+V,!0),i=(R.ydisp+V+1).toString(),a=this._rowElements[V];a&&(k.length===0?a.innerText="\xA0":a.textContent=k,a.setAttribute("aria-posinset",i),a.setAttribute("aria-setsize",J))}this._announceCharacters()},U.prototype._refreshRowsDimensions=function(){if(this._renderService.dimensions.actualCellHeight){this._rowElements.length!==this._terminal.rows&&this._onResize(this._terminal.rows);for(var F=0;F<this._terminal.rows;F++)this._refreshRowDimensions(this._rowElements[F])}},U.prototype._refreshRowDimensions=function(F){F.style.height=this._renderService.dimensions.actualCellHeight+"px"},U.prototype._announceCharacters=function(){this._charsToAnnounce.length!==0&&(this._liveRegion.textContent+=this._charsToAnnounce,this._charsToAnnounce="")},U}(d.Disposable);n.AccessibilityManager=W},3614:(x,n)=>{function o(S){return S.replace(/\r?\n/g,"\r")}function t(S,r){return r?"\x1B[200~"+S+"\x1B[201~":S}function Z(S,r,E){S=t(S=o(S),E.decPrivateModes.bracketedPasteMode),E.triggerDataEvent(S,!0),r.value=""}function e(S,r,E){var d=E.getBoundingClientRect(),l=S.clientX-d.left-10,N=S.clientY-d.top-10;r.style.width="20px",r.style.height="20px",r.style.left=l+"px",r.style.top=N+"px",r.style.zIndex="1000",r.focus()}Object.defineProperty(n,"__esModule",{value:!0}),n.rightClickHandler=n.moveTextAreaUnderMouseCursor=n.paste=n.handlePasteEvent=n.copyHandler=n.bracketTextForPaste=n.prepareTextForTerminal=void 0,n.prepareTextForTerminal=o,n.bracketTextForPaste=t,n.copyHandler=function(S,r){S.clipboardData&&S.clipboardData.setData("text/plain",r.selectionText),S.preventDefault()},n.handlePasteEvent=function(S,r,E){S.stopPropagation(),S.clipboardData&&Z(S.clipboardData.getData("text/plain"),r,E)},n.paste=Z,n.moveTextAreaUnderMouseCursor=e,n.rightClickHandler=function(S,r,E,d,l){e(S,r,E),l&&d.rightClickSelect(S),r.value=d.selectionText,r.select()}},7239:(x,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.ColorContrastCache=void 0;var o=function(){function t(){this._color={},this._rgba={}}return t.prototype.clear=function(){this._color={},this._rgba={}},t.prototype.setCss=function(Z,e,S){this._rgba[Z]||(this._rgba[Z]={}),this._rgba[Z][e]=S},t.prototype.getCss=function(Z,e){return this._rgba[Z]?this._rgba[Z][e]:void 0},t.prototype.setColor=function(Z,e,S){this._color[Z]||(this._color[Z]={}),this._color[Z][e]=S},t.prototype.getColor=function(Z,e){return this._color[Z]?this._color[Z][e]:void 0},t}();n.ColorContrastCache=o},5680:function(x,n,o){var t=this&&this.__read||function(W,Q){var U=typeof Symbol=="function"&&W[Symbol.iterator];if(!U)return W;var F,B,R=U.call(W),J=[];try{for(;(Q===void 0||Q-- >0)&&!(F=R.next()).done;)J.push(F.value)}catch(V){B={error:V}}finally{try{F&&!F.done&&(U=R.return)&&U.call(R)}finally{if(B)throw B.error}}return J};Object.defineProperty(n,"__esModule",{value:!0}),n.ColorManager=n.DEFAULT_ANSI_COLORS=void 0;var Z=o(8055),e=o(7239),S=Z.css.toColor("#ffffff"),r=Z.css.toColor("#000000"),E=Z.css.toColor("#ffffff"),d=Z.css.toColor("#000000"),l={css:"rgba(255, 255, 255, 0.3)",rgba:4294967117};n.DEFAULT_ANSI_COLORS=Object.freeze(function(){for(var W=[Z.css.toColor("#2e3436"),Z.css.toColor("#cc0000"),Z.css.toColor("#4e9a06"),Z.css.toColor("#c4a000"),Z.css.toColor("#3465a4"),Z.css.toColor("#75507b"),Z.css.toColor("#06989a"),Z.css.toColor("#d3d7cf"),Z.css.toColor("#555753"),Z.css.toColor("#ef2929"),Z.css.toColor("#8ae234"),Z.css.toColor("#fce94f"),Z.css.toColor("#729fcf"),Z.css.toColor("#ad7fa8"),Z.css.toColor("#34e2e2"),Z.css.toColor("#eeeeec")],Q=[0,95,135,175,215,255],U=0;U<216;U++){var F=Q[U/36%6|0],B=Q[U/6%6|0],R=Q[U%6];W.push({css:Z.channels.toCss(F,B,R),rgba:Z.channels.toRgba(F,B,R)})}for(U=0;U<24;U++){var J=8+10*U;W.push({css:Z.channels.toCss(J,J,J),rgba:Z.channels.toRgba(J,J,J)})}return W}());var N=function(){function W(Q,U){this.allowTransparency=U;var F=Q.createElement("canvas");F.width=1,F.height=1;var B=F.getContext("2d");if(!B)throw new Error("Could not get rendering context");this._ctx=B,this._ctx.globalCompositeOperation="copy",this._litmusColor=this._ctx.createLinearGradient(0,0,1,1),this._contrastCache=new e.ColorContrastCache,this.colors={foreground:S,background:r,cursor:E,cursorAccent:d,selectionTransparent:l,selectionOpaque:Z.color.blend(r,l),selectionForeground:void 0,ansi:n.DEFAULT_ANSI_COLORS.slice(),contrastCache:this._contrastCache},this._updateRestoreColors()}return W.prototype.onOptionsChange=function(Q){Q==="minimumContrastRatio"&&this._contrastCache.clear()},W.prototype.setTheme=function(Q){Q===void 0&&(Q={}),this.colors.foreground=this._parseColor(Q.foreground,S),this.colors.background=this._parseColor(Q.background,r),this.colors.cursor=this._parseColor(Q.cursor,E,!0),this.colors.cursorAccent=this._parseColor(Q.cursorAccent,d,!0),this.colors.selectionTransparent=this._parseColor(Q.selection,l,!0),this.colors.selectionOpaque=Z.color.blend(this.colors.background,this.colors.selectionTransparent);var U={css:"",rgba:0};this.colors.selectionForeground=Q.selectionForeground?this._parseColor(Q.selectionForeground,U):void 0,this.colors.selectionForeground===U&&(this.colors.selectionForeground=void 0),Z.color.isOpaque(this.colors.selectionTransparent)&&(this.colors.selectionTransparent=Z.color.opacity(this.colors.selectionTransparent,.3)),this.colors.ansi[0]=this._parseColor(Q.black,n.DEFAULT_ANSI_COLORS[0]),this.colors.ansi[1]=this._parseColor(Q.red,n.DEFAULT_ANSI_COLORS[1]),this.colors.ansi[2]=this._parseColor(Q.green,n.DEFAULT_ANSI_COLORS[2]),this.colors.ansi[3]=this._parseColor(Q.yellow,n.DEFAULT_ANSI_COLORS[3]),this.colors.ansi[4]=this._parseColor(Q.blue,n.DEFAULT_ANSI_COLORS[4]),this.colors.ansi[5]=this._parseColor(Q.magenta,n.DEFAULT_ANSI_COLORS[5]),this.colors.ansi[6]=this._parseColor(Q.cyan,n.DEFAULT_ANSI_COLORS[6]),this.colors.ansi[7]=this._parseColor(Q.white,n.DEFAULT_ANSI_COLORS[7]),this.colors.ansi[8]=this._parseColor(Q.brightBlack,n.DEFAULT_ANSI_COLORS[8]),this.colors.ansi[9]=this._parseColor(Q.brightRed,n.DEFAULT_ANSI_COLORS[9]),this.colors.ansi[10]=this._parseColor(Q.brightGreen,n.DEFAULT_ANSI_COLORS[10]),this.colors.ansi[11]=this._parseColor(Q.brightYellow,n.DEFAULT_ANSI_COLORS[11]),this.colors.ansi[12]=this._parseColor(Q.brightBlue,n.DEFAULT_ANSI_COLORS[12]),this.colors.ansi[13]=this._parseColor(Q.brightMagenta,n.DEFAULT_ANSI_COLORS[13]),this.colors.ansi[14]=this._parseColor(Q.brightCyan,n.DEFAULT_ANSI_COLORS[14]),this.colors.ansi[15]=this._parseColor(Q.brightWhite,n.DEFAULT_ANSI_COLORS[15]),this._contrastCache.clear(),this._updateRestoreColors()},W.prototype.restoreColor=function(Q){if(Q!==void 0)switch(Q){case 256:this.colors.foreground=this._restoreColors.foreground;break;case 257:this.colors.background=this._restoreColors.background;break;case 258:this.colors.cursor=this._restoreColors.cursor;break;default:this.colors.ansi[Q]=this._restoreColors.ansi[Q]}else for(var U=0;U<this._restoreColors.ansi.length;++U)this.colors.ansi[U]=this._restoreColors.ansi[U]},W.prototype._updateRestoreColors=function(){this._restoreColors={foreground:this.colors.foreground,background:this.colors.background,cursor:this.colors.cursor,ansi:this.colors.ansi.slice()}},W.prototype._parseColor=function(Q,U,F){if(F===void 0&&(F=this.allowTransparency),Q===void 0)return U;if(this._ctx.fillStyle=this._litmusColor,this._ctx.fillStyle=Q,typeof this._ctx.fillStyle!="string")return console.warn("Color: "+Q+" is invalid using fallback "+U.css),U;this._ctx.fillRect(0,0,1,1);var B=this._ctx.getImageData(0,0,1,1).data;if(B[3]!==255){if(!F)return console.warn("Color: "+Q+" is using transparency, but allowTransparency is false. Using fallback "+U.css+"."),U;var R=t(this._ctx.fillStyle.substring(5,this._ctx.fillStyle.length-1).split(",").map(function(h){return Number(h)}),4),J=R[0],V=R[1],k=R[2],i=R[3],a=Math.round(255*i);return{rgba:Z.channels.toRgba(J,V,k,a),css:Q}}return{css:this._ctx.fillStyle,rgba:Z.channels.toRgba(B[0],B[1],B[2],B[3])}},W}();n.ColorManager=N},9631:function(x,n){var o=this&&this.__values||function(t){var Z=typeof Symbol=="function"&&Symbol.iterator,e=Z&&t[Z],S=0;if(e)return e.call(t);if(t&&typeof t.length=="number")return{next:function(){return t&&S>=t.length&&(t=void 0),{value:t&&t[S++],done:!t}}};throw new TypeError(Z?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(n,"__esModule",{value:!0}),n.removeElementFromParent=void 0,n.removeElementFromParent=function(){for(var t,Z,e,S=[],r=0;r<arguments.length;r++)S[r]=arguments[r];try{for(var E=o(S),d=E.next();!d.done;d=E.next()){var l=d.value;(e=l==null?void 0:l.parentElement)===null||e===void 0||e.removeChild(l)}}catch(N){t={error:N}}finally{try{d&&!d.done&&(Z=E.return)&&Z.call(E)}finally{if(t)throw t.error}}}},3656:(x,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.addDisposableDomListener=void 0,n.addDisposableDomListener=function(o,t,Z,e){o.addEventListener(t,Z,e);var S=!1;return{dispose:function(){S||(S=!0,o.removeEventListener(t,Z,e))}}}},3551:function(x,n,o){var t=this&&this.__decorate||function(d,l,N,W){var Q,U=arguments.length,F=U<3?l:W===null?W=Object.getOwnPropertyDescriptor(l,N):W;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")F=Reflect.decorate(d,l,N,W);else for(var B=d.length-1;B>=0;B--)(Q=d[B])&&(F=(U<3?Q(F):U>3?Q(l,N,F):Q(l,N))||F);return U>3&&F&&Object.defineProperty(l,N,F),F},Z=this&&this.__param||function(d,l){return function(N,W){l(N,W,d)}};Object.defineProperty(n,"__esModule",{value:!0}),n.MouseZone=n.Linkifier=void 0;var e=o(8460),S=o(2585),r=function(){function d(l,N,W){this._bufferService=l,this._logService=N,this._unicodeService=W,this._linkMatchers=[],this._nextLinkMatcherId=0,this._onShowLinkUnderline=new e.EventEmitter,this._onHideLinkUnderline=new e.EventEmitter,this._onLinkTooltip=new e.EventEmitter,this._rowsToLinkify={start:void 0,end:void 0}}return Object.defineProperty(d.prototype,"onShowLinkUnderline",{get:function(){return this._onShowLinkUnderline.event},enumerable:!1,configurable:!0}),Object.defineProperty(d.prototype,"onHideLinkUnderline",{get:function(){return this._onHideLinkUnderline.event},enumerable:!1,configurable:!0}),Object.defineProperty(d.prototype,"onLinkTooltip",{get:function(){return this._onLinkTooltip.event},enumerable:!1,configurable:!0}),d.prototype.attachToDom=function(l,N){this._element=l,this._mouseZoneManager=N},d.prototype.linkifyRows=function(l,N){var W=this;this._mouseZoneManager&&(this._rowsToLinkify.start===void 0||this._rowsToLinkify.end===void 0?(this._rowsToLinkify.start=l,this._rowsToLinkify.end=N):(this._rowsToLinkify.start=Math.min(this._rowsToLinkify.start,l),this._rowsToLinkify.end=Math.max(this._rowsToLinkify.end,N)),this._mouseZoneManager.clearAll(l,N),this._rowsTimeoutId&&clearTimeout(this._rowsTimeoutId),this._rowsTimeoutId=setTimeout(function(){return W._linkifyRows()},d._timeBeforeLatency))},d.prototype._linkifyRows=function(){this._rowsTimeoutId=void 0;var l=this._bufferService.buffer;if(this._rowsToLinkify.start!==void 0&&this._rowsToLinkify.end!==void 0){var N=l.ydisp+this._rowsToLinkify.start;if(!(N>=l.lines.length)){for(var W=l.ydisp+Math.min(this._rowsToLinkify.end,this._bufferService.rows)+1,Q=Math.ceil(2e3/this._bufferService.cols),U=this._bufferService.buffer.iterator(!1,N,W,Q,Q);U.hasNext();)for(var F=U.next(),B=0;B<this._linkMatchers.length;B++)this._doLinkifyRow(F.range.first,F.content,this._linkMatchers[B]);this._rowsToLinkify.start=void 0,this._rowsToLinkify.end=void 0}}else this._logService.debug("_rowToLinkify was unset before _linkifyRows was called")},d.prototype.registerLinkMatcher=function(l,N,W){if(W===void 0&&(W={}),!N)throw new Error("handler must be defined");var Q={id:this._nextLinkMatcherId++,regex:l,handler:N,matchIndex:W.matchIndex,validationCallback:W.validationCallback,hoverTooltipCallback:W.tooltipCallback,hoverLeaveCallback:W.leaveCallback,willLinkActivate:W.willLinkActivate,priority:W.priority||0};return this._addLinkMatcherToList(Q),Q.id},d.prototype._addLinkMatcherToList=function(l){if(this._linkMatchers.length!==0){for(var N=this._linkMatchers.length-1;N>=0;N--)if(l.priority<=this._linkMatchers[N].priority)return void this._linkMatchers.splice(N+1,0,l);this._linkMatchers.splice(0,0,l)}else this._linkMatchers.push(l)},d.prototype.deregisterLinkMatcher=function(l){for(var N=0;N<this._linkMatchers.length;N++)if(this._linkMatchers[N].id===l)return this._linkMatchers.splice(N,1),!0;return!1},d.prototype._doLinkifyRow=function(l,N,W){for(var Q,U=this,F=new RegExp(W.regex.source,(W.regex.flags||"")+"g"),B=-1,R=function(){var V=Q[typeof W.matchIndex!="number"?0:W.matchIndex];if(!V)return J._logService.debug("match found without corresponding matchIndex",Q,W),"break";if(B=N.indexOf(V,B+1),F.lastIndex=B+V.length,B<0)return"break";var k=J._bufferService.buffer.stringIndexToBufferIndex(l,B);if(k[0]<0)return"break";var i=J._bufferService.buffer.lines.get(k[0]);if(!i)return"break";var a=i.getFg(k[1]),h=a?a>>9&511:void 0;W.validationCallback?W.validationCallback(V,function(T){U._rowsTimeoutId||T&&U._addLink(k[1],k[0]-U._bufferService.buffer.ydisp,V,W,h)}):J._addLink(k[1],k[0]-J._bufferService.buffer.ydisp,V,W,h)},J=this;(Q=F.exec(N))!==null&&R()!=="break";);},d.prototype._addLink=function(l,N,W,Q,U){var F=this;if(this._mouseZoneManager&&this._element){var B=this._unicodeService.getStringCellWidth(W),R=l%this._bufferService.cols,J=N+Math.floor(l/this._bufferService.cols),V=(R+B)%this._bufferService.cols,k=J+Math.floor((R+B)/this._bufferService.cols);V===0&&(V=this._bufferService.cols,k--),this._mouseZoneManager.add(new E(R+1,J+1,V+1,k+1,function(i){if(Q.handler)return Q.handler(i,W);var a=window.open();a?(a.opener=null,a.location.href=W):console.warn("Opening link blocked as opener could not be cleared")},function(){F._onShowLinkUnderline.fire(F._createLinkHoverEvent(R,J,V,k,U)),F._element.classList.add("xterm-cursor-pointer")},function(i){F._onLinkTooltip.fire(F._createLinkHoverEvent(R,J,V,k,U)),Q.hoverTooltipCallback&&Q.hoverTooltipCallback(i,W,{start:{x:R,y:J},end:{x:V,y:k}})},function(){F._onHideLinkUnderline.fire(F._createLinkHoverEvent(R,J,V,k,U)),F._element.classList.remove("xterm-cursor-pointer"),Q.hoverLeaveCallback&&Q.hoverLeaveCallback()},function(i){return!Q.willLinkActivate||Q.willLinkActivate(i,W)}))}},d.prototype._createLinkHoverEvent=function(l,N,W,Q,U){return{x1:l,y1:N,x2:W,y2:Q,cols:this._bufferService.cols,fg:U}},d._timeBeforeLatency=200,d=t([Z(0,S.IBufferService),Z(1,S.ILogService),Z(2,S.IUnicodeService)],d)}();n.Linkifier=r;var E=function(d,l,N,W,Q,U,F,B,R){this.x1=d,this.y1=l,this.x2=N,this.y2=W,this.clickCallback=Q,this.hoverCallback=U,this.tooltipCallback=F,this.leaveCallback=B,this.willLinkActivate=R};n.MouseZone=E},6465:function(x,n,o){var t,Z=this&&this.__extends||(t=function(U,F){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(B,R){B.__proto__=R}||function(B,R){for(var J in R)Object.prototype.hasOwnProperty.call(R,J)&&(B[J]=R[J])},t(U,F)},function(U,F){if(typeof F!="function"&&F!==null)throw new TypeError("Class extends value "+String(F)+" is not a constructor or null");function B(){this.constructor=U}t(U,F),U.prototype=F===null?Object.create(F):(B.prototype=F.prototype,new B)}),e=this&&this.__decorate||function(U,F,B,R){var J,V=arguments.length,k=V<3?F:R===null?R=Object.getOwnPropertyDescriptor(F,B):R;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")k=Reflect.decorate(U,F,B,R);else for(var i=U.length-1;i>=0;i--)(J=U[i])&&(k=(V<3?J(k):V>3?J(F,B,k):J(F,B))||k);return V>3&&k&&Object.defineProperty(F,B,k),k},S=this&&this.__param||function(U,F){return function(B,R){F(B,R,U)}},r=this&&this.__values||function(U){var F=typeof Symbol=="function"&&Symbol.iterator,B=F&&U[F],R=0;if(B)return B.call(U);if(U&&typeof U.length=="number")return{next:function(){return U&&R>=U.length&&(U=void 0),{value:U&&U[R++],done:!U}}};throw new TypeError(F?"Object is not iterable.":"Symbol.iterator is not defined.")},E=this&&this.__read||function(U,F){var B=typeof Symbol=="function"&&U[Symbol.iterator];if(!B)return U;var R,J,V=B.call(U),k=[];try{for(;(F===void 0||F-- >0)&&!(R=V.next()).done;)k.push(R.value)}catch(i){J={error:i}}finally{try{R&&!R.done&&(B=V.return)&&B.call(V)}finally{if(J)throw J.error}}return k};Object.defineProperty(n,"__esModule",{value:!0}),n.Linkifier2=void 0;var d=o(2585),l=o(8460),N=o(844),W=o(3656),Q=function(U){function F(B){var R=U.call(this)||this;return R._bufferService=B,R._linkProviders=[],R._linkCacheDisposables=[],R._isMouseOut=!0,R._activeLine=-1,R._onShowLinkUnderline=R.register(new l.EventEmitter),R._onHideLinkUnderline=R.register(new l.EventEmitter),R.register((0,N.getDisposeArrayDisposable)(R._linkCacheDisposables)),R}return Z(F,U),Object.defineProperty(F.prototype,"currentLink",{get:function(){return this._currentLink},enumerable:!1,configurable:!0}),Object.defineProperty(F.prototype,"onShowLinkUnderline",{get:function(){return this._onShowLinkUnderline.event},enumerable:!1,configurable:!0}),Object.defineProperty(F.prototype,"onHideLinkUnderline",{get:function(){return this._onHideLinkUnderline.event},enumerable:!1,configurable:!0}),F.prototype.registerLinkProvider=function(B){var R=this;return this._linkProviders.push(B),{dispose:function(){var J=R._linkProviders.indexOf(B);J!==-1&&R._linkProviders.splice(J,1)}}},F.prototype.attachToDom=function(B,R,J){var V=this;this._element=B,this._mouseService=R,this._renderService=J,this.register((0,W.addDisposableDomListener)(this._element,"mouseleave",function(){V._isMouseOut=!0,V._clearCurrentLink()})),this.register((0,W.addDisposableDomListener)(this._element,"mousemove",this._onMouseMove.bind(this))),this.register((0,W.addDisposableDomListener)(this._element,"mousedown",this._handleMouseDown.bind(this))),this.register((0,W.addDisposableDomListener)(this._element,"mouseup",this._handleMouseUp.bind(this)))},F.prototype._onMouseMove=function(B){if(this._lastMouseEvent=B,this._element&&this._mouseService){var R=this._positionFromMouseEvent(B,this._element,this._mouseService);if(R){this._isMouseOut=!1;for(var J=B.composedPath(),V=0;V<J.length;V++){var k=J[V];if(k.classList.contains("xterm"))break;if(k.classList.contains("xterm-hover"))return}this._lastBufferCell&&R.x===this._lastBufferCell.x&&R.y===this._lastBufferCell.y||(this._onHover(R),this._lastBufferCell=R)}}},F.prototype._onHover=function(B){if(this._activeLine!==B.y)return this._clearCurrentLink(),void this._askForLink(B,!1);this._currentLink&&this._linkAtPosition(this._currentLink.link,B)||(this._clearCurrentLink(),this._askForLink(B,!0))},F.prototype._askForLink=function(B,R){var J,V,k,i,a=this;this._activeProviderReplies&&R||((k=this._activeProviderReplies)===null||k===void 0||k.forEach(function(c){c==null||c.forEach(function(m){m.link.dispose&&m.link.dispose()})}),this._activeProviderReplies=new Map,this._activeLine=B.y);var h=!1,T=function(c,m){R?!((i=s._activeProviderReplies)===null||i===void 0)&&i.get(c)&&(h=s._checkLinkProviderResult(c,B,h)):m.provideLinks(B.y,function(v){var z,f;if(!a._isMouseOut){var H=v==null?void 0:v.map(function(j){return{link:j}});(z=a._activeProviderReplies)===null||z===void 0||z.set(c,H),h=a._checkLinkProviderResult(c,B,h),((f=a._activeProviderReplies)===null||f===void 0?void 0:f.size)===a._linkProviders.length&&a._removeIntersectingLinks(B.y,a._activeProviderReplies)}})},s=this;try{for(var C=r(this._linkProviders.entries()),D=C.next();!D.done;D=C.next()){var p=E(D.value,2);T(p[0],p[1])}}catch(c){J={error:c}}finally{try{D&&!D.done&&(V=C.return)&&V.call(C)}finally{if(J)throw J.error}}},F.prototype._removeIntersectingLinks=function(B,R){for(var J=new Set,V=0;V<R.size;V++){var k=R.get(V);if(k)for(var i=0;i<k.length;i++)for(var a=k[i],h=a.link.range.start.y<B?0:a.link.range.start.x,T=a.link.range.end.y>B?this._bufferService.cols:a.link.range.end.x,s=h;s<=T;s++){if(J.has(s)){k.splice(i--,1);break}J.add(s)}}},F.prototype._checkLinkProviderResult=function(B,R,J){var V,k=this;if(!this._activeProviderReplies)return J;for(var i=this._activeProviderReplies.get(B),a=!1,h=0;h<B;h++)this._activeProviderReplies.has(h)&&!this._activeProviderReplies.get(h)||(a=!0);if(!a&&i){var T=i.find(function(C){return k._linkAtPosition(C.link,R)});T&&(J=!0,this._handleNewLink(T))}if(this._activeProviderReplies.size===this._linkProviders.length&&!J)for(h=0;h<this._activeProviderReplies.size;h++){var s=(V=this._activeProviderReplies.get(h))===null||V===void 0?void 0:V.find(function(C){return k._linkAtPosition(C.link,R)});if(s){J=!0,this._handleNewLink(s);break}}return J},F.prototype._handleMouseDown=function(){this._mouseDownLink=this._currentLink},F.prototype._handleMouseUp=function(B){if(this._element&&this._mouseService&&this._currentLink){var R=this._positionFromMouseEvent(B,this._element,this._mouseService);R&&this._mouseDownLink===this._currentLink&&this._linkAtPosition(this._currentLink.link,R)&&this._currentLink.link.activate(B,this._currentLink.link.text)}},F.prototype._clearCurrentLink=function(B,R){this._element&&this._currentLink&&this._lastMouseEvent&&(!B||!R||this._currentLink.link.range.start.y>=B&&this._currentLink.link.range.end.y<=R)&&(this._linkLeave(this._element,this._currentLink.link,this._lastMouseEvent),this._currentLink=void 0,(0,N.disposeArray)(this._linkCacheDisposables))},F.prototype._handleNewLink=function(B){var R=this;if(this._element&&this._lastMouseEvent&&this._mouseService){var J=this._positionFromMouseEvent(this._lastMouseEvent,this._element,this._mouseService);J&&this._linkAtPosition(B.link,J)&&(this._currentLink=B,this._currentLink.state={decorations:{underline:B.link.decorations===void 0||B.link.decorations.underline,pointerCursor:B.link.decorations===void 0||B.link.decorations.pointerCursor},isHovered:!0},this._linkHover(this._element,B.link,this._lastMouseEvent),B.link.decorations={},Object.defineProperties(B.link.decorations,{pointerCursor:{get:function(){var V,k;return(k=(V=R._currentLink)===null||V===void 0?void 0:V.state)===null||k===void 0?void 0:k.decorations.pointerCursor},set:function(V){var k,i;((k=R._currentLink)===null||k===void 0?void 0:k.state)&&R._currentLink.state.decorations.pointerCursor!==V&&(R._currentLink.state.decorations.pointerCursor=V,R._currentLink.state.isHovered&&((i=R._element)===null||i===void 0||i.classList.toggle("xterm-cursor-pointer",V)))}},underline:{get:function(){var V,k;return(k=(V=R._currentLink)===null||V===void 0?void 0:V.state)===null||k===void 0?void 0:k.decorations.underline},set:function(V){var k,i,a;((k=R._currentLink)===null||k===void 0?void 0:k.state)&&((a=(i=R._currentLink)===null||i===void 0?void 0:i.state)===null||a===void 0?void 0:a.decorations.underline)!==V&&(R._currentLink.state.decorations.underline=V,R._currentLink.state.isHovered&&R._fireUnderlineEvent(B.link,V))}}}),this._renderService&&this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(function(V){var k=V.start===0?0:V.start+1+R._bufferService.buffer.ydisp;R._clearCurrentLink(k,V.end+1+R._bufferService.buffer.ydisp)})))}},F.prototype._linkHover=function(B,R,J){var V;!((V=this._currentLink)===null||V===void 0)&&V.state&&(this._currentLink.state.isHovered=!0,this._currentLink.state.decorations.underline&&this._fireUnderlineEvent(R,!0),this._currentLink.state.decorations.pointerCursor&&B.classList.add("xterm-cursor-pointer")),R.hover&&R.hover(J,R.text)},F.prototype._fireUnderlineEvent=function(B,R){var J=B.range,V=this._bufferService.buffer.ydisp,k=this._createLinkUnderlineEvent(J.start.x-1,J.start.y-V-1,J.end.x,J.end.y-V-1,void 0);(R?this._onShowLinkUnderline:this._onHideLinkUnderline).fire(k)},F.prototype._linkLeave=function(B,R,J){var V;!((V=this._currentLink)===null||V===void 0)&&V.state&&(this._currentLink.state.isHovered=!1,this._currentLink.state.decorations.underline&&this._fireUnderlineEvent(R,!1),this._currentLink.state.decorations.pointerCursor&&B.classList.remove("xterm-cursor-pointer")),R.leave&&R.leave(J,R.text)},F.prototype._linkAtPosition=function(B,R){var J=B.range.start.y===B.range.end.y,V=B.range.start.y<R.y,k=B.range.end.y>R.y;return(J&&B.range.start.x<=R.x&&B.range.end.x>=R.x||V&&B.range.end.x>=R.x||k&&B.range.start.x<=R.x||V&&k)&&B.range.start.y<=R.y&&B.range.end.y>=R.y},F.prototype._positionFromMouseEvent=function(B,R,J){var V=J.getCoords(B,R,this._bufferService.cols,this._bufferService.rows);if(V)return{x:V[0],y:V[1]+this._bufferService.buffer.ydisp}},F.prototype._createLinkUnderlineEvent=function(B,R,J,V,k){return{x1:B,y1:R,x2:J,y2:V,cols:this._bufferService.cols,fg:k}},e([S(0,d.IBufferService)],F)}(N.Disposable);n.Linkifier2=Q},9042:(x,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.tooMuchOutput=n.promptLabel=void 0,n.promptLabel="Terminal input",n.tooMuchOutput="Too much output to announce, navigate to rows manually to read"},6954:function(x,n,o){var t,Z=this&&this.__extends||(t=function(W,Q){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(U,F){U.__proto__=F}||function(U,F){for(var B in F)Object.prototype.hasOwnProperty.call(F,B)&&(U[B]=F[B])},t(W,Q)},function(W,Q){if(typeof Q!="function"&&Q!==null)throw new TypeError("Class extends value "+String(Q)+" is not a constructor or null");function U(){this.constructor=W}t(W,Q),W.prototype=Q===null?Object.create(Q):(U.prototype=Q.prototype,new U)}),e=this&&this.__decorate||function(W,Q,U,F){var B,R=arguments.length,J=R<3?Q:F===null?F=Object.getOwnPropertyDescriptor(Q,U):F;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")J=Reflect.decorate(W,Q,U,F);else for(var V=W.length-1;V>=0;V--)(B=W[V])&&(J=(R<3?B(J):R>3?B(Q,U,J):B(Q,U))||J);return R>3&&J&&Object.defineProperty(Q,U,J),J},S=this&&this.__param||function(W,Q){return function(U,F){Q(U,F,W)}};Object.defineProperty(n,"__esModule",{value:!0}),n.MouseZoneManager=void 0;var r=o(844),E=o(3656),d=o(4725),l=o(2585),N=function(W){function Q(U,F,B,R,J,V){var k=W.call(this)||this;return k._element=U,k._screenElement=F,k._bufferService=B,k._mouseService=R,k._selectionService=J,k._optionsService=V,k._zones=[],k._areZonesActive=!1,k._lastHoverCoords=[void 0,void 0],k._initialSelectionLength=0,k.register((0,E.addDisposableDomListener)(k._element,"mousedown",function(i){return k._onMouseDown(i)})),k._mouseMoveListener=function(i){return k._onMouseMove(i)},k._mouseLeaveListener=function(i){return k._onMouseLeave(i)},k._clickListener=function(i){return k._onClick(i)},k}return Z(Q,W),Q.prototype.dispose=function(){W.prototype.dispose.call(this),this._deactivate()},Q.prototype.add=function(U){this._zones.push(U),this._zones.length===1&&this._activate()},Q.prototype.clearAll=function(U,F){if(this._zones.length!==0){U&&F||(U=0,F=this._bufferService.rows-1);for(var B=0;B<this._zones.length;B++){var R=this._zones[B];(R.y1>U&&R.y1<=F+1||R.y2>U&&R.y2<=F+1||R.y1<U&&R.y2>F+1)&&(this._currentZone&&this._currentZone===R&&(this._currentZone.leaveCallback(),this._currentZone=void 0),this._zones.splice(B--,1))}this._zones.length===0&&this._deactivate()}},Q.prototype._activate=function(){this._areZonesActive||(this._areZonesActive=!0,this._element.addEventListener("mousemove",this._mouseMoveListener),this._element.addEventListener("mouseleave",this._mouseLeaveListener),this._element.addEventListener("click",this._clickListener))},Q.prototype._deactivate=function(){this._areZonesActive&&(this._areZonesActive=!1,this._element.removeEventListener("mousemove",this._mouseMoveListener),this._element.removeEventListener("mouseleave",this._mouseLeaveListener),this._element.removeEventListener("click",this._clickListener))},Q.prototype._onMouseMove=function(U){this._lastHoverCoords[0]===U.pageX&&this._lastHoverCoords[1]===U.pageY||(this._onHover(U),this._lastHoverCoords=[U.pageX,U.pageY])},Q.prototype._onHover=function(U){var F=this,B=this._findZoneEventAt(U);B!==this._currentZone&&(this._currentZone&&(this._currentZone.leaveCallback(),this._currentZone=void 0,this._tooltipTimeout&&clearTimeout(this._tooltipTimeout)),B&&(this._currentZone=B,B.hoverCallback&&B.hoverCallback(U),this._tooltipTimeout=window.setTimeout(function(){return F._onTooltip(U)},this._optionsService.rawOptions.linkTooltipHoverDuration)))},Q.prototype._onTooltip=function(U){this._tooltipTimeout=void 0;var F=this._findZoneEventAt(U);F==null||F.tooltipCallback(U)},Q.prototype._onMouseDown=function(U){if(this._initialSelectionLength=this._getSelectionLength(),this._areZonesActive){var F=this._findZoneEventAt(U);F!=null&&F.willLinkActivate(U)&&(U.preventDefault(),U.stopImmediatePropagation())}},Q.prototype._onMouseLeave=function(U){this._currentZone&&(this._currentZone.leaveCallback(),this._currentZone=void 0,this._tooltipTimeout&&clearTimeout(this._tooltipTimeout))},Q.prototype._onClick=function(U){var F=this._findZoneEventAt(U),B=this._getSelectionLength();F&&B===this._initialSelectionLength&&(F.clickCallback(U),U.preventDefault(),U.stopImmediatePropagation())},Q.prototype._getSelectionLength=function(){var U=this._selectionService.selectionText;return U?U.length:0},Q.prototype._findZoneEventAt=function(U){var F=this._mouseService.getCoords(U,this._screenElement,this._bufferService.cols,this._bufferService.rows);if(F)for(var B=F[0],R=F[1],J=0;J<this._zones.length;J++){var V=this._zones[J];if(V.y1===V.y2){if(R===V.y1&&B>=V.x1&&B<V.x2)return V}else if(R===V.y1&&B>=V.x1||R===V.y2&&B<V.x2||R>V.y1&&R<V.y2)return V}},e([S(2,l.IBufferService),S(3,d.IMouseService),S(4,d.ISelectionService),S(5,l.IOptionsService)],Q)}(r.Disposable);n.MouseZoneManager=N},6193:function(x,n){var o=this&&this.__values||function(Z){var e=typeof Symbol=="function"&&Symbol.iterator,S=e&&Z[e],r=0;if(S)return S.call(Z);if(Z&&typeof Z.length=="number")return{next:function(){return Z&&r>=Z.length&&(Z=void 0),{value:Z&&Z[r++],done:!Z}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(n,"__esModule",{value:!0}),n.RenderDebouncer=void 0;var t=function(){function Z(e){this._renderCallback=e,this._refreshCallbacks=[]}return Z.prototype.dispose=function(){this._animationFrame&&(window.cancelAnimationFrame(this._animationFrame),this._animationFrame=void 0)},Z.prototype.addRefreshCallback=function(e){var S=this;return this._refreshCallbacks.push(e),this._animationFrame||(this._animationFrame=window.requestAnimationFrame(function(){return S._innerRefresh()})),this._animationFrame},Z.prototype.refresh=function(e,S,r){var E=this;this._rowCount=r,e=e!==void 0?e:0,S=S!==void 0?S:this._rowCount-1,this._rowStart=this._rowStart!==void 0?Math.min(this._rowStart,e):e,this._rowEnd=this._rowEnd!==void 0?Math.max(this._rowEnd,S):S,this._animationFrame||(this._animationFrame=window.requestAnimationFrame(function(){return E._innerRefresh()}))},Z.prototype._innerRefresh=function(){if(this._animationFrame=void 0,this._rowStart!==void 0&&this._rowEnd!==void 0&&this._rowCount!==void 0){var e=Math.max(this._rowStart,0),S=Math.min(this._rowEnd,this._rowCount-1);this._rowStart=void 0,this._rowEnd=void 0,this._renderCallback(e,S),this._runRefreshCallbacks()}else this._runRefreshCallbacks()},Z.prototype._runRefreshCallbacks=function(){var e,S;try{for(var r=o(this._refreshCallbacks),E=r.next();!E.done;E=r.next())(0,E.value)(0)}catch(d){e={error:d}}finally{try{E&&!E.done&&(S=r.return)&&S.call(r)}finally{if(e)throw e.error}}this._refreshCallbacks=[]},Z}();n.RenderDebouncer=t},5596:function(x,n,o){var t,Z=this&&this.__extends||(t=function(S,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(E,d){E.__proto__=d}||function(E,d){for(var l in d)Object.prototype.hasOwnProperty.call(d,l)&&(E[l]=d[l])},t(S,r)},function(S,r){if(typeof r!="function"&&r!==null)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function E(){this.constructor=S}t(S,r),S.prototype=r===null?Object.create(r):(E.prototype=r.prototype,new E)});Object.defineProperty(n,"__esModule",{value:!0}),n.ScreenDprMonitor=void 0;var e=function(S){function r(){var E=S!==null&&S.apply(this,arguments)||this;return E._currentDevicePixelRatio=window.devicePixelRatio,E}return Z(r,S),r.prototype.setListener=function(E){var d=this;this._listener&&this.clearListener(),this._listener=E,this._outerListener=function(){d._listener&&(d._listener(window.devicePixelRatio,d._currentDevicePixelRatio),d._updateDpr())},this._updateDpr()},r.prototype.dispose=function(){S.prototype.dispose.call(this),this.clearListener()},r.prototype._updateDpr=function(){var E;this._outerListener&&((E=this._resolutionMediaMatchList)===null||E===void 0||E.removeListener(this._outerListener),this._currentDevicePixelRatio=window.devicePixelRatio,this._resolutionMediaMatchList=window.matchMedia("screen and (resolution: "+window.devicePixelRatio+"dppx)"),this._resolutionMediaMatchList.addListener(this._outerListener))},r.prototype.clearListener=function(){this._resolutionMediaMatchList&&this._listener&&this._outerListener&&(this._resolutionMediaMatchList.removeListener(this._outerListener),this._resolutionMediaMatchList=void 0,this._listener=void 0,this._outerListener=void 0)},r}(o(844).Disposable);n.ScreenDprMonitor=e},3236:function(x,n,o){var t,Z=this&&this.__extends||(t=function(K,O){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(b,Y){b.__proto__=Y}||function(b,Y){for(var y in Y)Object.prototype.hasOwnProperty.call(Y,y)&&(b[y]=Y[y])},t(K,O)},function(K,O){if(typeof O!="function"&&O!==null)throw new TypeError("Class extends value "+String(O)+" is not a constructor or null");function b(){this.constructor=K}t(K,O),K.prototype=O===null?Object.create(O):(b.prototype=O.prototype,new b)}),e=this&&this.__values||function(K){var O=typeof Symbol=="function"&&Symbol.iterator,b=O&&K[O],Y=0;if(b)return b.call(K);if(K&&typeof K.length=="number")return{next:function(){return K&&Y>=K.length&&(K=void 0),{value:K&&K[Y++],done:!K}}};throw new TypeError(O?"Object is not iterable.":"Symbol.iterator is not defined.")},S=this&&this.__read||function(K,O){var b=typeof Symbol=="function"&&K[Symbol.iterator];if(!b)return K;var Y,y,L=b.call(K),_=[];try{for(;(O===void 0||O-- >0)&&!(Y=L.next()).done;)_.push(Y.value)}catch(q){y={error:q}}finally{try{Y&&!Y.done&&(b=L.return)&&b.call(L)}finally{if(y)throw y.error}}return _},r=this&&this.__spreadArray||function(K,O,b){if(b||arguments.length===2)for(var Y,y=0,L=O.length;y<L;y++)!Y&&y in O||(Y||(Y=Array.prototype.slice.call(O,0,y)),Y[y]=O[y]);return K.concat(Y||Array.prototype.slice.call(O))};Object.defineProperty(n,"__esModule",{value:!0}),n.Terminal=void 0;var E=o(2950),d=o(1680),l=o(3614),N=o(2584),W=o(5435),Q=o(3525),U=o(3551),F=o(9312),B=o(6114),R=o(3656),J=o(9042),V=o(357),k=o(6954),i=o(4567),a=o(1296),h=o(7399),T=o(8460),s=o(8437),C=o(5680),D=o(3230),p=o(4725),c=o(428),m=o(8934),v=o(6465),z=o(5114),f=o(8969),H=o(8055),j=o(4269),w=o(5941),M=o(3107),P=o(5744),g=o(9074),UU=o(2585),X=typeof window<"u"?window.document:null,$=function(K){function O(b){b===void 0&&(b={});var Y=K.call(this,b)||this;return Y.browser=B,Y._keyDownHandled=!1,Y._keyDownSeen=!1,Y._keyPressHandled=!1,Y._unprocessedDeadKey=!1,Y._onCursorMove=new T.EventEmitter,Y._onKey=new T.EventEmitter,Y._onRender=new T.EventEmitter,Y._onSelectionChange=new T.EventEmitter,Y._onTitleChange=new T.EventEmitter,Y._onBell=new T.EventEmitter,Y._onFocus=new T.EventEmitter,Y._onBlur=new T.EventEmitter,Y._onA11yCharEmitter=new T.EventEmitter,Y._onA11yTabEmitter=new T.EventEmitter,Y._setup(),Y.linkifier=Y._instantiationService.createInstance(U.Linkifier),Y.linkifier2=Y.register(Y._instantiationService.createInstance(v.Linkifier2)),Y._decorationService=Y._instantiationService.createInstance(g.DecorationService),Y._instantiationService.setService(UU.IDecorationService,Y._decorationService),Y.register(Y._inputHandler.onRequestBell(function(){return Y.bell()})),Y.register(Y._inputHandler.onRequestRefreshRows(function(y,L){return Y.refresh(y,L)})),Y.register(Y._inputHandler.onRequestSendFocus(function(){return Y._reportFocus()})),Y.register(Y._inputHandler.onRequestReset(function(){return Y.reset()})),Y.register(Y._inputHandler.onRequestWindowsOptionsReport(function(y){return Y._reportWindowsOptions(y)})),Y.register(Y._inputHandler.onColor(function(y){return Y._handleColorEvent(y)})),Y.register((0,T.forwardEvent)(Y._inputHandler.onCursorMove,Y._onCursorMove)),Y.register((0,T.forwardEvent)(Y._inputHandler.onTitleChange,Y._onTitleChange)),Y.register((0,T.forwardEvent)(Y._inputHandler.onA11yChar,Y._onA11yCharEmitter)),Y.register((0,T.forwardEvent)(Y._inputHandler.onA11yTab,Y._onA11yTabEmitter)),Y.register(Y._bufferService.onResize(function(y){return Y._afterResize(y.cols,y.rows)})),Y}return Z(O,K),Object.defineProperty(O.prototype,"onCursorMove",{get:function(){return this._onCursorMove.event},enumerable:!1,configurable:!0}),Object.defineProperty(O.prototype,"onKey",{get:function(){return this._onKey.event},enumerable:!1,configurable:!0}),Object.defineProperty(O.prototype,"onRender",{get:function(){return this._onRender.event},enumerable:!1,configurable:!0}),Object.defineProperty(O.prototype,"onSelectionChange",{get:function(){return this._onSelectionChange.event},enumerable:!1,configurable:!0}),Object.defineProperty(O.prototype,"onTitleChange",{get:function(){return this._onTitleChange.event},enumerable:!1,configurable:!0}),Object.defineProperty(O.prototype,"onBell",{get:function(){return this._onBell.event},enumerable:!1,configurable:!0}),Object.defineProperty(O.prototype,"onFocus",{get:function(){return this._onFocus.event},enumerable:!1,configurable:!0}),Object.defineProperty(O.prototype,"onBlur",{get:function(){return this._onBlur.event},enumerable:!1,configurable:!0}),Object.defineProperty(O.prototype,"onA11yChar",{get:function(){return this._onA11yCharEmitter.event},enumerable:!1,configurable:!0}),Object.defineProperty(O.prototype,"onA11yTab",{get:function(){return this._onA11yTabEmitter.event},enumerable:!1,configurable:!0}),O.prototype._handleColorEvent=function(b){var Y,y,L,_;if(this._colorManager){try{for(var q=e(b),QU=q.next();!QU.done;QU=q.next()){var VU=QU.value,lU=void 0,I="";switch(VU.index){case 256:lU="foreground",I="10";break;case 257:lU="background",I="11";break;case 258:lU="cursor",I="12";break;default:lU="ansi",I="4;"+VU.index}if(lU)switch(VU.type){case 0:var dU=H.color.toColorRGB(lU==="ansi"?this._colorManager.colors.ansi[VU.index]:this._colorManager.colors[lU]);this.coreService.triggerDataEvent(N.C0.ESC+"]"+I+";"+(0,w.toRgbString)(dU)+N.C1_ESCAPED.ST);break;case 1:lU==="ansi"?this._colorManager.colors.ansi[VU.index]=H.rgba.toColor.apply(H.rgba,r([],S(VU.color),!1)):this._colorManager.colors[lU]=H.rgba.toColor.apply(H.rgba,r([],S(VU.color),!1));break;case 2:this._colorManager.restoreColor(VU.index)}}}catch(NU){Y={error:NU}}finally{try{QU&&!QU.done&&(y=q.return)&&y.call(q)}finally{if(Y)throw Y.error}}(L=this._renderService)===null||L===void 0||L.setColors(this._colorManager.colors),(_=this.viewport)===null||_===void 0||_.onThemeChange(this._colorManager.colors)}},O.prototype.dispose=function(){var b,Y,y;this._isDisposed||(K.prototype.dispose.call(this),(b=this._renderService)===null||b===void 0||b.dispose(),this._customKeyEventHandler=void 0,this.write=function(){},(y=(Y=this.element)===null||Y===void 0?void 0:Y.parentNode)===null||y===void 0||y.removeChild(this.element))},O.prototype._setup=function(){K.prototype._setup.call(this),this._customKeyEventHandler=void 0},Object.defineProperty(O.prototype,"buffer",{get:function(){return this.buffers.active},enumerable:!1,configurable:!0}),O.prototype.focus=function(){this.textarea&&this.textarea.focus({preventScroll:!0})},O.prototype._updateOptions=function(b){var Y,y,L,_;switch(K.prototype._updateOptions.call(this,b),b){case"fontFamily":case"fontSize":(Y=this._renderService)===null||Y===void 0||Y.clear(),(y=this._charSizeService)===null||y===void 0||y.measure();break;case"cursorBlink":case"cursorStyle":this.refresh(this.buffer.y,this.buffer.y);break;case"customGlyphs":case"drawBoldTextInBrightColors":case"letterSpacing":case"lineHeight":case"fontWeight":case"fontWeightBold":case"minimumContrastRatio":this._renderService&&(this._renderService.clear(),this._renderService.onResize(this.cols,this.rows),this.refresh(0,this.rows-1));break;case"rendererType":this._renderService&&(this._renderService.setRenderer(this._createRenderer()),this._renderService.onResize(this.cols,this.rows));break;case"scrollback":(L=this.viewport)===null||L===void 0||L.syncScrollArea();break;case"screenReaderMode":this.optionsService.rawOptions.screenReaderMode?!this._accessibilityManager&&this._renderService&&(this._accessibilityManager=new i.AccessibilityManager(this,this._renderService)):((_=this._accessibilityManager)===null||_===void 0||_.dispose(),this._accessibilityManager=void 0);break;case"tabStopWidth":this.buffers.setupTabStops();break;case"theme":this._setTheme(this.optionsService.rawOptions.theme)}},O.prototype._onTextAreaFocus=function(b){this.coreService.decPrivateModes.sendFocus&&this.coreService.triggerDataEvent(N.C0.ESC+"[I"),this.updateCursorStyle(b),this.element.classList.add("focus"),this._showCursor(),this._onFocus.fire()},O.prototype.blur=function(){var b;return(b=this.textarea)===null||b===void 0?void 0:b.blur()},O.prototype._onTextAreaBlur=function(){this.textarea.value="",this.refresh(this.buffer.y,this.buffer.y),this.coreService.decPrivateModes.sendFocus&&this.coreService.triggerDataEvent(N.C0.ESC+"[O"),this.element.classList.remove("focus"),this._onBlur.fire()},O.prototype._syncTextArea=function(){if(this.textarea&&this.buffer.isCursorInViewport&&!this._compositionHelper.isComposing&&this._renderService){var b=this.buffer.ybase+this.buffer.y,Y=this.buffer.lines.get(b);if(Y){var y=Math.min(this.buffer.x,this.cols-1),L=this._renderService.dimensions.actualCellHeight,_=Y.getWidth(y),q=this._renderService.dimensions.actualCellWidth*_,QU=this.buffer.y*this._renderService.dimensions.actualCellHeight,VU=y*this._renderService.dimensions.actualCellWidth;this.textarea.style.left=VU+"px",this.textarea.style.top=QU+"px",this.textarea.style.width=q+"px",this.textarea.style.height=L+"px",this.textarea.style.lineHeight=L+"px",this.textarea.style.zIndex="-5"}}},O.prototype._initGlobal=function(){var b=this;this._bindKeys(),this.register((0,R.addDisposableDomListener)(this.element,"copy",function(y){b.hasSelection()&&(0,l.copyHandler)(y,b._selectionService)}));var Y=function(y){return(0,l.handlePasteEvent)(y,b.textarea,b.coreService)};this.register((0,R.addDisposableDomListener)(this.textarea,"paste",Y)),this.register((0,R.addDisposableDomListener)(this.element,"paste",Y)),B.isFirefox?this.register((0,R.addDisposableDomListener)(this.element,"mousedown",function(y){y.button===2&&(0,l.rightClickHandler)(y,b.textarea,b.screenElement,b._selectionService,b.options.rightClickSelectsWord)})):this.register((0,R.addDisposableDomListener)(this.element,"contextmenu",function(y){(0,l.rightClickHandler)(y,b.textarea,b.screenElement,b._selectionService,b.options.rightClickSelectsWord)})),B.isLinux&&this.register((0,R.addDisposableDomListener)(this.element,"auxclick",function(y){y.button===1&&(0,l.moveTextAreaUnderMouseCursor)(y,b.textarea,b.screenElement)}))},O.prototype._bindKeys=function(){var b=this;this.register((0,R.addDisposableDomListener)(this.textarea,"keyup",function(Y){return b._keyUp(Y)},!0)),this.register((0,R.addDisposableDomListener)(this.textarea,"keydown",function(Y){return b._keyDown(Y)},!0)),this.register((0,R.addDisposableDomListener)(this.textarea,"keypress",function(Y){return b._keyPress(Y)},!0)),this.register((0,R.addDisposableDomListener)(this.textarea,"compositionstart",function(){return b._compositionHelper.compositionstart()})),this.register((0,R.addDisposableDomListener)(this.textarea,"compositionupdate",function(Y){return b._compositionHelper.compositionupdate(Y)})),this.register((0,R.addDisposableDomListener)(this.textarea,"compositionend",function(){return b._compositionHelper.compositionend()})),this.register((0,R.addDisposableDomListener)(this.textarea,"input",function(Y){return b._inputEvent(Y)},!0)),this.register(this.onRender(function(){return b._compositionHelper.updateCompositionElements()})),this.register(this.onRender(function(Y){return b._queueLinkification(Y.start,Y.end)}))},O.prototype.open=function(b){var Y=this;if(!b)throw new Error("Terminal requires a parent element.");b.isConnected||this._logService.debug("Terminal.open was called on an element that was not attached to the DOM"),this._document=b.ownerDocument,this.element=this._document.createElement("div"),this.element.dir="ltr",this.element.classList.add("terminal"),this.element.classList.add("xterm"),this.element.setAttribute("tabindex","0"),b.appendChild(this.element);var y=X.createDocumentFragment();this._viewportElement=X.createElement("div"),this._viewportElement.classList.add("xterm-viewport"),y.appendChild(this._viewportElement),this._viewportScrollArea=X.createElement("div"),this._viewportScrollArea.classList.add("xterm-scroll-area"),this._viewportElement.appendChild(this._viewportScrollArea),this.screenElement=X.createElement("div"),this.screenElement.classList.add("xterm-screen"),this._helperContainer=X.createElement("div"),this._helperContainer.classList.add("xterm-helpers"),this.screenElement.appendChild(this._helperContainer),y.appendChild(this.screenElement),this.textarea=X.createElement("textarea"),this.textarea.classList.add("xterm-helper-textarea"),this.textarea.setAttribute("aria-label",J.promptLabel),this.textarea.setAttribute("aria-multiline","false"),this.textarea.setAttribute("autocorrect","off"),this.textarea.setAttribute("autocapitalize","off"),this.textarea.setAttribute("spellcheck","false"),this.textarea.tabIndex=0,this.register((0,R.addDisposableDomListener)(this.textarea,"focus",function(q){return Y._onTextAreaFocus(q)})),this.register((0,R.addDisposableDomListener)(this.textarea,"blur",function(){return Y._onTextAreaBlur()})),this._helperContainer.appendChild(this.textarea);var L=this._instantiationService.createInstance(z.CoreBrowserService,this.textarea);this._instantiationService.setService(p.ICoreBrowserService,L),this._charSizeService=this._instantiationService.createInstance(c.CharSizeService,this._document,this._helperContainer),this._instantiationService.setService(p.ICharSizeService,this._charSizeService),this._theme=this.options.theme||this._theme,this._colorManager=new C.ColorManager(X,this.options.allowTransparency),this.register(this.optionsService.onOptionChange(function(q){return Y._colorManager.onOptionsChange(q)})),this._colorManager.setTheme(this._theme),this._characterJoinerService=this._instantiationService.createInstance(j.CharacterJoinerService),this._instantiationService.setService(p.ICharacterJoinerService,this._characterJoinerService);var _=this._createRenderer();this._renderService=this.register(this._instantiationService.createInstance(D.RenderService,_,this.rows,this.screenElement)),this._instantiationService.setService(p.IRenderService,this._renderService),this.register(this._renderService.onRenderedViewportChange(function(q){return Y._onRender.fire(q)})),this.onResize(function(q){return Y._renderService.resize(q.cols,q.rows)}),this._compositionView=X.createElement("div"),this._compositionView.classList.add("composition-view"),this._compositionHelper=this._instantiationService.createInstance(E.CompositionHelper,this.textarea,this._compositionView),this._helperContainer.appendChild(this._compositionView),this.element.appendChild(y),this._soundService=this._instantiationService.createInstance(V.SoundService),this._instantiationService.setService(p.ISoundService,this._soundService),this._mouseService=this._instantiationService.createInstance(m.MouseService),this._instantiationService.setService(p.IMouseService,this._mouseService),this.viewport=this._instantiationService.createInstance(d.Viewport,function(q){return Y.scrollLines(q,!0,1)},this._viewportElement,this._viewportScrollArea,this.element),this.viewport.onThemeChange(this._colorManager.colors),this.register(this._inputHandler.onRequestSyncScrollBar(function(){return Y.viewport.syncScrollArea()})),this.register(this.viewport),this.register(this.onCursorMove(function(){Y._renderService.onCursorMove(),Y._syncTextArea()})),this.register(this.onResize(function(){return Y._renderService.onResize(Y.cols,Y.rows)})),this.register(this.onBlur(function(){return Y._renderService.onBlur()})),this.register(this.onFocus(function(){return Y._renderService.onFocus()})),this.register(this._renderService.onDimensionsChange(function(){return Y.viewport.syncScrollArea()})),this._selectionService=this.register(this._instantiationService.createInstance(F.SelectionService,this.element,this.screenElement,this.linkifier2)),this._instantiationService.setService(p.ISelectionService,this._selectionService),this.register(this._selectionService.onRequestScrollLines(function(q){return Y.scrollLines(q.amount,q.suppressScrollEvent)})),this.register(this._selectionService.onSelectionChange(function(){return Y._onSelectionChange.fire()})),this.register(this._selectionService.onRequestRedraw(function(q){return Y._renderService.onSelectionChanged(q.start,q.end,q.columnSelectMode)})),this.register(this._selectionService.onLinuxMouseSelection(function(q){Y.textarea.value=q,Y.textarea.focus(),Y.textarea.select()})),this.register(this._onScroll.event(function(q){Y.viewport.syncScrollArea(),Y._selectionService.refresh()})),this.register((0,R.addDisposableDomListener)(this._viewportElement,"scroll",function(){return Y._selectionService.refresh()})),this._mouseZoneManager=this._instantiationService.createInstance(k.MouseZoneManager,this.element,this.screenElement),this.register(this._mouseZoneManager),this.register(this.onScroll(function(){return Y._mouseZoneManager.clearAll()})),this.linkifier.attachToDom(this.element,this._mouseZoneManager),this.linkifier2.attachToDom(this.screenElement,this._mouseService,this._renderService),this.register(this._instantiationService.createInstance(M.BufferDecorationRenderer,this.screenElement)),this.register((0,R.addDisposableDomListener)(this.element,"mousedown",function(q){return Y._selectionService.onMouseDown(q)})),this.coreMouseService.areMouseEventsActive?(this._selectionService.disable(),this.element.classList.add("enable-mouse-events")):this._selectionService.enable(),this.options.screenReaderMode&&(this._accessibilityManager=new i.AccessibilityManager(this,this._renderService)),this.options.overviewRulerWidth&&(this._overviewRulerRenderer=this._instantiationService.createInstance(P.OverviewRulerRenderer,this._viewportElement,this.screenElement)),this.optionsService.onOptionChange(function(){!Y._overviewRulerRenderer&&Y.options.overviewRulerWidth&&Y._viewportElement&&Y.screenElement&&(Y._overviewRulerRenderer=Y._instantiationService.createInstance(P.OverviewRulerRenderer,Y._viewportElement,Y.screenElement))}),this._charSizeService.measure(),this.refresh(0,this.rows-1),this._initGlobal(),this.bindMouse()},O.prototype._createRenderer=function(){switch(this.options.rendererType){case"canvas":return this._instantiationService.createInstance(Q.Renderer,this._colorManager.colors,this.screenElement,this.linkifier,this.linkifier2);case"dom":return this._instantiationService.createInstance(a.DomRenderer,this._colorManager.colors,this.element,this.screenElement,this._viewportElement,this.linkifier,this.linkifier2);default:throw new Error('Unrecognized rendererType "'+this.options.rendererType+'"')}},O.prototype._setTheme=function(b){var Y,y,L;this._theme=b,(Y=this._colorManager)===null||Y===void 0||Y.setTheme(b),(y=this._renderService)===null||y===void 0||y.setColors(this._colorManager.colors),(L=this.viewport)===null||L===void 0||L.onThemeChange(this._colorManager.colors)},O.prototype.bindMouse=function(){var b=this,Y=this,y=this.element;function L(I){var dU,NU,oU=Y._mouseService.getRawByteCoords(I,Y.screenElement,Y.cols,Y.rows);if(!oU)return!1;switch(I.overrideType||I.type){case"mousemove":NU=32,I.buttons===void 0?(dU=3,I.button!==void 0&&(dU=I.button<3?I.button:3)):dU=1&I.buttons?0:4&I.buttons?1:2&I.buttons?2:3;break;case"mouseup":NU=0,dU=I.button<3?I.button:3;break;case"mousedown":NU=1,dU=I.button<3?I.button:3;break;case"wheel":if(Y.viewport.getLinesScrolled(I)===0)return!1;NU=I.deltaY<0?0:1,dU=4;break;default:return!1}return!(NU===void 0||dU===void 0||dU>4)&&Y.coreMouseService.triggerMouseEvent({col:oU.x-33,row:oU.y-33,button:dU,action:NU,ctrl:I.ctrlKey,alt:I.altKey,shift:I.shiftKey})}var _={mouseup:null,wheel:null,mousedrag:null,mousemove:null},q=function(I){return L(I),I.buttons||(b._document.removeEventListener("mouseup",_.mouseup),_.mousedrag&&b._document.removeEventListener("mousemove",_.mousedrag)),b.cancel(I)},QU=function(I){return L(I),b.cancel(I,!0)},VU=function(I){I.buttons&&L(I)},lU=function(I){I.buttons||L(I)};this.register(this.coreMouseService.onProtocolChange(function(I){I?(b.optionsService.rawOptions.logLevel==="debug"&&b._logService.debug("Binding to mouse events:",b.coreMouseService.explainEvents(I)),b.element.classList.add("enable-mouse-events"),b._selectionService.disable()):(b._logService.debug("Unbinding from mouse events."),b.element.classList.remove("enable-mouse-events"),b._selectionService.enable()),8&I?_.mousemove||(y.addEventListener("mousemove",lU),_.mousemove=lU):(y.removeEventListener("mousemove",_.mousemove),_.mousemove=null),16&I?_.wheel||(y.addEventListener("wheel",QU,{passive:!1}),_.wheel=QU):(y.removeEventListener("wheel",_.wheel),_.wheel=null),2&I?_.mouseup||(_.mouseup=q):(b._document.removeEventListener("mouseup",_.mouseup),_.mouseup=null),4&I?_.mousedrag||(_.mousedrag=VU):(b._document.removeEventListener("mousemove",_.mousedrag),_.mousedrag=null)})),this.coreMouseService.activeProtocol=this.coreMouseService.activeProtocol,this.register((0,R.addDisposableDomListener)(y,"mousedown",function(I){if(I.preventDefault(),b.focus(),b.coreMouseService.areMouseEventsActive&&!b._selectionService.shouldForceSelection(I))return L(I),_.mouseup&&b._document.addEventListener("mouseup",_.mouseup),_.mousedrag&&b._document.addEventListener("mousemove",_.mousedrag),b.cancel(I)})),this.register((0,R.addDisposableDomListener)(y,"wheel",function(I){if(!_.wheel){if(!b.buffer.hasScrollback){var dU=b.viewport.getLinesScrolled(I);if(dU===0)return;for(var NU=N.C0.ESC+(b.coreService.decPrivateModes.applicationCursorKeys?"O":"[")+(I.deltaY<0?"A":"B"),oU="",uU=0;uU<Math.abs(dU);uU++)oU+=NU;return b.coreService.triggerDataEvent(oU,!0),b.cancel(I,!0)}return b.viewport.onWheel(I)?b.cancel(I):void 0}},{passive:!1})),this.register((0,R.addDisposableDomListener)(y,"touchstart",function(I){if(!b.coreMouseService.areMouseEventsActive)return b.viewport.onTouchStart(I),b.cancel(I)},{passive:!0})),this.register((0,R.addDisposableDomListener)(y,"touchmove",function(I){if(!b.coreMouseService.areMouseEventsActive)return b.viewport.onTouchMove(I)?void 0:b.cancel(I)},{passive:!1}))},O.prototype.refresh=function(b,Y){var y;(y=this._renderService)===null||y===void 0||y.refreshRows(b,Y)},O.prototype._queueLinkification=function(b,Y){var y;(y=this.linkifier)===null||y===void 0||y.linkifyRows(b,Y)},O.prototype.updateCursorStyle=function(b){var Y;!((Y=this._selectionService)===null||Y===void 0)&&Y.shouldColumnSelect(b)?this.element.classList.add("column-select"):this.element.classList.remove("column-select")},O.prototype._showCursor=function(){this.coreService.isCursorInitialized||(this.coreService.isCursorInitialized=!0,this.refresh(this.buffer.y,this.buffer.y))},O.prototype.scrollLines=function(b,Y,y){y===void 0&&(y=0),K.prototype.scrollLines.call(this,b,Y,y),this.refresh(0,this.rows-1)},O.prototype.paste=function(b){(0,l.paste)(b,this.textarea,this.coreService)},O.prototype.attachCustomKeyEventHandler=function(b){this._customKeyEventHandler=b},O.prototype.registerLinkMatcher=function(b,Y,y){var L=this.linkifier.registerLinkMatcher(b,Y,y);return this.refresh(0,this.rows-1),L},O.prototype.deregisterLinkMatcher=function(b){this.linkifier.deregisterLinkMatcher(b)&&this.refresh(0,this.rows-1)},O.prototype.registerLinkProvider=function(b){return this.linkifier2.registerLinkProvider(b)},O.prototype.registerCharacterJoiner=function(b){if(!this._characterJoinerService)throw new Error("Terminal must be opened first");var Y=this._characterJoinerService.register(b);return this.refresh(0,this.rows-1),Y},O.prototype.deregisterCharacterJoiner=function(b){if(!this._characterJoinerService)throw new Error("Terminal must be opened first");this._characterJoinerService.deregister(b)&&this.refresh(0,this.rows-1)},Object.defineProperty(O.prototype,"markers",{get:function(){return this.buffer.markers},enumerable:!1,configurable:!0}),O.prototype.addMarker=function(b){if(this.buffer===this.buffers.normal)return this.buffer.addMarker(this.buffer.ybase+this.buffer.y+b)},O.prototype.registerDecoration=function(b){return this._decorationService.registerDecoration(b)},O.prototype.hasSelection=function(){return!!this._selectionService&&this._selectionService.hasSelection},O.prototype.select=function(b,Y,y){this._selectionService.setSelection(b,Y,y)},O.prototype.getSelection=function(){return this._selectionService?this._selectionService.selectionText:""},O.prototype.getSelectionPosition=function(){if(this._selectionService&&this._selectionService.hasSelection)return{startColumn:this._selectionService.selectionStart[0],startRow:this._selectionService.selectionStart[1],endColumn:this._selectionService.selectionEnd[0],endRow:this._selectionService.selectionEnd[1]}},O.prototype.clearSelection=function(){var b;(b=this._selectionService)===null||b===void 0||b.clearSelection()},O.prototype.selectAll=function(){var b;(b=this._selectionService)===null||b===void 0||b.selectAll()},O.prototype.selectLines=function(b,Y){var y;(y=this._selectionService)===null||y===void 0||y.selectLines(b,Y)},O.prototype._keyDown=function(b){if(this._keyDownHandled=!1,this._keyDownSeen=!0,this._customKeyEventHandler&&this._customKeyEventHandler(b)===!1)return!1;var Y=this.browser.isMac&&this.options.macOptionIsMeta&&b.altKey;if(!Y&&!this._compositionHelper.keydown(b))return this.buffer.ybase!==this.buffer.ydisp&&this._bufferService.scrollToBottom(),!1;Y||b.key!=="Dead"&&b.key!=="AltGraph"||(this._unprocessedDeadKey=!0);var y=(0,h.evaluateKeyboardEvent)(b,this.coreService.decPrivateModes.applicationCursorKeys,this.browser.isMac,this.options.macOptionIsMeta);if(this.updateCursorStyle(b),y.type===3||y.type===2){var L=this.rows-1;return this.scrollLines(y.type===2?-L:L),this.cancel(b,!0)}return y.type===1&&this.selectAll(),!!this._isThirdLevelShift(this.browser,b)||(y.cancel&&this.cancel(b,!0),!y.key||!!(b.key&&!b.ctrlKey&&!b.altKey&&!b.metaKey&&b.key.length===1&&b.key.charCodeAt(0)>=65&&b.key.charCodeAt(0)<=90)||(this._unprocessedDeadKey?(this._unprocessedDeadKey=!1,!0):(y.key!==N.C0.ETX&&y.key!==N.C0.CR||(this.textarea.value=""),this._onKey.fire({key:y.key,domEvent:b}),this._showCursor(),this.coreService.triggerDataEvent(y.key,!0),this.optionsService.rawOptions.screenReaderMode?void(this._keyDownHandled=!0):this.cancel(b,!0))))},O.prototype._isThirdLevelShift=function(b,Y){var y=b.isMac&&!this.options.macOptionIsMeta&&Y.altKey&&!Y.ctrlKey&&!Y.metaKey||b.isWindows&&Y.altKey&&Y.ctrlKey&&!Y.metaKey||b.isWindows&&Y.getModifierState("AltGraph");return Y.type==="keypress"?y:y&&(!Y.keyCode||Y.keyCode>47)},O.prototype._keyUp=function(b){this._keyDownSeen=!1,this._customKeyEventHandler&&this._customKeyEventHandler(b)===!1||(function(Y){return Y.keyCode===16||Y.keyCode===17||Y.keyCode===18}(b)||this.focus(),this.updateCursorStyle(b),this._keyPressHandled=!1)},O.prototype._keyPress=function(b){var Y;if(this._keyPressHandled=!1,this._keyDownHandled||this._customKeyEventHandler&&this._customKeyEventHandler(b)===!1)return!1;if(this.cancel(b),b.charCode)Y=b.charCode;else if(b.which===null||b.which===void 0)Y=b.keyCode;else{if(b.which===0||b.charCode===0)return!1;Y=b.which}return!(!Y||(b.altKey||b.ctrlKey||b.metaKey)&&!this._isThirdLevelShift(this.browser,b)||(Y=String.fromCharCode(Y),this._onKey.fire({key:Y,domEvent:b}),this._showCursor(),this.coreService.triggerDataEvent(Y,!0),this._keyPressHandled=!0,this._unprocessedDeadKey=!1,0))},O.prototype._inputEvent=function(b){if(b.data&&b.inputType==="insertText"&&(!b.composed||!this._keyDownSeen)&&!this.optionsService.rawOptions.screenReaderMode){if(this._keyPressHandled)return!1;this._unprocessedDeadKey=!1;var Y=b.data;return this.coreService.triggerDataEvent(Y,!0),this.cancel(b),!0}return!1},O.prototype.bell=function(){var b;this._soundBell()&&((b=this._soundService)===null||b===void 0||b.playBellSound()),this._onBell.fire()},O.prototype.resize=function(b,Y){b!==this.cols||Y!==this.rows?K.prototype.resize.call(this,b,Y):this._charSizeService&&!this._charSizeService.hasValidSize&&this._charSizeService.measure()},O.prototype._afterResize=function(b,Y){var y,L;(y=this._charSizeService)===null||y===void 0||y.measure(),(L=this.viewport)===null||L===void 0||L.syncScrollArea(!0)},O.prototype.clear=function(){if(this.buffer.ybase!==0||this.buffer.y!==0){this.buffer.clearAllMarkers(),this.buffer.lines.set(0,this.buffer.lines.get(this.buffer.ybase+this.buffer.y)),this.buffer.lines.length=1,this.buffer.ydisp=0,this.buffer.ybase=0,this.buffer.y=0;for(var b=1;b<this.rows;b++)this.buffer.lines.push(this.buffer.getBlankLine(s.DEFAULT_ATTR_DATA));this.refresh(0,this.rows-1),this._onScroll.fire({position:this.buffer.ydisp,source:0})}},O.prototype.reset=function(){var b,Y;this.options.rows=this.rows,this.options.cols=this.cols;var y=this._customKeyEventHandler;this._setup(),K.prototype.reset.call(this),(b=this._selectionService)===null||b===void 0||b.reset(),this._decorationService.reset(),this._customKeyEventHandler=y,this.refresh(0,this.rows-1),(Y=this.viewport)===null||Y===void 0||Y.syncScrollArea()},O.prototype.clearTextureAtlas=function(){var b;(b=this._renderService)===null||b===void 0||b.clearTextureAtlas()},O.prototype._reportFocus=function(){var b;!((b=this.element)===null||b===void 0)&&b.classList.contains("focus")?this.coreService.triggerDataEvent(N.C0.ESC+"[I"):this.coreService.triggerDataEvent(N.C0.ESC+"[O")},O.prototype._reportWindowsOptions=function(b){if(this._renderService)switch(b){case W.WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:var Y=this._renderService.dimensions.scaledCanvasWidth.toFixed(0),y=this._renderService.dimensions.scaledCanvasHeight.toFixed(0);this.coreService.triggerDataEvent(N.C0.ESC+"[4;"+y+";"+Y+"t");break;case W.WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:var L=this._renderService.dimensions.scaledCellWidth.toFixed(0),_=this._renderService.dimensions.scaledCellHeight.toFixed(0);this.coreService.triggerDataEvent(N.C0.ESC+"[6;"+_+";"+L+"t")}},O.prototype.cancel=function(b,Y){if(this.options.cancelEvents||Y)return b.preventDefault(),b.stopPropagation(),!1},O.prototype._visualBell=function(){return!1},O.prototype._soundBell=function(){return this.options.bellStyle==="sound"},O}(f.CoreTerminal);n.Terminal=$},9924:(x,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.TimeBasedDebouncer=void 0;var o=function(){function t(Z,e){e===void 0&&(e=1e3),this._renderCallback=Z,this._debounceThresholdMS=e,this._lastRefreshMs=0,this._additionalRefreshRequested=!1}return t.prototype.dispose=function(){this._refreshTimeoutID&&clearTimeout(this._refreshTimeoutID)},t.prototype.refresh=function(Z,e,S){var r=this;this._rowCount=S,Z=Z!==void 0?Z:0,e=e!==void 0?e:this._rowCount-1,this._rowStart=this._rowStart!==void 0?Math.min(this._rowStart,Z):Z,this._rowEnd=this._rowEnd!==void 0?Math.max(this._rowEnd,e):e;var E=Date.now();if(E-this._lastRefreshMs>=this._debounceThresholdMS)this._lastRefreshMs=E,this._innerRefresh();else if(!this._additionalRefreshRequested){var d=E-this._lastRefreshMs,l=this._debounceThresholdMS-d;this._additionalRefreshRequested=!0,this._refreshTimeoutID=window.setTimeout(function(){r._lastRefreshMs=Date.now(),r._innerRefresh(),r._additionalRefreshRequested=!1,r._refreshTimeoutID=void 0},l)}},t.prototype._innerRefresh=function(){if(this._rowStart!==void 0&&this._rowEnd!==void 0&&this._rowCount!==void 0){var Z=Math.max(this._rowStart,0),e=Math.min(this._rowEnd,this._rowCount-1);this._rowStart=void 0,this._rowEnd=void 0,this._renderCallback(Z,e)}},t}();n.TimeBasedDebouncer=o},1680:function(x,n,o){var t,Z=this&&this.__extends||(t=function(W,Q){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(U,F){U.__proto__=F}||function(U,F){for(var B in F)Object.prototype.hasOwnProperty.call(F,B)&&(U[B]=F[B])},t(W,Q)},function(W,Q){if(typeof Q!="function"&&Q!==null)throw new TypeError("Class extends value "+String(Q)+" is not a constructor or null");function U(){this.constructor=W}t(W,Q),W.prototype=Q===null?Object.create(Q):(U.prototype=Q.prototype,new U)}),e=this&&this.__decorate||function(W,Q,U,F){var B,R=arguments.length,J=R<3?Q:F===null?F=Object.getOwnPropertyDescriptor(Q,U):F;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")J=Reflect.decorate(W,Q,U,F);else for(var V=W.length-1;V>=0;V--)(B=W[V])&&(J=(R<3?B(J):R>3?B(Q,U,J):B(Q,U))||J);return R>3&&J&&Object.defineProperty(Q,U,J),J},S=this&&this.__param||function(W,Q){return function(U,F){Q(U,F,W)}};Object.defineProperty(n,"__esModule",{value:!0}),n.Viewport=void 0;var r=o(844),E=o(3656),d=o(4725),l=o(2585),N=function(W){function Q(U,F,B,R,J,V,k,i){var a=W.call(this)||this;return a._scrollLines=U,a._viewportElement=F,a._scrollArea=B,a._element=R,a._bufferService=J,a._optionsService=V,a._charSizeService=k,a._renderService=i,a.scrollBarWidth=0,a._currentRowHeight=0,a._currentScaledCellHeight=0,a._lastRecordedBufferLength=0,a._lastRecordedViewportHeight=0,a._lastRecordedBufferHeight=0,a._lastTouchY=0,a._lastScrollTop=0,a._wheelPartialScroll=0,a._refreshAnimationFrame=null,a._ignoreNextScrollEvent=!1,a.scrollBarWidth=a._viewportElement.offsetWidth-a._scrollArea.offsetWidth||15,a.register((0,E.addDisposableDomListener)(a._viewportElement,"scroll",a._onScroll.bind(a))),a._activeBuffer=a._bufferService.buffer,a.register(a._bufferService.buffers.onBufferActivate(function(h){return a._activeBuffer=h.activeBuffer})),a._renderDimensions=a._renderService.dimensions,a.register(a._renderService.onDimensionsChange(function(h){return a._renderDimensions=h})),setTimeout(function(){return a.syncScrollArea()},0),a}return Z(Q,W),Q.prototype.onThemeChange=function(U){this._viewportElement.style.backgroundColor=U.background.css},Q.prototype._refresh=function(U){var F=this;if(U)return this._innerRefresh(),void(this._refreshAnimationFrame!==null&&cancelAnimationFrame(this._refreshAnimationFrame));this._refreshAnimationFrame===null&&(this._refreshAnimationFrame=requestAnimationFrame(function(){return F._innerRefresh()}))},Q.prototype._innerRefresh=function(){if(this._charSizeService.height>0){this._currentRowHeight=this._renderService.dimensions.scaledCellHeight/window.devicePixelRatio,this._currentScaledCellHeight=this._renderService.dimensions.scaledCellHeight,this._lastRecordedViewportHeight=this._viewportElement.offsetHeight;var U=Math.round(this._currentRowHeight*this._lastRecordedBufferLength)+(this._lastRecordedViewportHeight-this._renderService.dimensions.canvasHeight);this._lastRecordedBufferHeight!==U&&(this._lastRecordedBufferHeight=U,this._scrollArea.style.height=this._lastRecordedBufferHeight+"px")}var F=this._bufferService.buffer.ydisp*this._currentRowHeight;this._viewportElement.scrollTop!==F&&(this._ignoreNextScrollEvent=!0,this._viewportElement.scrollTop=F),this._refreshAnimationFrame=null},Q.prototype.syncScrollArea=function(U){if(U===void 0&&(U=!1),this._lastRecordedBufferLength!==this._bufferService.buffer.lines.length)return this._lastRecordedBufferLength=this._bufferService.buffer.lines.length,void this._refresh(U);this._lastRecordedViewportHeight===this._renderService.dimensions.canvasHeight&&this._lastScrollTop===this._activeBuffer.ydisp*this._currentRowHeight&&this._renderDimensions.scaledCellHeight===this._currentScaledCellHeight||this._refresh(U)},Q.prototype._onScroll=function(U){if(this._lastScrollTop=this._viewportElement.scrollTop,this._viewportElement.offsetParent){if(this._ignoreNextScrollEvent)return this._ignoreNextScrollEvent=!1,void this._scrollLines(0);var F=Math.round(this._lastScrollTop/this._currentRowHeight)-this._bufferService.buffer.ydisp;this._scrollLines(F)}},Q.prototype._bubbleScroll=function(U,F){var B=this._viewportElement.scrollTop+this._lastRecordedViewportHeight;return!(F<0&&this._viewportElement.scrollTop!==0||F>0&&B<this._lastRecordedBufferHeight)||(U.cancelable&&U.preventDefault(),!1)},Q.prototype.onWheel=function(U){var F=this._getPixelsScrolled(U);return F!==0&&(this._viewportElement.scrollTop+=F,this._bubbleScroll(U,F))},Q.prototype._getPixelsScrolled=function(U){if(U.deltaY===0||U.shiftKey)return 0;var F=this._applyScrollModifier(U.deltaY,U);return U.deltaMode===WheelEvent.DOM_DELTA_LINE?F*=this._currentRowHeight:U.deltaMode===WheelEvent.DOM_DELTA_PAGE&&(F*=this._currentRowHeight*this._bufferService.rows),F},Q.prototype.getLinesScrolled=function(U){if(U.deltaY===0||U.shiftKey)return 0;var F=this._applyScrollModifier(U.deltaY,U);return U.deltaMode===WheelEvent.DOM_DELTA_PIXEL?(F/=this._currentRowHeight+0,this._wheelPartialScroll+=F,F=Math.floor(Math.abs(this._wheelPartialScroll))*(this._wheelPartialScroll>0?1:-1),this._wheelPartialScroll%=1):U.deltaMode===WheelEvent.DOM_DELTA_PAGE&&(F*=this._bufferService.rows),F},Q.prototype._applyScrollModifier=function(U,F){var B=this._optionsService.rawOptions.fastScrollModifier;return B==="alt"&&F.altKey||B==="ctrl"&&F.ctrlKey||B==="shift"&&F.shiftKey?U*this._optionsService.rawOptions.fastScrollSensitivity*this._optionsService.rawOptions.scrollSensitivity:U*this._optionsService.rawOptions.scrollSensitivity},Q.prototype.onTouchStart=function(U){this._lastTouchY=U.touches[0].pageY},Q.prototype.onTouchMove=function(U){var F=this._lastTouchY-U.touches[0].pageY;return this._lastTouchY=U.touches[0].pageY,F!==0&&(this._viewportElement.scrollTop+=F,this._bubbleScroll(U,F))},e([S(4,l.IBufferService),S(5,l.IOptionsService),S(6,d.ICharSizeService),S(7,d.IRenderService)],Q)}(r.Disposable);n.Viewport=N},3107:function(x,n,o){var t,Z=this&&this.__extends||(t=function(Q,U){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(F,B){F.__proto__=B}||function(F,B){for(var R in B)Object.prototype.hasOwnProperty.call(B,R)&&(F[R]=B[R])},t(Q,U)},function(Q,U){if(typeof U!="function"&&U!==null)throw new TypeError("Class extends value "+String(U)+" is not a constructor or null");function F(){this.constructor=Q}t(Q,U),Q.prototype=U===null?Object.create(U):(F.prototype=U.prototype,new F)}),e=this&&this.__decorate||function(Q,U,F,B){var R,J=arguments.length,V=J<3?U:B===null?B=Object.getOwnPropertyDescriptor(U,F):B;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")V=Reflect.decorate(Q,U,F,B);else for(var k=Q.length-1;k>=0;k--)(R=Q[k])&&(V=(J<3?R(V):J>3?R(U,F,V):R(U,F))||V);return J>3&&V&&Object.defineProperty(U,F,V),V},S=this&&this.__param||function(Q,U){return function(F,B){U(F,B,Q)}},r=this&&this.__values||function(Q){var U=typeof Symbol=="function"&&Symbol.iterator,F=U&&Q[U],B=0;if(F)return F.call(Q);if(Q&&typeof Q.length=="number")return{next:function(){return Q&&B>=Q.length&&(Q=void 0),{value:Q&&Q[B++],done:!Q}}};throw new TypeError(U?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(n,"__esModule",{value:!0}),n.BufferDecorationRenderer=void 0;var E=o(3656),d=o(4725),l=o(844),N=o(2585),W=function(Q){function U(F,B,R,J){var V=Q.call(this)||this;return V._screenElement=F,V._bufferService=B,V._decorationService=R,V._renderService=J,V._decorationElements=new Map,V._altBufferIsActive=!1,V._dimensionsChanged=!1,V._container=document.createElement("div"),V._container.classList.add("xterm-decoration-container"),V._screenElement.appendChild(V._container),V.register(V._renderService.onRenderedViewportChange(function(){return V._queueRefresh()})),V.register(V._renderService.onDimensionsChange(function(){V._dimensionsChanged=!0,V._queueRefresh()})),V.register((0,E.addDisposableDomListener)(window,"resize",function(){return V._queueRefresh()})),V.register(V._bufferService.buffers.onBufferActivate(function(){V._altBufferIsActive=V._bufferService.buffer===V._bufferService.buffers.alt})),V.register(V._decorationService.onDecorationRegistered(function(){return V._queueRefresh()})),V.register(V._decorationService.onDecorationRemoved(function(k){return V._removeDecoration(k)})),V}return Z(U,Q),U.prototype.dispose=function(){this._container.remove(),this._decorationElements.clear(),Q.prototype.dispose.call(this)},U.prototype._queueRefresh=function(){var F=this;this._animationFrame===void 0&&(this._animationFrame=this._renderService.addRefreshCallback(function(){F.refreshDecorations(),F._animationFrame=void 0}))},U.prototype.refreshDecorations=function(){var F,B;try{for(var R=r(this._decorationService.decorations),J=R.next();!J.done;J=R.next()){var V=J.value;this._renderDecoration(V)}}catch(k){F={error:k}}finally{try{J&&!J.done&&(B=R.return)&&B.call(R)}finally{if(F)throw F.error}}this._dimensionsChanged=!1},U.prototype._renderDecoration=function(F){this._refreshStyle(F),this._dimensionsChanged&&this._refreshXPosition(F)},U.prototype._createElement=function(F){var B,R=document.createElement("div");R.classList.add("xterm-decoration"),R.style.width=Math.round((F.options.width||1)*this._renderService.dimensions.actualCellWidth)+"px",R.style.height=(F.options.height||1)*this._renderService.dimensions.actualCellHeight+"px",R.style.top=(F.marker.line-this._bufferService.buffers.active.ydisp)*this._renderService.dimensions.actualCellHeight+"px",R.style.lineHeight=this._renderService.dimensions.actualCellHeight+"px";var J=(B=F.options.x)!==null&&B!==void 0?B:0;return J&&J>this._bufferService.cols&&(R.style.display="none"),this._refreshXPosition(F,R),R},U.prototype._refreshStyle=function(F){var B=this,R=F.marker.line-this._bufferService.buffers.active.ydisp;if(R<0||R>=this._bufferService.rows)F.element&&(F.element.style.display="none",F.onRenderEmitter.fire(F.element));else{var J=this._decorationElements.get(F);J||(F.onDispose(function(){return B._removeDecoration(F)}),J=this._createElement(F),F.element=J,this._decorationElements.set(F,J),this._container.appendChild(J)),J.style.top=R*this._renderService.dimensions.actualCellHeight+"px",J.style.display=this._altBufferIsActive?"none":"block",F.onRenderEmitter.fire(J)}},U.prototype._refreshXPosition=function(F,B){var R;if(B===void 0&&(B=F.element),B){var J=(R=F.options.x)!==null&&R!==void 0?R:0;(F.options.anchor||"left")==="right"?B.style.right=J?J*this._renderService.dimensions.actualCellWidth+"px":"":B.style.left=J?J*this._renderService.dimensions.actualCellWidth+"px":""}},U.prototype._removeDecoration=function(F){var B;(B=this._decorationElements.get(F))===null||B===void 0||B.remove(),this._decorationElements.delete(F)},e([S(1,N.IBufferService),S(2,N.IDecorationService),S(3,d.IRenderService)],U)}(l.Disposable);n.BufferDecorationRenderer=W},5871:function(x,n){var o=this&&this.__values||function(Z){var e=typeof Symbol=="function"&&Symbol.iterator,S=e&&Z[e],r=0;if(S)return S.call(Z);if(Z&&typeof Z.length=="number")return{next:function(){return Z&&r>=Z.length&&(Z=void 0),{value:Z&&Z[r++],done:!Z}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(n,"__esModule",{value:!0}),n.ColorZoneStore=void 0;var t=function(){function Z(){this._zones=[],this._zonePool=[],this._zonePoolIndex=0,this._linePadding={full:0,left:0,center:0,right:0}}return Object.defineProperty(Z.prototype,"zones",{get:function(){return this._zonePool.length=Math.min(this._zonePool.length,this._zones.length),this._zones},enumerable:!1,configurable:!0}),Z.prototype.clear=function(){this._zones.length=0,this._zonePoolIndex=0},Z.prototype.addDecoration=function(e){var S,r;if(e.options.overviewRulerOptions){try{for(var E=o(this._zones),d=E.next();!d.done;d=E.next()){var l=d.value;if(l.color===e.options.overviewRulerOptions.color&&l.position===e.options.overviewRulerOptions.position){if(this._lineIntersectsZone(l,e.marker.line))return;if(this._lineAdjacentToZone(l,e.marker.line,e.options.overviewRulerOptions.position))return void this._addLineToZone(l,e.marker.line)}}}catch(N){S={error:N}}finally{try{d&&!d.done&&(r=E.return)&&r.call(E)}finally{if(S)throw S.error}}if(this._zonePoolIndex<this._zonePool.length)return this._zonePool[this._zonePoolIndex].color=e.options.overviewRulerOptions.color,this._zonePool[this._zonePoolIndex].position=e.options.overviewRulerOptions.position,this._zonePool[this._zonePoolIndex].startBufferLine=e.marker.line,this._zonePool[this._zonePoolIndex].endBufferLine=e.marker.line,void this._zones.push(this._zonePool[this._zonePoolIndex++]);this._zones.push({color:e.options.overviewRulerOptions.color,position:e.options.overviewRulerOptions.position,startBufferLine:e.marker.line,endBufferLine:e.marker.line}),this._zonePool.push(this._zones[this._zones.length-1]),this._zonePoolIndex++}},Z.prototype.setPadding=function(e){this._linePadding=e},Z.prototype._lineIntersectsZone=function(e,S){return S>=e.startBufferLine&&S<=e.endBufferLine},Z.prototype._lineAdjacentToZone=function(e,S,r){return S>=e.startBufferLine-this._linePadding[r||"full"]&&S<=e.endBufferLine+this._linePadding[r||"full"]},Z.prototype._addLineToZone=function(e,S){e.startBufferLine=Math.min(e.startBufferLine,S),e.endBufferLine=Math.max(e.endBufferLine,S)},Z}();n.ColorZoneStore=t},5744:function(x,n,o){var t,Z=this&&this.__extends||(t=function(R,J){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(V,k){V.__proto__=k}||function(V,k){for(var i in k)Object.prototype.hasOwnProperty.call(k,i)&&(V[i]=k[i])},t(R,J)},function(R,J){if(typeof J!="function"&&J!==null)throw new TypeError("Class extends value "+String(J)+" is not a constructor or null");function V(){this.constructor=R}t(R,J),R.prototype=J===null?Object.create(J):(V.prototype=J.prototype,new V)}),e=this&&this.__decorate||function(R,J,V,k){var i,a=arguments.length,h=a<3?J:k===null?k=Object.getOwnPropertyDescriptor(J,V):k;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")h=Reflect.decorate(R,J,V,k);else for(var T=R.length-1;T>=0;T--)(i=R[T])&&(h=(a<3?i(h):a>3?i(J,V,h):i(J,V))||h);return a>3&&h&&Object.defineProperty(J,V,h),h},S=this&&this.__param||function(R,J){return function(V,k){J(V,k,R)}},r=this&&this.__values||function(R){var J=typeof Symbol=="function"&&Symbol.iterator,V=J&&R[J],k=0;if(V)return V.call(R);if(R&&typeof R.length=="number")return{next:function(){return R&&k>=R.length&&(R=void 0),{value:R&&R[k++],done:!R}}};throw new TypeError(J?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(n,"__esModule",{value:!0}),n.OverviewRulerRenderer=void 0;var E=o(5871),d=o(3656),l=o(4725),N=o(844),W=o(2585),Q={full:0,left:0,center:0,right:0},U={full:0,left:0,center:0,right:0},F={full:0,left:0,center:0,right:0},B=function(R){function J(V,k,i,a,h,T){var s,C=R.call(this)||this;C._viewportElement=V,C._screenElement=k,C._bufferService=i,C._decorationService=a,C._renderService=h,C._optionsService=T,C._colorZoneStore=new E.ColorZoneStore,C._shouldUpdateDimensions=!0,C._shouldUpdateAnchor=!0,C._lastKnownBufferLength=0,C._canvas=document.createElement("canvas"),C._canvas.classList.add("xterm-decoration-overview-ruler"),C._refreshCanvasDimensions(),(s=C._viewportElement.parentElement)===null||s===void 0||s.insertBefore(C._canvas,C._viewportElement);var D=C._canvas.getContext("2d");if(!D)throw new Error("Ctx cannot be null");return C._ctx=D,C._registerDecorationListeners(),C._registerBufferChangeListeners(),C._registerDimensionChangeListeners(),C}return Z(J,R),Object.defineProperty(J.prototype,"_width",{get:function(){return this._optionsService.options.overviewRulerWidth||0},enumerable:!1,configurable:!0}),J.prototype._registerDecorationListeners=function(){var V=this;this.register(this._decorationService.onDecorationRegistered(function(){return V._queueRefresh(void 0,!0)})),this.register(this._decorationService.onDecorationRemoved(function(){return V._queueRefresh(void 0,!0)}))},J.prototype._registerBufferChangeListeners=function(){var V=this;this.register(this._renderService.onRenderedViewportChange(function(){return V._queueRefresh()})),this.register(this._bufferService.buffers.onBufferActivate(function(){V._canvas.style.display=V._bufferService.buffer===V._bufferService.buffers.alt?"none":"block"})),this.register(this._bufferService.onScroll(function(){V._lastKnownBufferLength!==V._bufferService.buffers.normal.lines.length&&(V._refreshDrawHeightConstants(),V._refreshColorZonePadding())}))},J.prototype._registerDimensionChangeListeners=function(){var V=this;this.register(this._renderService.onRender(function(){V._containerHeight&&V._containerHeight===V._screenElement.clientHeight||(V._queueRefresh(!0),V._containerHeight=V._screenElement.clientHeight)})),this.register(this._optionsService.onOptionChange(function(k){k==="overviewRulerWidth"&&V._queueRefresh(!0)})),this.register((0,d.addDisposableDomListener)(window,"resize",function(){V._queueRefresh(!0)})),this._queueRefresh(!0)},J.prototype.dispose=function(){var V;(V=this._canvas)===null||V===void 0||V.remove(),R.prototype.dispose.call(this)},J.prototype._refreshDrawConstants=function(){var V=Math.floor(this._canvas.width/3),k=Math.ceil(this._canvas.width/3);U.full=this._canvas.width,U.left=V,U.center=k,U.right=V,this._refreshDrawHeightConstants(),F.full=0,F.left=0,F.center=U.left,F.right=U.left+U.center},J.prototype._refreshDrawHeightConstants=function(){Q.full=Math.round(2*window.devicePixelRatio);var V=this._canvas.height/this._bufferService.buffer.lines.length,k=Math.round(Math.max(Math.min(V,12),6)*window.devicePixelRatio);Q.left=k,Q.center=k,Q.right=k},J.prototype._refreshColorZonePadding=function(){this._colorZoneStore.setPadding({full:Math.floor(this._bufferService.buffers.active.lines.length/(this._canvas.height-1)*Q.full),left:Math.floor(this._bufferService.buffers.active.lines.length/(this._canvas.height-1)*Q.left),center:Math.floor(this._bufferService.buffers.active.lines.length/(this._canvas.height-1)*Q.center),right:Math.floor(this._bufferService.buffers.active.lines.length/(this._canvas.height-1)*Q.right)}),this._lastKnownBufferLength=this._bufferService.buffers.normal.lines.length},J.prototype._refreshCanvasDimensions=function(){this._canvas.style.width=this._width+"px",this._canvas.width=Math.round(this._width*window.devicePixelRatio),this._canvas.style.height=this._screenElement.clientHeight+"px",this._canvas.height=Math.round(this._screenElement.clientHeight*window.devicePixelRatio),this._refreshDrawConstants(),this._refreshColorZonePadding()},J.prototype._refreshDecorations=function(){var V,k,i,a,h,T;this._shouldUpdateDimensions&&this._refreshCanvasDimensions(),this._ctx.clearRect(0,0,this._canvas.width,this._canvas.height),this._colorZoneStore.clear();try{for(var s=r(this._decorationService.decorations),C=s.next();!C.done;C=s.next()){var D=C.value;this._colorZoneStore.addDecoration(D)}}catch(H){V={error:H}}finally{try{C&&!C.done&&(k=s.return)&&k.call(s)}finally{if(V)throw V.error}}this._ctx.lineWidth=1;var p=this._colorZoneStore.zones;try{for(var c=r(p),m=c.next();!m.done;m=c.next())(f=m.value).position!=="full"&&this._renderColorZone(f)}catch(H){i={error:H}}finally{try{m&&!m.done&&(a=c.return)&&a.call(c)}finally{if(i)throw i.error}}try{for(var v=r(p),z=v.next();!z.done;z=v.next()){var f;(f=z.value).position==="full"&&this._renderColorZone(f)}}catch(H){h={error:H}}finally{try{z&&!z.done&&(T=v.return)&&T.call(v)}finally{if(h)throw h.error}}this._shouldUpdateDimensions=!1,this._shouldUpdateAnchor=!1},J.prototype._renderColorZone=function(V){this._ctx.fillStyle=V.color,this._ctx.fillRect(F[V.position||"full"],Math.round((this._canvas.height-1)*(V.startBufferLine/this._bufferService.buffers.active.lines.length)-Q[V.position||"full"]/2),U[V.position||"full"],Math.round((this._canvas.height-1)*((V.endBufferLine-V.startBufferLine)/this._bufferService.buffers.active.lines.length)+Q[V.position||"full"]))},J.prototype._queueRefresh=function(V,k){var i=this;this._shouldUpdateDimensions=V||this._shouldUpdateDimensions,this._shouldUpdateAnchor=k||this._shouldUpdateAnchor,this._animationFrame===void 0&&(this._animationFrame=window.requestAnimationFrame(function(){i._refreshDecorations(),i._animationFrame=void 0}))},e([S(2,W.IBufferService),S(3,W.IDecorationService),S(4,l.IRenderService),S(5,W.IOptionsService)],J)}(N.Disposable);n.OverviewRulerRenderer=B},2950:function(x,n,o){var t=this&&this.__decorate||function(E,d,l,N){var W,Q=arguments.length,U=Q<3?d:N===null?N=Object.getOwnPropertyDescriptor(d,l):N;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")U=Reflect.decorate(E,d,l,N);else for(var F=E.length-1;F>=0;F--)(W=E[F])&&(U=(Q<3?W(U):Q>3?W(d,l,U):W(d,l))||U);return Q>3&&U&&Object.defineProperty(d,l,U),U},Z=this&&this.__param||function(E,d){return function(l,N){d(l,N,E)}};Object.defineProperty(n,"__esModule",{value:!0}),n.CompositionHelper=void 0;var e=o(4725),S=o(2585),r=function(){function E(d,l,N,W,Q,U){this._textarea=d,this._compositionView=l,this._bufferService=N,this._optionsService=W,this._coreService=Q,this._renderService=U,this._isComposing=!1,this._isSendingComposition=!1,this._compositionPosition={start:0,end:0},this._dataAlreadySent=""}return Object.defineProperty(E.prototype,"isComposing",{get:function(){return this._isComposing},enumerable:!1,configurable:!0}),E.prototype.compositionstart=function(){this._isComposing=!0,this._compositionPosition.start=this._textarea.value.length,this._compositionView.textContent="",this._dataAlreadySent="",this._compositionView.classList.add("active")},E.prototype.compositionupdate=function(d){var l=this;this._compositionView.textContent=d.data,this.updateCompositionElements(),setTimeout(function(){l._compositionPosition.end=l._textarea.value.length},0)},E.prototype.compositionend=function(){this._finalizeComposition(!0)},E.prototype.keydown=function(d){if(this._isComposing||this._isSendingComposition){if(d.keyCode===229||d.keyCode===16||d.keyCode===17||d.keyCode===18)return!1;this._finalizeComposition(!1)}return d.keyCode!==229||(this._handleAnyTextareaChanges(),!1)},E.prototype._finalizeComposition=function(d){var l=this;if(this._compositionView.classList.remove("active"),this._isComposing=!1,d){var N={start:this._compositionPosition.start,end:this._compositionPosition.end};this._isSendingComposition=!0,setTimeout(function(){if(l._isSendingComposition){l._isSendingComposition=!1;var Q;N.start+=l._dataAlreadySent.length,(Q=l._isComposing?l._textarea.value.substring(N.start,N.end):l._textarea.value.substring(N.start)).length>0&&l._coreService.triggerDataEvent(Q,!0)}},0)}else{this._isSendingComposition=!1;var W=this._textarea.value.substring(this._compositionPosition.start,this._compositionPosition.end);this._coreService.triggerDataEvent(W,!0)}},E.prototype._handleAnyTextareaChanges=function(){var d=this,l=this._textarea.value;setTimeout(function(){if(!d._isComposing){var N=d._textarea.value.replace(l,"");N.length>0&&(d._dataAlreadySent=N,d._coreService.triggerDataEvent(N,!0))}},0)},E.prototype.updateCompositionElements=function(d){var l=this;if(this._isComposing){if(this._bufferService.buffer.isCursorInViewport){var N=Math.min(this._bufferService.buffer.x,this._bufferService.cols-1),W=this._renderService.dimensions.actualCellHeight,Q=this._bufferService.buffer.y*this._renderService.dimensions.actualCellHeight,U=N*this._renderService.dimensions.actualCellWidth;this._compositionView.style.left=U+"px",this._compositionView.style.top=Q+"px",this._compositionView.style.height=W+"px",this._compositionView.style.lineHeight=W+"px",this._compositionView.style.fontFamily=this._optionsService.rawOptions.fontFamily,this._compositionView.style.fontSize=this._optionsService.rawOptions.fontSize+"px";var F=this._compositionView.getBoundingClientRect();this._textarea.style.left=U+"px",this._textarea.style.top=Q+"px",this._textarea.style.width=Math.max(F.width,1)+"px",this._textarea.style.height=Math.max(F.height,1)+"px",this._textarea.style.lineHeight=F.height+"px"}d||setTimeout(function(){return l.updateCompositionElements(!0)},0)}},t([Z(2,S.IBufferService),Z(3,S.IOptionsService),Z(4,S.ICoreService),Z(5,e.IRenderService)],E)}();n.CompositionHelper=r},9806:(x,n)=>{function o(t,Z,e){var S=e.getBoundingClientRect(),r=t.getComputedStyle(e),E=parseInt(r.getPropertyValue("padding-left")),d=parseInt(r.getPropertyValue("padding-top"));return[Z.clientX-S.left-E,Z.clientY-S.top-d]}Object.defineProperty(n,"__esModule",{value:!0}),n.getRawByteCoords=n.getCoords=n.getCoordsRelativeToElement=void 0,n.getCoordsRelativeToElement=o,n.getCoords=function(t,Z,e,S,r,E,d,l,N){if(E){var W=o(t,Z,e);if(W)return W[0]=Math.ceil((W[0]+(N?d/2:0))/d),W[1]=Math.ceil(W[1]/l),W[0]=Math.min(Math.max(W[0],1),S+(N?1:0)),W[1]=Math.min(Math.max(W[1],1),r),W}},n.getRawByteCoords=function(t){if(t)return{x:t[0]+32,y:t[1]+32}}},9504:(x,n,o)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.moveToCellSequence=void 0;var t=o(2584);function Z(l,N,W,Q){var U=l-e(W,l),F=N-e(W,N),B=Math.abs(U-F)-function(R,J,V){for(var k=0,i=R-e(V,R),a=J-e(V,J),h=0;h<Math.abs(i-a);h++){var T=S(R,J)==="A"?-1:1,s=V.buffer.lines.get(i+T*h);s!=null&&s.isWrapped&&k++}return k}(l,N,W);return d(B,E(S(l,N),Q))}function e(l,N){for(var W=0,Q=l.buffer.lines.get(N),U=Q==null?void 0:Q.isWrapped;U&&N>=0&&N<l.rows;)W++,U=(Q=l.buffer.lines.get(--N))==null?void 0:Q.isWrapped;return W}function S(l,N){return l>N?"A":"B"}function r(l,N,W,Q,U,F){for(var B=l,R=N,J="";B!==W||R!==Q;)B+=U?1:-1,U&&B>F.cols-1?(J+=F.buffer.translateBufferLineToString(R,!1,l,B),B=0,l=0,R++):!U&&B<0&&(J+=F.buffer.translateBufferLineToString(R,!1,0,l+1),l=B=F.cols-1,R--);return J+F.buffer.translateBufferLineToString(R,!1,l,B)}function E(l,N){var W=N?"O":"[";return t.C0.ESC+W+l}function d(l,N){l=Math.floor(l);for(var W="",Q=0;Q<l;Q++)W+=N;return W}n.moveToCellSequence=function(l,N,W,Q){var U,F=W.buffer.x,B=W.buffer.y;if(!W.buffer.hasScrollback)return function(J,V,k,i,a,h){return Z(V,i,a,h).length===0?"":d(r(J,V,J,V-e(a,V),!1,a).length,E("D",h))}(F,B,0,N,W,Q)+Z(B,N,W,Q)+function(J,V,k,i,a,h){var T;T=Z(V,i,a,h).length>0?i-e(a,i):V;var s=i,C=function(D,p,c,m,v,z){var f;return f=Z(c,m,v,z).length>0?m-e(v,m):p,D<c&&f<=m||D>=c&&f<m?"C":"D"}(J,V,k,i,a,h);return d(r(J,T,k,s,C==="C",a).length,E(C,h))}(F,B,l,N,W,Q);if(B===N)return U=F>l?"D":"C",d(Math.abs(F-l),E(U,Q));U=B>N?"D":"C";var R=Math.abs(B-N);return d(function(J,V){return V.cols-J}(B>N?l:F,W)+(R-1)*W.cols+1+((B>N?F:l)-1),E(U,Q))}},4389:function(x,n,o){var t=this&&this.__assign||function(){return t=Object.assign||function(Q){for(var U,F=1,B=arguments.length;F<B;F++)for(var R in U=arguments[F])Object.prototype.hasOwnProperty.call(U,R)&&(Q[R]=U[R]);return Q},t.apply(this,arguments)},Z=this&&this.__values||function(Q){var U=typeof Symbol=="function"&&Symbol.iterator,F=U&&Q[U],B=0;if(F)return F.call(Q);if(Q&&typeof Q.length=="number")return{next:function(){return Q&&B>=Q.length&&(Q=void 0),{value:Q&&Q[B++],done:!Q}}};throw new TypeError(U?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(n,"__esModule",{value:!0}),n.Terminal=void 0;var e=o(3236),S=o(9042),r=o(7975),E=o(7090),d=o(5741),l=o(8285),N=["cols","rows"],W=function(){function Q(U){var F=this;this._core=new e.Terminal(U),this._addonManager=new d.AddonManager,this._publicOptions=t({},this._core.options);var B=function(k){return F._core.options[k]},R=function(k,i){F._checkReadonlyOptions(k),F._core.options[k]=i};for(var J in this._core.options){var V={get:B.bind(this,J),set:R.bind(this,J)};Object.defineProperty(this._publicOptions,J,V)}}return Q.prototype._checkReadonlyOptions=function(U){if(N.includes(U))throw new Error('Option "'+U+'" can only be set in the constructor')},Q.prototype._checkProposedApi=function(){if(!this._core.optionsService.rawOptions.allowProposedApi)throw new Error("You must set the allowProposedApi option to true to use proposed API")},Object.defineProperty(Q.prototype,"onBell",{get:function(){return this._core.onBell},enumerable:!1,configurable:!0}),Object.defineProperty(Q.prototype,"onBinary",{get:function(){return this._core.onBinary},enumerable:!1,configurable:!0}),Object.defineProperty(Q.prototype,"onCursorMove",{get:function(){return this._core.onCursorMove},enumerable:!1,configurable:!0}),Object.defineProperty(Q.prototype,"onData",{get:function(){return this._core.onData},enumerable:!1,configurable:!0}),Object.defineProperty(Q.prototype,"onKey",{get:function(){return this._core.onKey},enumerable:!1,configurable:!0}),Object.defineProperty(Q.prototype,"onLineFeed",{get:function(){return this._core.onLineFeed},enumerable:!1,configurable:!0}),Object.defineProperty(Q.prototype,"onRender",{get:function(){return this._core.onRender},enumerable:!1,configurable:!0}),Object.defineProperty(Q.prototype,"onResize",{get:function(){return this._core.onResize},enumerable:!1,configurable:!0}),Object.defineProperty(Q.prototype,"onScroll",{get:function(){return this._core.onScroll},enumerable:!1,configurable:!0}),Object.defineProperty(Q.prototype,"onSelectionChange",{get:function(){return this._core.onSelectionChange},enumerable:!1,configurable:!0}),Object.defineProperty(Q.prototype,"onTitleChange",{get:function(){return this._core.onTitleChange},enumerable:!1,configurable:!0}),Object.defineProperty(Q.prototype,"onWriteParsed",{get:function(){return this._core.onWriteParsed},enumerable:!1,configurable:!0}),Object.defineProperty(Q.prototype,"element",{get:function(){return this._core.element},enumerable:!1,configurable:!0}),Object.defineProperty(Q.prototype,"parser",{get:function(){return this._checkProposedApi(),this._parser||(this._parser=new r.ParserApi(this._core)),this._parser},enumerable:!1,configurable:!0}),Object.defineProperty(Q.prototype,"unicode",{get:function(){return this._checkProposedApi(),new E.UnicodeApi(this._core)},enumerable:!1,configurable:!0}),Object.defineProperty(Q.prototype,"textarea",{get:function(){return this._core.textarea},enumerable:!1,configurable:!0}),Object.defineProperty(Q.prototype,"rows",{get:function(){return this._core.rows},enumerable:!1,configurable:!0}),Object.defineProperty(Q.prototype,"cols",{get:function(){return this._core.cols},enumerable:!1,configurable:!0}),Object.defineProperty(Q.prototype,"buffer",{get:function(){return this._checkProposedApi(),this._buffer||(this._buffer=new l.BufferNamespaceApi(this._core)),this._buffer},enumerable:!1,configurable:!0}),Object.defineProperty(Q.prototype,"markers",{get:function(){return this._checkProposedApi(),this._core.markers},enumerable:!1,configurable:!0}),Object.defineProperty(Q.prototype,"modes",{get:function(){var U=this._core.coreService.decPrivateModes,F="none";switch(this._core.coreMouseService.activeProtocol){case"X10":F="x10";break;case"VT200":F="vt200";break;case"DRAG":F="drag";break;case"ANY":F="any"}return{applicationCursorKeysMode:U.applicationCursorKeys,applicationKeypadMode:U.applicationKeypad,bracketedPasteMode:U.bracketedPasteMode,insertMode:this._core.coreService.modes.insertMode,mouseTrackingMode:F,originMode:U.origin,reverseWraparoundMode:U.reverseWraparound,sendFocusMode:U.sendFocus,wraparoundMode:U.wraparound}},enumerable:!1,configurable:!0}),Object.defineProperty(Q.prototype,"options",{get:function(){return this._publicOptions},set:function(U){for(var F in U)this._publicOptions[F]=U[F]},enumerable:!1,configurable:!0}),Q.prototype.blur=function(){this._core.blur()},Q.prototype.focus=function(){this._core.focus()},Q.prototype.resize=function(U,F){this._verifyIntegers(U,F),this._core.resize(U,F)},Q.prototype.open=function(U){this._core.open(U)},Q.prototype.attachCustomKeyEventHandler=function(U){this._core.attachCustomKeyEventHandler(U)},Q.prototype.registerLinkMatcher=function(U,F,B){return this._checkProposedApi(),this._core.registerLinkMatcher(U,F,B)},Q.prototype.deregisterLinkMatcher=function(U){this._checkProposedApi(),this._core.deregisterLinkMatcher(U)},Q.prototype.registerLinkProvider=function(U){return this._checkProposedApi(),this._core.registerLinkProvider(U)},Q.prototype.registerCharacterJoiner=function(U){return this._checkProposedApi(),this._core.registerCharacterJoiner(U)},Q.prototype.deregisterCharacterJoiner=function(U){this._checkProposedApi(),this._core.deregisterCharacterJoiner(U)},Q.prototype.registerMarker=function(U){return U===void 0&&(U=0),this._checkProposedApi(),this._verifyIntegers(U),this._core.addMarker(U)},Q.prototype.registerDecoration=function(U){var F,B,R;return this._checkProposedApi(),this._verifyPositiveIntegers((F=U.x)!==null&&F!==void 0?F:0,(B=U.width)!==null&&B!==void 0?B:0,(R=U.height)!==null&&R!==void 0?R:0),this._core.registerDecoration(U)},Q.prototype.addMarker=function(U){return this.registerMarker(U)},Q.prototype.hasSelection=function(){return this._core.hasSelection()},Q.prototype.select=function(U,F,B){this._verifyIntegers(U,F,B),this._core.select(U,F,B)},Q.prototype.getSelection=function(){return this._core.getSelection()},Q.prototype.getSelectionPosition=function(){return this._core.getSelectionPosition()},Q.prototype.clearSelection=function(){this._core.clearSelection()},Q.prototype.selectAll=function(){this._core.selectAll()},Q.prototype.selectLines=function(U,F){this._verifyIntegers(U,F),this._core.selectLines(U,F)},Q.prototype.dispose=function(){this._addonManager.dispose(),this._core.dispose()},Q.prototype.scrollLines=function(U){this._verifyIntegers(U),this._core.scrollLines(U)},Q.prototype.scrollPages=function(U){this._verifyIntegers(U),this._core.scrollPages(U)},Q.prototype.scrollToTop=function(){this._core.scrollToTop()},Q.prototype.scrollToBottom=function(){this._core.scrollToBottom()},Q.prototype.scrollToLine=function(U){this._verifyIntegers(U),this._core.scrollToLine(U)},Q.prototype.clear=function(){this._core.clear()},Q.prototype.write=function(U,F){this._core.write(U,F)},Q.prototype.writeUtf8=function(U,F){this._core.write(U,F)},Q.prototype.writeln=function(U,F){this._core.write(U),this._core.write(`\r
`,F)},Q.prototype.paste=function(U){this._core.paste(U)},Q.prototype.getOption=function(U){return this._core.optionsService.getOption(U)},Q.prototype.setOption=function(U,F){this._checkReadonlyOptions(U),this._core.optionsService.setOption(U,F)},Q.prototype.refresh=function(U,F){this._verifyIntegers(U,F),this._core.refresh(U,F)},Q.prototype.reset=function(){this._core.reset()},Q.prototype.clearTextureAtlas=function(){this._core.clearTextureAtlas()},Q.prototype.loadAddon=function(U){return this._addonManager.loadAddon(this,U)},Object.defineProperty(Q,"strings",{get:function(){return S},enumerable:!1,configurable:!0}),Q.prototype._verifyIntegers=function(){for(var U,F,B=[],R=0;R<arguments.length;R++)B[R]=arguments[R];try{for(var J=Z(B),V=J.next();!V.done;V=J.next()){var k=V.value;if(k===1/0||isNaN(k)||k%1!=0)throw new Error("This API only accepts integers")}}catch(i){U={error:i}}finally{try{V&&!V.done&&(F=J.return)&&F.call(J)}finally{if(U)throw U.error}}},Q.prototype._verifyPositiveIntegers=function(){for(var U,F,B=[],R=0;R<arguments.length;R++)B[R]=arguments[R];try{for(var J=Z(B),V=J.next();!V.done;V=J.next()){var k=V.value;if(k&&(k===1/0||isNaN(k)||k%1!=0||k<0))throw new Error("This API only accepts positive integers")}}catch(i){U={error:i}}finally{try{V&&!V.done&&(F=J.return)&&F.call(J)}finally{if(U)throw U.error}}},Q}();n.Terminal=W},1546:function(x,n,o){var t=this&&this.__values||function(Q){var U=typeof Symbol=="function"&&Symbol.iterator,F=U&&Q[U],B=0;if(F)return F.call(Q);if(Q&&typeof Q.length=="number")return{next:function(){return Q&&B>=Q.length&&(Q=void 0),{value:Q&&Q[B++],done:!Q}}};throw new TypeError(U?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(n,"__esModule",{value:!0}),n.BaseRenderLayer=void 0;var Z=o(643),e=o(8803),S=o(1420),r=o(3734),E=o(1752),d=o(8055),l=o(9631),N=o(8978),W=function(){function Q(U,F,B,R,J,V,k,i,a){this._container=U,this._alpha=R,this._colors=J,this._rendererId=V,this._bufferService=k,this._optionsService=i,this._decorationService=a,this._scaledCharWidth=0,this._scaledCharHeight=0,this._scaledCellWidth=0,this._scaledCellHeight=0,this._scaledCharLeft=0,this._scaledCharTop=0,this._columnSelectMode=!1,this._currentGlyphIdentifier={chars:"",code:0,bg:0,fg:0,bold:!1,dim:!1,italic:!1},this._canvas=document.createElement("canvas"),this._canvas.classList.add("xterm-"+F+"-layer"),this._canvas.style.zIndex=B.toString(),this._initCanvas(),this._container.appendChild(this._canvas)}return Q.prototype.dispose=function(){var U;(0,l.removeElementFromParent)(this._canvas),(U=this._charAtlas)===null||U===void 0||U.dispose()},Q.prototype._initCanvas=function(){this._ctx=(0,E.throwIfFalsy)(this._canvas.getContext("2d",{alpha:this._alpha})),this._alpha||this._clearAll()},Q.prototype.onOptionsChanged=function(){},Q.prototype.onBlur=function(){},Q.prototype.onFocus=function(){},Q.prototype.onCursorMove=function(){},Q.prototype.onGridChanged=function(U,F){},Q.prototype.onSelectionChanged=function(U,F,B){B===void 0&&(B=!1),this._selectionStart=U,this._selectionEnd=F,this._columnSelectMode=B},Q.prototype.setColors=function(U){this._refreshCharAtlas(U)},Q.prototype._setTransparency=function(U){if(U!==this._alpha){var F=this._canvas;this._alpha=U,this._canvas=this._canvas.cloneNode(),this._initCanvas(),this._container.replaceChild(this._canvas,F),this._refreshCharAtlas(this._colors),this.onGridChanged(0,this._bufferService.rows-1)}},Q.prototype._refreshCharAtlas=function(U){this._scaledCharWidth<=0&&this._scaledCharHeight<=0||(this._charAtlas=(0,S.acquireCharAtlas)(this._optionsService.rawOptions,this._rendererId,U,this._scaledCharWidth,this._scaledCharHeight),this._charAtlas.warmUp())},Q.prototype.resize=function(U){this._scaledCellWidth=U.scaledCellWidth,this._scaledCellHeight=U.scaledCellHeight,this._scaledCharWidth=U.scaledCharWidth,this._scaledCharHeight=U.scaledCharHeight,this._scaledCharLeft=U.scaledCharLeft,this._scaledCharTop=U.scaledCharTop,this._canvas.width=U.scaledCanvasWidth,this._canvas.height=U.scaledCanvasHeight,this._canvas.style.width=U.canvasWidth+"px",this._canvas.style.height=U.canvasHeight+"px",this._alpha||this._clearAll(),this._refreshCharAtlas(this._colors)},Q.prototype.clearTextureAtlas=function(){var U;(U=this._charAtlas)===null||U===void 0||U.clear()},Q.prototype._fillCells=function(U,F,B,R){this._ctx.fillRect(U*this._scaledCellWidth,F*this._scaledCellHeight,B*this._scaledCellWidth,R*this._scaledCellHeight)},Q.prototype._fillMiddleLineAtCells=function(U,F,B){B===void 0&&(B=1);var R=Math.ceil(.5*this._scaledCellHeight);this._ctx.fillRect(U*this._scaledCellWidth,(F+1)*this._scaledCellHeight-R-window.devicePixelRatio,B*this._scaledCellWidth,window.devicePixelRatio)},Q.prototype._fillBottomLineAtCells=function(U,F,B){B===void 0&&(B=1),this._ctx.fillRect(U*this._scaledCellWidth,(F+1)*this._scaledCellHeight-window.devicePixelRatio-1,B*this._scaledCellWidth,window.devicePixelRatio)},Q.prototype._fillLeftLineAtCell=function(U,F,B){this._ctx.fillRect(U*this._scaledCellWidth,F*this._scaledCellHeight,window.devicePixelRatio*B,this._scaledCellHeight)},Q.prototype._strokeRectAtCell=function(U,F,B,R){this._ctx.lineWidth=window.devicePixelRatio,this._ctx.strokeRect(U*this._scaledCellWidth+window.devicePixelRatio/2,F*this._scaledCellHeight+window.devicePixelRatio/2,B*this._scaledCellWidth-window.devicePixelRatio,R*this._scaledCellHeight-window.devicePixelRatio)},Q.prototype._clearAll=function(){this._alpha?this._ctx.clearRect(0,0,this._canvas.width,this._canvas.height):(this._ctx.fillStyle=this._colors.background.css,this._ctx.fillRect(0,0,this._canvas.width,this._canvas.height))},Q.prototype._clearCells=function(U,F,B,R){this._alpha?this._ctx.clearRect(U*this._scaledCellWidth,F*this._scaledCellHeight,B*this._scaledCellWidth,R*this._scaledCellHeight):(this._ctx.fillStyle=this._colors.background.css,this._ctx.fillRect(U*this._scaledCellWidth,F*this._scaledCellHeight,B*this._scaledCellWidth,R*this._scaledCellHeight))},Q.prototype._fillCharTrueColor=function(U,F,B){this._ctx.font=this._getFont(!1,!1),this._ctx.textBaseline=e.TEXT_BASELINE,this._clipRow(B);var R=!1;this._optionsService.rawOptions.customGlyphs!==!1&&(R=(0,N.tryDrawCustomChar)(this._ctx,U.getChars(),F*this._scaledCellWidth,B*this._scaledCellHeight,this._scaledCellWidth,this._scaledCellHeight)),R||this._ctx.fillText(U.getChars(),F*this._scaledCellWidth+this._scaledCharLeft,B*this._scaledCellHeight+this._scaledCharTop+this._scaledCharHeight)},Q.prototype._drawChars=function(U,F,B){var R,J,V,k=this._getContrastColor(U,F,B);if(k||U.isFgRGB()||U.isBgRGB())this._drawUncachedChars(U,F,B,k);else{var i,a;U.isInverse()?(i=U.isBgDefault()?e.INVERTED_DEFAULT_COLOR:U.getBgColor(),a=U.isFgDefault()?e.INVERTED_DEFAULT_COLOR:U.getFgColor()):(a=U.isBgDefault()?Z.DEFAULT_COLOR:U.getBgColor(),i=U.isFgDefault()?Z.DEFAULT_COLOR:U.getFgColor()),i+=this._optionsService.rawOptions.drawBoldTextInBrightColors&&U.isBold()&&i<8?8:0,this._currentGlyphIdentifier.chars=U.getChars()||Z.WHITESPACE_CELL_CHAR,this._currentGlyphIdentifier.code=U.getCode()||Z.WHITESPACE_CELL_CODE,this._currentGlyphIdentifier.bg=a,this._currentGlyphIdentifier.fg=i,this._currentGlyphIdentifier.bold=!!U.isBold(),this._currentGlyphIdentifier.dim=!!U.isDim(),this._currentGlyphIdentifier.italic=!!U.isItalic();var h=!1;try{for(var T=t(this._decorationService.getDecorationsAtCell(F,B)),s=T.next();!s.done;s=T.next()){var C=s.value;if(C.backgroundColorRGB||C.foregroundColorRGB){h=!0;break}}}catch(D){R={error:D}}finally{try{s&&!s.done&&(J=T.return)&&J.call(T)}finally{if(R)throw R.error}}!h&&((V=this._charAtlas)===null||V===void 0?void 0:V.draw(this._ctx,this._currentGlyphIdentifier,F*this._scaledCellWidth+this._scaledCharLeft,B*this._scaledCellHeight+this._scaledCharTop))||this._drawUncachedChars(U,F,B)}},Q.prototype._drawUncachedChars=function(U,F,B,R){if(this._ctx.save(),this._ctx.font=this._getFont(!!U.isBold(),!!U.isItalic()),this._ctx.textBaseline=e.TEXT_BASELINE,U.isInverse())if(R)this._ctx.fillStyle=R.css;else if(U.isBgDefault())this._ctx.fillStyle=d.color.opaque(this._colors.background).css;else if(U.isBgRGB())this._ctx.fillStyle="rgb("+r.AttributeData.toColorRGB(U.getBgColor()).join(",")+")";else{var J=U.getBgColor();this._optionsService.rawOptions.drawBoldTextInBrightColors&&U.isBold()&&J<8&&(J+=8),this._ctx.fillStyle=this._colors.ansi[J].css}else if(R)this._ctx.fillStyle=R.css;else if(U.isFgDefault())this._ctx.fillStyle=this._colors.foreground.css;else if(U.isFgRGB())this._ctx.fillStyle="rgb("+r.AttributeData.toColorRGB(U.getFgColor()).join(",")+")";else{var V=U.getFgColor();this._optionsService.rawOptions.drawBoldTextInBrightColors&&U.isBold()&&V<8&&(V+=8),this._ctx.fillStyle=this._colors.ansi[V].css}this._clipRow(B),U.isDim()&&(this._ctx.globalAlpha=e.DIM_OPACITY);var k=!1;this._optionsService.rawOptions.customGlyphs!==!1&&(k=(0,N.tryDrawCustomChar)(this._ctx,U.getChars(),F*this._scaledCellWidth,B*this._scaledCellHeight,this._scaledCellWidth,this._scaledCellHeight)),k||this._ctx.fillText(U.getChars(),F*this._scaledCellWidth+this._scaledCharLeft,B*this._scaledCellHeight+this._scaledCharTop+this._scaledCharHeight),this._ctx.restore()},Q.prototype._clipRow=function(U){this._ctx.beginPath(),this._ctx.rect(0,U*this._scaledCellHeight,this._bufferService.cols*this._scaledCellWidth,this._scaledCellHeight),this._ctx.clip()},Q.prototype._getFont=function(U,F){return(F?"italic":"")+" "+(U?this._optionsService.rawOptions.fontWeightBold:this._optionsService.rawOptions.fontWeight)+" "+this._optionsService.rawOptions.fontSize*window.devicePixelRatio+"px "+this._optionsService.rawOptions.fontFamily},Q.prototype._getContrastColor=function(U,F,B){var R,J,V,k,i=!1;try{for(var a=t(this._decorationService.getDecorationsAtCell(F,B)),h=a.next();!h.done;h=a.next()){var T=h.value;T.options.layer!=="top"&&i||(T.backgroundColorRGB&&(V=T.backgroundColorRGB.rgba),T.foregroundColorRGB&&(k=T.foregroundColorRGB.rgba),i=T.options.layer==="top")}}catch(P){R={error:P}}finally{try{h&&!h.done&&(J=a.return)&&J.call(a)}finally{if(R)throw R.error}}if(i||this._colors.selectionForeground&&this._isCellInSelection(F,B)&&(k=this._colors.selectionForeground.rgba),V||k||this._optionsService.rawOptions.minimumContrastRatio!==1&&!(0,E.excludeFromContrastRatioDemands)(U.getCode())){if(!V&&!k){var s=this._colors.contrastCache.getColor(U.bg,U.fg);if(s!==void 0)return s||void 0}var C=U.getFgColor(),D=U.getFgColorMode(),p=U.getBgColor(),c=U.getBgColorMode(),m=!!U.isInverse(),v=!!U.isInverse();if(m){var z=C;C=p,p=z;var f=D;D=c,c=f}var H=this._resolveBackgroundRgba(V!==void 0?50331648:c,V!=null?V:p,m),j=this._resolveForegroundRgba(D,C,m,v),w=d.rgba.ensureContrastRatio(V!=null?V:H,k!=null?k:j,this._optionsService.rawOptions.minimumContrastRatio);if(!w){if(!k)return void this._colors.contrastCache.setColor(U.bg,U.fg,null);w=k}var M={css:d.channels.toCss(w>>24&255,w>>16&255,w>>8&255),rgba:w};return V||k||this._colors.contrastCache.setColor(U.bg,U.fg,M),M}},Q.prototype._resolveBackgroundRgba=function(U,F,B){switch(U){case 16777216:case 33554432:return this._colors.ansi[F].rgba;case 50331648:return F<<8;default:return B?this._colors.foreground.rgba:this._colors.background.rgba}},Q.prototype._resolveForegroundRgba=function(U,F,B,R){switch(U){case 16777216:case 33554432:return this._optionsService.rawOptions.drawBoldTextInBrightColors&&R&&F<8&&(F+=8),this._colors.ansi[F].rgba;case 50331648:return F<<8;default:return B?this._colors.background.rgba:this._colors.foreground.rgba}},Q.prototype._isCellInSelection=function(U,F){var B=this._selectionStart,R=this._selectionEnd;return!(!B||!R)&&(this._columnSelectMode?U>=B[0]&&F>=B[1]&&U<R[0]&&F<R[1]:F>B[1]&&F<R[1]||B[1]===R[1]&&F===B[1]&&U>=B[0]&&U<R[0]||B[1]<R[1]&&F===R[1]&&U<R[0]||B[1]<R[1]&&F===B[1]&&U>=B[0])},Q}();n.BaseRenderLayer=W},2512:function(x,n,o){var t,Z=this&&this.__extends||(t=function(U,F){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(B,R){B.__proto__=R}||function(B,R){for(var J in R)Object.prototype.hasOwnProperty.call(R,J)&&(B[J]=R[J])},t(U,F)},function(U,F){if(typeof F!="function"&&F!==null)throw new TypeError("Class extends value "+String(F)+" is not a constructor or null");function B(){this.constructor=U}t(U,F),U.prototype=F===null?Object.create(F):(B.prototype=F.prototype,new B)}),e=this&&this.__decorate||function(U,F,B,R){var J,V=arguments.length,k=V<3?F:R===null?R=Object.getOwnPropertyDescriptor(F,B):R;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")k=Reflect.decorate(U,F,B,R);else for(var i=U.length-1;i>=0;i--)(J=U[i])&&(k=(V<3?J(k):V>3?J(F,B,k):J(F,B))||k);return V>3&&k&&Object.defineProperty(F,B,k),k},S=this&&this.__param||function(U,F){return function(B,R){F(B,R,U)}};Object.defineProperty(n,"__esModule",{value:!0}),n.CursorRenderLayer=void 0;var r=o(1546),E=o(511),d=o(2585),l=o(4725),N=600,W=function(U){function F(B,R,J,V,k,i,a,h,T,s){var C=U.call(this,B,"cursor",R,!0,J,V,i,a,s)||this;return C._onRequestRedraw=k,C._coreService=h,C._coreBrowserService=T,C._cell=new E.CellData,C._state={x:0,y:0,isFocused:!1,style:"",width:0},C._cursorRenderers={bar:C._renderBarCursor.bind(C),block:C._renderBlockCursor.bind(C),underline:C._renderUnderlineCursor.bind(C)},C}return Z(F,U),F.prototype.dispose=function(){this._cursorBlinkStateManager&&(this._cursorBlinkStateManager.dispose(),this._cursorBlinkStateManager=void 0),U.prototype.dispose.call(this)},F.prototype.resize=function(B){U.prototype.resize.call(this,B),this._state={x:0,y:0,isFocused:!1,style:"",width:0}},F.prototype.reset=function(){var B;this._clearCursor(),(B=this._cursorBlinkStateManager)===null||B===void 0||B.restartBlinkAnimation(),this.onOptionsChanged()},F.prototype.onBlur=function(){var B;(B=this._cursorBlinkStateManager)===null||B===void 0||B.pause(),this._onRequestRedraw.fire({start:this._bufferService.buffer.y,end:this._bufferService.buffer.y})},F.prototype.onFocus=function(){var B;(B=this._cursorBlinkStateManager)===null||B===void 0||B.resume(),this._onRequestRedraw.fire({start:this._bufferService.buffer.y,end:this._bufferService.buffer.y})},F.prototype.onOptionsChanged=function(){var B,R=this;this._optionsService.rawOptions.cursorBlink?this._cursorBlinkStateManager||(this._cursorBlinkStateManager=new Q(this._coreBrowserService.isFocused,function(){R._render(!0)})):((B=this._cursorBlinkStateManager)===null||B===void 0||B.dispose(),this._cursorBlinkStateManager=void 0),this._onRequestRedraw.fire({start:this._bufferService.buffer.y,end:this._bufferService.buffer.y})},F.prototype.onCursorMove=function(){var B;(B=this._cursorBlinkStateManager)===null||B===void 0||B.restartBlinkAnimation()},F.prototype.onGridChanged=function(B,R){!this._cursorBlinkStateManager||this._cursorBlinkStateManager.isPaused?this._render(!1):this._cursorBlinkStateManager.restartBlinkAnimation()},F.prototype._render=function(B){if(this._coreService.isCursorInitialized&&!this._coreService.isCursorHidden){var R=this._bufferService.buffer.ybase+this._bufferService.buffer.y,J=R-this._bufferService.buffer.ydisp;if(J<0||J>=this._bufferService.rows)this._clearCursor();else{var V=Math.min(this._bufferService.buffer.x,this._bufferService.cols-1);if(this._bufferService.buffer.lines.get(R).loadCell(V,this._cell),this._cell.content!==void 0){if(!this._coreBrowserService.isFocused){this._clearCursor(),this._ctx.save(),this._ctx.fillStyle=this._colors.cursor.css;var k=this._optionsService.rawOptions.cursorStyle;return k&&k!=="block"?this._cursorRenderers[k](V,J,this._cell):this._renderBlurCursor(V,J,this._cell),this._ctx.restore(),this._state.x=V,this._state.y=J,this._state.isFocused=!1,this._state.style=k,void(this._state.width=this._cell.getWidth())}if(!this._cursorBlinkStateManager||this._cursorBlinkStateManager.isCursorVisible){if(this._state){if(this._state.x===V&&this._state.y===J&&this._state.isFocused===this._coreBrowserService.isFocused&&this._state.style===this._optionsService.rawOptions.cursorStyle&&this._state.width===this._cell.getWidth())return;this._clearCursor()}this._ctx.save(),this._cursorRenderers[this._optionsService.rawOptions.cursorStyle||"block"](V,J,this._cell),this._ctx.restore(),this._state.x=V,this._state.y=J,this._state.isFocused=!1,this._state.style=this._optionsService.rawOptions.cursorStyle,this._state.width=this._cell.getWidth()}else this._clearCursor()}}}else this._clearCursor()},F.prototype._clearCursor=function(){this._state&&(window.devicePixelRatio<1?this._clearAll():this._clearCells(this._state.x,this._state.y,this._state.width,1),this._state={x:0,y:0,isFocused:!1,style:"",width:0})},F.prototype._renderBarCursor=function(B,R,J){this._ctx.save(),this._ctx.fillStyle=this._colors.cursor.css,this._fillLeftLineAtCell(B,R,this._optionsService.rawOptions.cursorWidth),this._ctx.restore()},F.prototype._renderBlockCursor=function(B,R,J){this._ctx.save(),this._ctx.fillStyle=this._colors.cursor.css,this._fillCells(B,R,J.getWidth(),1),this._ctx.fillStyle=this._colors.cursorAccent.css,this._fillCharTrueColor(J,B,R),this._ctx.restore()},F.prototype._renderUnderlineCursor=function(B,R,J){this._ctx.save(),this._ctx.fillStyle=this._colors.cursor.css,this._fillBottomLineAtCells(B,R),this._ctx.restore()},F.prototype._renderBlurCursor=function(B,R,J){this._ctx.save(),this._ctx.strokeStyle=this._colors.cursor.css,this._strokeRectAtCell(B,R,J.getWidth(),1),this._ctx.restore()},e([S(5,d.IBufferService),S(6,d.IOptionsService),S(7,d.ICoreService),S(8,l.ICoreBrowserService),S(9,d.IDecorationService)],F)}(r.BaseRenderLayer);n.CursorRenderLayer=W;var Q=function(){function U(F,B){this._renderCallback=B,this.isCursorVisible=!0,F&&this._restartInterval()}return Object.defineProperty(U.prototype,"isPaused",{get:function(){return!(this._blinkStartTimeout||this._blinkInterval)},enumerable:!1,configurable:!0}),U.prototype.dispose=function(){this._blinkInterval&&(window.clearInterval(this._blinkInterval),this._blinkInterval=void 0),this._blinkStartTimeout&&(window.clearTimeout(this._blinkStartTimeout),this._blinkStartTimeout=void 0),this._animationFrame&&(window.cancelAnimationFrame(this._animationFrame),this._animationFrame=void 0)},U.prototype.restartBlinkAnimation=function(){var F=this;this.isPaused||(this._animationTimeRestarted=Date.now(),this.isCursorVisible=!0,this._animationFrame||(this._animationFrame=window.requestAnimationFrame(function(){F._renderCallback(),F._animationFrame=void 0})))},U.prototype._restartInterval=function(F){var B=this;F===void 0&&(F=N),this._blinkInterval&&(window.clearInterval(this._blinkInterval),this._blinkInterval=void 0),this._blinkStartTimeout=window.setTimeout(function(){if(B._animationTimeRestarted){var R=N-(Date.now()-B._animationTimeRestarted);if(B._animationTimeRestarted=void 0,R>0)return void B._restartInterval(R)}B.isCursorVisible=!1,B._animationFrame=window.requestAnimationFrame(function(){B._renderCallback(),B._animationFrame=void 0}),B._blinkInterval=window.setInterval(function(){if(B._animationTimeRestarted){var J=N-(Date.now()-B._animationTimeRestarted);return B._animationTimeRestarted=void 0,void B._restartInterval(J)}B.isCursorVisible=!B.isCursorVisible,B._animationFrame=window.requestAnimationFrame(function(){B._renderCallback(),B._animationFrame=void 0})},N)},F)},U.prototype.pause=function(){this.isCursorVisible=!0,this._blinkInterval&&(window.clearInterval(this._blinkInterval),this._blinkInterval=void 0),this._blinkStartTimeout&&(window.clearTimeout(this._blinkStartTimeout),this._blinkStartTimeout=void 0),this._animationFrame&&(window.cancelAnimationFrame(this._animationFrame),this._animationFrame=void 0)},U.prototype.resume=function(){this.pause(),this._animationTimeRestarted=void 0,this._restartInterval(),this.restartBlinkAnimation()},U}()},8978:function(x,n,o){var t,Z,e,S,r,E,d,l,N,W,Q,U,F,B,R,J,V,k,i,a,h,T,s,C,D,p,c,m,v,z,f,H,j,w,M,P,g,UU,X,$,K,O,b,Y,y,L,_,q,QU,VU,lU,I,dU,NU,oU,uU,yF,xF,HF,OF,zF,fF,zU,fU,wU,jU,IU,LU,_U,KU,gU,PU,qU,AU,$U,UF,FF,QF,BF,RF,VF,lF,dF,nF,JF,WF,ZF,eF,SF,tF,NF,EF,kF,aF,rF,hF,iF,TF,oF,CF,cF,pF,DF,sF,MF,mF,bF,YF,vF,XF,GF,uF,wF,jF,IF,LF,_F,KF,gF,PF,qF,AF,$F,UQ,FQ,QQ,BQ,RQ,dQ=this&&this.__read||function(G,u){var RU=typeof Symbol=="function"&&G[Symbol.iterator];if(!RU)return G;var EU,CU,aU=RU.call(G),BU=[];try{for(;(u===void 0||u-- >0)&&!(EU=aU.next()).done;)BU.push(EU.value)}catch(rU){CU={error:rU}}finally{try{EU&&!EU.done&&(RU=aU.return)&&RU.call(aU)}finally{if(CU)throw CU.error}}return BU},VQ=this&&this.__values||function(G){var u=typeof Symbol=="function"&&Symbol.iterator,RU=u&&G[u],EU=0;if(RU)return RU.call(G);if(G&&typeof G.length=="number")return{next:function(){return G&&EU>=G.length&&(G=void 0),{value:G&&G[EU++],done:!G}}};throw new TypeError(u?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(n,"__esModule",{value:!0}),n.tryDrawCustomChar=n.powerlineDefinitions=n.boxDrawingDefinitions=n.blockElementDefinitions=void 0;var nQ=o(1752);n.blockElementDefinitions={"\u2580":[{x:0,y:0,w:8,h:4}],"\u2581":[{x:0,y:7,w:8,h:1}],"\u2582":[{x:0,y:6,w:8,h:2}],"\u2583":[{x:0,y:5,w:8,h:3}],"\u2584":[{x:0,y:4,w:8,h:4}],"\u2585":[{x:0,y:3,w:8,h:5}],"\u2586":[{x:0,y:2,w:8,h:6}],"\u2587":[{x:0,y:1,w:8,h:7}],"\u2588":[{x:0,y:0,w:8,h:8}],"\u2589":[{x:0,y:0,w:7,h:8}],"\u258A":[{x:0,y:0,w:6,h:8}],"\u258B":[{x:0,y:0,w:5,h:8}],"\u258C":[{x:0,y:0,w:4,h:8}],"\u258D":[{x:0,y:0,w:3,h:8}],"\u258E":[{x:0,y:0,w:2,h:8}],"\u258F":[{x:0,y:0,w:1,h:8}],"\u2590":[{x:4,y:0,w:4,h:8}],"\u2594":[{x:0,y:0,w:9,h:1}],"\u2595":[{x:7,y:0,w:1,h:8}],"\u2596":[{x:0,y:4,w:4,h:4}],"\u2597":[{x:4,y:4,w:4,h:4}],"\u2598":[{x:0,y:0,w:4,h:4}],"\u2599":[{x:0,y:0,w:4,h:8},{x:0,y:4,w:8,h:4}],"\u259A":[{x:0,y:0,w:4,h:4},{x:4,y:4,w:4,h:4}],"\u259B":[{x:0,y:0,w:4,h:8},{x:0,y:0,w:4,h:8}],"\u259C":[{x:0,y:0,w:8,h:4},{x:4,y:0,w:4,h:8}],"\u259D":[{x:4,y:0,w:4,h:4}],"\u259E":[{x:4,y:0,w:4,h:4},{x:0,y:4,w:4,h:4}],"\u259F":[{x:4,y:0,w:4,h:8},{x:0,y:4,w:8,h:4}],"\u{1FB70}":[{x:1,y:0,w:1,h:8}],"\u{1FB71}":[{x:2,y:0,w:1,h:8}],"\u{1FB72}":[{x:3,y:0,w:1,h:8}],"\u{1FB73}":[{x:4,y:0,w:1,h:8}],"\u{1FB74}":[{x:5,y:0,w:1,h:8}],"\u{1FB75}":[{x:6,y:0,w:1,h:8}],"\u{1FB76}":[{x:0,y:1,w:8,h:1}],"\u{1FB77}":[{x:0,y:2,w:8,h:1}],"\u{1FB78}":[{x:0,y:3,w:8,h:1}],"\u{1FB79}":[{x:0,y:4,w:8,h:1}],"\u{1FB7A}":[{x:0,y:5,w:8,h:1}],"\u{1FB7B}":[{x:0,y:6,w:8,h:1}],"\u{1FB7C}":[{x:0,y:0,w:1,h:8},{x:0,y:7,w:8,h:1}],"\u{1FB7D}":[{x:0,y:0,w:1,h:8},{x:0,y:0,w:8,h:1}],"\u{1FB7E}":[{x:7,y:0,w:1,h:8},{x:0,y:0,w:8,h:1}],"\u{1FB7F}":[{x:7,y:0,w:1,h:8},{x:0,y:7,w:8,h:1}],"\u{1FB80}":[{x:0,y:0,w:8,h:1},{x:0,y:7,w:8,h:1}],"\u{1FB81}":[{x:0,y:0,w:8,h:1},{x:0,y:2,w:8,h:1},{x:0,y:4,w:8,h:1},{x:0,y:7,w:8,h:1}],"\u{1FB82}":[{x:0,y:0,w:8,h:2}],"\u{1FB83}":[{x:0,y:0,w:8,h:3}],"\u{1FB84}":[{x:0,y:0,w:8,h:5}],"\u{1FB85}":[{x:0,y:0,w:8,h:6}],"\u{1FB86}":[{x:0,y:0,w:8,h:7}],"\u{1FB87}":[{x:6,y:0,w:2,h:8}],"\u{1FB88}":[{x:5,y:0,w:3,h:8}],"\u{1FB89}":[{x:3,y:0,w:5,h:8}],"\u{1FB8A}":[{x:2,y:0,w:6,h:8}],"\u{1FB8B}":[{x:1,y:0,w:7,h:8}],"\u{1FB95}":[{x:0,y:0,w:2,h:2},{x:4,y:0,w:2,h:2},{x:2,y:2,w:2,h:2},{x:6,y:2,w:2,h:2},{x:0,y:4,w:2,h:2},{x:4,y:4,w:2,h:2},{x:2,y:6,w:2,h:2},{x:6,y:6,w:2,h:2}],"\u{1FB96}":[{x:2,y:0,w:2,h:2},{x:6,y:0,w:2,h:2},{x:0,y:2,w:2,h:2},{x:4,y:2,w:2,h:2},{x:2,y:4,w:2,h:2},{x:6,y:4,w:2,h:2},{x:0,y:6,w:2,h:2},{x:4,y:6,w:2,h:2}],"\u{1FB97}":[{x:0,y:2,w:8,h:2},{x:0,y:6,w:8,h:2}]};var aQ={"\u2591":[[1,0,0,0],[0,0,0,0],[0,0,1,0],[0,0,0,0]],"\u2592":[[1,0],[0,0],[0,1],[0,0]],"\u2593":[[0,1],[1,1],[1,0],[1,1]]};n.boxDrawingDefinitions={"\u2500":(t={},t[1]="M0,.5 L1,.5",t),"\u2501":(Z={},Z[3]="M0,.5 L1,.5",Z),"\u2502":(e={},e[1]="M.5,0 L.5,1",e),"\u2503":(S={},S[3]="M.5,0 L.5,1",S),"\u250C":(r={},r[1]="M0.5,1 L.5,.5 L1,.5",r),"\u250F":(E={},E[3]="M0.5,1 L.5,.5 L1,.5",E),"\u2510":(d={},d[1]="M0,.5 L.5,.5 L.5,1",d),"\u2513":(l={},l[3]="M0,.5 L.5,.5 L.5,1",l),"\u2514":(N={},N[1]="M.5,0 L.5,.5 L1,.5",N),"\u2517":(W={},W[3]="M.5,0 L.5,.5 L1,.5",W),"\u2518":(Q={},Q[1]="M.5,0 L.5,.5 L0,.5",Q),"\u251B":(U={},U[3]="M.5,0 L.5,.5 L0,.5",U),"\u251C":(F={},F[1]="M.5,0 L.5,1 M.5,.5 L1,.5",F),"\u2523":(B={},B[3]="M.5,0 L.5,1 M.5,.5 L1,.5",B),"\u2524":(R={},R[1]="M.5,0 L.5,1 M.5,.5 L0,.5",R),"\u252B":(J={},J[3]="M.5,0 L.5,1 M.5,.5 L0,.5",J),"\u252C":(V={},V[1]="M0,.5 L1,.5 M.5,.5 L.5,1",V),"\u2533":(k={},k[3]="M0,.5 L1,.5 M.5,.5 L.5,1",k),"\u2534":(i={},i[1]="M0,.5 L1,.5 M.5,.5 L.5,0",i),"\u253B":(a={},a[3]="M0,.5 L1,.5 M.5,.5 L.5,0",a),"\u253C":(h={},h[1]="M0,.5 L1,.5 M.5,0 L.5,1",h),"\u254B":(T={},T[3]="M0,.5 L1,.5 M.5,0 L.5,1",T),"\u2574":(s={},s[1]="M.5,.5 L0,.5",s),"\u2578":(C={},C[3]="M.5,.5 L0,.5",C),"\u2575":(D={},D[1]="M.5,.5 L.5,0",D),"\u2579":(p={},p[3]="M.5,.5 L.5,0",p),"\u2576":(c={},c[1]="M.5,.5 L1,.5",c),"\u257A":(m={},m[3]="M.5,.5 L1,.5",m),"\u2577":(v={},v[1]="M.5,.5 L.5,1",v),"\u257B":(z={},z[3]="M.5,.5 L.5,1",z),"\u2550":(f={},f[1]=function(G,u){return"M0,"+(.5-u)+" L1,"+(.5-u)+" M0,"+(.5+u)+" L1,"+(.5+u)},f),"\u2551":(H={},H[1]=function(G,u){return"M"+(.5-G)+",0 L"+(.5-G)+",1 M"+(.5+G)+",0 L"+(.5+G)+",1"},H),"\u2552":(j={},j[1]=function(G,u){return"M.5,1 L.5,"+(.5-u)+" L1,"+(.5-u)+" M.5,"+(.5+u)+" L1,"+(.5+u)},j),"\u2553":(w={},w[1]=function(G,u){return"M"+(.5-G)+",1 L"+(.5-G)+",.5 L1,.5 M"+(.5+G)+",.5 L"+(.5+G)+",1"},w),"\u2554":(M={},M[1]=function(G,u){return"M1,"+(.5-u)+" L"+(.5-G)+","+(.5-u)+" L"+(.5-G)+",1 M1,"+(.5+u)+" L"+(.5+G)+","+(.5+u)+" L"+(.5+G)+",1"},M),"\u2555":(P={},P[1]=function(G,u){return"M0,"+(.5-u)+" L.5,"+(.5-u)+" L.5,1 M0,"+(.5+u)+" L.5,"+(.5+u)},P),"\u2556":(g={},g[1]=function(G,u){return"M"+(.5+G)+",1 L"+(.5+G)+",.5 L0,.5 M"+(.5-G)+",.5 L"+(.5-G)+",1"},g),"\u2557":(UU={},UU[1]=function(G,u){return"M0,"+(.5+u)+" L"+(.5-G)+","+(.5+u)+" L"+(.5-G)+",1 M0,"+(.5-u)+" L"+(.5+G)+","+(.5-u)+" L"+(.5+G)+",1"},UU),"\u2558":(X={},X[1]=function(G,u){return"M.5,0 L.5,"+(.5+u)+" L1,"+(.5+u)+" M.5,"+(.5-u)+" L1,"+(.5-u)},X),"\u2559":($={},$[1]=function(G,u){return"M1,.5 L"+(.5-G)+",.5 L"+(.5-G)+",0 M"+(.5+G)+",.5 L"+(.5+G)+",0"},$),"\u255A":(K={},K[1]=function(G,u){return"M1,"+(.5-u)+" L"+(.5+G)+","+(.5-u)+" L"+(.5+G)+",0 M1,"+(.5+u)+" L"+(.5-G)+","+(.5+u)+" L"+(.5-G)+",0"},K),"\u255B":(O={},O[1]=function(G,u){return"M0,"+(.5+u)+" L.5,"+(.5+u)+" L.5,0 M0,"+(.5-u)+" L.5,"+(.5-u)},O),"\u255C":(b={},b[1]=function(G,u){return"M0,.5 L"+(.5+G)+",.5 L"+(.5+G)+",0 M"+(.5-G)+",.5 L"+(.5-G)+",0"},b),"\u255D":(Y={},Y[1]=function(G,u){return"M0,"+(.5-u)+" L"+(.5-G)+","+(.5-u)+" L"+(.5-G)+",0 M0,"+(.5+u)+" L"+(.5+G)+","+(.5+u)+" L"+(.5+G)+",0"},Y),"\u255E":(y={},y[1]=function(G,u){return"M.5,0 L.5,1 M.5,"+(.5-u)+" L1,"+(.5-u)+" M.5,"+(.5+u)+" L1,"+(.5+u)},y),"\u255F":(L={},L[1]=function(G,u){return"M"+(.5-G)+",0 L"+(.5-G)+",1 M"+(.5+G)+",0 L"+(.5+G)+",1 M"+(.5+G)+",.5 L1,.5"},L),"\u2560":(_={},_[1]=function(G,u){return"M"+(.5-G)+",0 L"+(.5-G)+",1 M1,"+(.5+u)+" L"+(.5+G)+","+(.5+u)+" L"+(.5+G)+",1 M1,"+(.5-u)+" L"+(.5+G)+","+(.5-u)+" L"+(.5+G)+",0"},_),"\u2561":(q={},q[1]=function(G,u){return"M.5,0 L.5,1 M0,"+(.5-u)+" L.5,"+(.5-u)+" M0,"+(.5+u)+" L.5,"+(.5+u)},q),"\u2562":(QU={},QU[1]=function(G,u){return"M0,.5 L"+(.5-G)+",.5 M"+(.5-G)+",0 L"+(.5-G)+",1 M"+(.5+G)+",0 L"+(.5+G)+",1"},QU),"\u2563":(VU={},VU[1]=function(G,u){return"M"+(.5+G)+",0 L"+(.5+G)+",1 M0,"+(.5+u)+" L"+(.5-G)+","+(.5+u)+" L"+(.5-G)+",1 M0,"+(.5-u)+" L"+(.5-G)+","+(.5-u)+" L"+(.5-G)+",0"},VU),"\u2564":(lU={},lU[1]=function(G,u){return"M0,"+(.5-u)+" L1,"+(.5-u)+" M0,"+(.5+u)+" L1,"+(.5+u)+" M.5,"+(.5+u)+" L.5,1"},lU),"\u2565":(I={},I[1]=function(G,u){return"M0,.5 L1,.5 M"+(.5-G)+",.5 L"+(.5-G)+",1 M"+(.5+G)+",.5 L"+(.5+G)+",1"},I),"\u2566":(dU={},dU[1]=function(G,u){return"M0,"+(.5-u)+" L1,"+(.5-u)+" M0,"+(.5+u)+" L"+(.5-G)+","+(.5+u)+" L"+(.5-G)+",1 M1,"+(.5+u)+" L"+(.5+G)+","+(.5+u)+" L"+(.5+G)+",1"},dU),"\u2567":(NU={},NU[1]=function(G,u){return"M.5,0 L.5,"+(.5-u)+" M0,"+(.5-u)+" L1,"+(.5-u)+" M0,"+(.5+u)+" L1,"+(.5+u)},NU),"\u2568":(oU={},oU[1]=function(G,u){return"M0,.5 L1,.5 M"+(.5-G)+",.5 L"+(.5-G)+",0 M"+(.5+G)+",.5 L"+(.5+G)+",0"},oU),"\u2569":(uU={},uU[1]=function(G,u){return"M0,"+(.5+u)+" L1,"+(.5+u)+" M0,"+(.5-u)+" L"+(.5-G)+","+(.5-u)+" L"+(.5-G)+",0 M1,"+(.5-u)+" L"+(.5+G)+","+(.5-u)+" L"+(.5+G)+",0"},uU),"\u256A":(yF={},yF[1]=function(G,u){return"M.5,0 L.5,1 M0,"+(.5-u)+" L1,"+(.5-u)+" M0,"+(.5+u)+" L1,"+(.5+u)},yF),"\u256B":(xF={},xF[1]=function(G,u){return"M0,.5 L1,.5 M"+(.5-G)+",0 L"+(.5-G)+",1 M"+(.5+G)+",0 L"+(.5+G)+",1"},xF),"\u256C":(HF={},HF[1]=function(G,u){return"M0,"+(.5+u)+" L"+(.5-G)+","+(.5+u)+" L"+(.5-G)+",1 M1,"+(.5+u)+" L"+(.5+G)+","+(.5+u)+" L"+(.5+G)+",1 M0,"+(.5-u)+" L"+(.5-G)+","+(.5-u)+" L"+(.5-G)+",0 M1,"+(.5-u)+" L"+(.5+G)+","+(.5-u)+" L"+(.5+G)+",0"},HF),"\u2571":(OF={},OF[1]="M1,0 L0,1",OF),"\u2572":(zF={},zF[1]="M0,0 L1,1",zF),"\u2573":(fF={},fF[1]="M1,0 L0,1 M0,0 L1,1",fF),"\u257C":(zU={},zU[1]="M.5,.5 L0,.5",zU[3]="M.5,.5 L1,.5",zU),"\u257D":(fU={},fU[1]="M.5,.5 L.5,0",fU[3]="M.5,.5 L.5,1",fU),"\u257E":(wU={},wU[1]="M.5,.5 L1,.5",wU[3]="M.5,.5 L0,.5",wU),"\u257F":(jU={},jU[1]="M.5,.5 L.5,1",jU[3]="M.5,.5 L.5,0",jU),"\u250D":(IU={},IU[1]="M.5,.5 L.5,1",IU[3]="M.5,.5 L1,.5",IU),"\u250E":(LU={},LU[1]="M.5,.5 L1,.5",LU[3]="M.5,.5 L.5,1",LU),"\u2511":(_U={},_U[1]="M.5,.5 L.5,1",_U[3]="M.5,.5 L0,.5",_U),"\u2512":(KU={},KU[1]="M.5,.5 L0,.5",KU[3]="M.5,.5 L.5,1",KU),"\u2515":(gU={},gU[1]="M.5,.5 L.5,0",gU[3]="M.5,.5 L1,.5",gU),"\u2516":(PU={},PU[1]="M.5,.5 L1,.5",PU[3]="M.5,.5 L.5,0",PU),"\u2519":(qU={},qU[1]="M.5,.5 L.5,0",qU[3]="M.5,.5 L0,.5",qU),"\u251A":(AU={},AU[1]="M.5,.5 L0,.5",AU[3]="M.5,.5 L.5,0",AU),"\u251D":($U={},$U[1]="M.5,0 L.5,1",$U[3]="M.5,.5 L1,.5",$U),"\u251E":(UF={},UF[1]="M0.5,1 L.5,.5 L1,.5",UF[3]="M.5,.5 L.5,0",UF),"\u251F":(FF={},FF[1]="M.5,0 L.5,.5 L1,.5",FF[3]="M.5,.5 L.5,1",FF),"\u2520":(QF={},QF[1]="M.5,.5 L1,.5",QF[3]="M.5,0 L.5,1",QF),"\u2521":(BF={},BF[1]="M.5,.5 L.5,1",BF[3]="M.5,0 L.5,.5 L1,.5",BF),"\u2522":(RF={},RF[1]="M.5,.5 L.5,0",RF[3]="M0.5,1 L.5,.5 L1,.5",RF),"\u2525":(VF={},VF[1]="M.5,0 L.5,1",VF[3]="M.5,.5 L0,.5",VF),"\u2526":(lF={},lF[1]="M0,.5 L.5,.5 L.5,1",lF[3]="M.5,.5 L.5,0",lF),"\u2527":(dF={},dF[1]="M.5,0 L.5,.5 L0,.5",dF[3]="M.5,.5 L.5,1",dF),"\u2528":(nF={},nF[1]="M.5,.5 L0,.5",nF[3]="M.5,0 L.5,1",nF),"\u2529":(JF={},JF[1]="M.5,.5 L.5,1",JF[3]="M.5,0 L.5,.5 L0,.5",JF),"\u252A":(WF={},WF[1]="M.5,.5 L.5,0",WF[3]="M0,.5 L.5,.5 L.5,1",WF),"\u252D":(ZF={},ZF[1]="M0.5,1 L.5,.5 L1,.5",ZF[3]="M.5,.5 L0,.5",ZF),"\u252E":(eF={},eF[1]="M0,.5 L.5,.5 L.5,1",eF[3]="M.5,.5 L1,.5",eF),"\u252F":(SF={},SF[1]="M.5,.5 L.5,1",SF[3]="M0,.5 L1,.5",SF),"\u2530":(tF={},tF[1]="M0,.5 L1,.5",tF[3]="M.5,.5 L.5,1",tF),"\u2531":(NF={},NF[1]="M.5,.5 L1,.5",NF[3]="M0,.5 L.5,.5 L.5,1",NF),"\u2532":(EF={},EF[1]="M.5,.5 L0,.5",EF[3]="M0.5,1 L.5,.5 L1,.5",EF),"\u2535":(kF={},kF[1]="M.5,0 L.5,.5 L1,.5",kF[3]="M.5,.5 L0,.5",kF),"\u2536":(aF={},aF[1]="M.5,0 L.5,.5 L0,.5",aF[3]="M.5,.5 L1,.5",aF),"\u2537":(rF={},rF[1]="M.5,.5 L.5,0",rF[3]="M0,.5 L1,.5",rF),"\u2538":(hF={},hF[1]="M0,.5 L1,.5",hF[3]="M.5,.5 L.5,0",hF),"\u2539":(iF={},iF[1]="M.5,.5 L1,.5",iF[3]="M.5,0 L.5,.5 L0,.5",iF),"\u253A":(TF={},TF[1]="M.5,.5 L0,.5",TF[3]="M.5,0 L.5,.5 L1,.5",TF),"\u253D":(oF={},oF[1]="M.5,0 L.5,1 M.5,.5 L1,.5",oF[3]="M.5,.5 L0,.5",oF),"\u253E":(CF={},CF[1]="M.5,0 L.5,1 M.5,.5 L0,.5",CF[3]="M.5,.5 L1,.5",CF),"\u253F":(cF={},cF[1]="M.5,0 L.5,1",cF[3]="M0,.5 L1,.5",cF),"\u2540":(pF={},pF[1]="M0,.5 L1,.5 M.5,.5 L.5,1",pF[3]="M.5,.5 L.5,0",pF),"\u2541":(DF={},DF[1]="M.5,.5 L.5,0 M0,.5 L1,.5",DF[3]="M.5,.5 L.5,1",DF),"\u2542":(sF={},sF[1]="M0,.5 L1,.5",sF[3]="M.5,0 L.5,1",sF),"\u2543":(MF={},MF[1]="M0.5,1 L.5,.5 L1,.5",MF[3]="M.5,0 L.5,.5 L0,.5",MF),"\u2544":(mF={},mF[1]="M0,.5 L.5,.5 L.5,1",mF[3]="M.5,0 L.5,.5 L1,.5",mF),"\u2545":(bF={},bF[1]="M.5,0 L.5,.5 L1,.5",bF[3]="M0,.5 L.5,.5 L.5,1",bF),"\u2546":(YF={},YF[1]="M.5,0 L.5,.5 L0,.5",YF[3]="M0.5,1 L.5,.5 L1,.5",YF),"\u2547":(vF={},vF[1]="M.5,.5 L.5,1",vF[3]="M.5,.5 L.5,0 M0,.5 L1,.5",vF),"\u2548":(XF={},XF[1]="M.5,.5 L.5,0",XF[3]="M0,.5 L1,.5 M.5,.5 L.5,1",XF),"\u2549":(GF={},GF[1]="M.5,.5 L1,.5",GF[3]="M.5,0 L.5,1 M.5,.5 L0,.5",GF),"\u254A":(uF={},uF[1]="M.5,.5 L0,.5",uF[3]="M.5,0 L.5,1 M.5,.5 L1,.5",uF),"\u254C":(wF={},wF[1]="M.1,.5 L.4,.5 M.6,.5 L.9,.5",wF),"\u254D":(jF={},jF[3]="M.1,.5 L.4,.5 M.6,.5 L.9,.5",jF),"\u2504":(IF={},IF[1]="M.0667,.5 L.2667,.5 M.4,.5 L.6,.5 M.7333,.5 L.9333,.5",IF),"\u2505":(LF={},LF[3]="M.0667,.5 L.2667,.5 M.4,.5 L.6,.5 M.7333,.5 L.9333,.5",LF),"\u2508":(_F={},_F[1]="M.05,.5 L.2,.5 M.3,.5 L.45,.5 M.55,.5 L.7,.5 M.8,.5 L.95,.5",_F),"\u2509":(KF={},KF[3]="M.05,.5 L.2,.5 M.3,.5 L.45,.5 M.55,.5 L.7,.5 M.8,.5 L.95,.5",KF),"\u254E":(gF={},gF[1]="M.5,.1 L.5,.4 M.5,.6 L.5,.9",gF),"\u254F":(PF={},PF[3]="M.5,.1 L.5,.4 M.5,.6 L.5,.9",PF),"\u2506":(qF={},qF[1]="M.5,.0667 L.5,.2667 M.5,.4 L.5,.6 M.5,.7333 L.5,.9333",qF),"\u2507":(AF={},AF[3]="M.5,.0667 L.5,.2667 M.5,.4 L.5,.6 M.5,.7333 L.5,.9333",AF),"\u250A":($F={},$F[1]="M.5,.05 L.5,.2 M.5,.3 L.5,.45 L.5,.55 M.5,.7 L.5,.95",$F),"\u250B":(UQ={},UQ[3]="M.5,.05 L.5,.2 M.5,.3 L.5,.45 L.5,.55 M.5,.7 L.5,.95",UQ),"\u256D":(FQ={},FQ[1]="C.5,1,.5,.5,1,.5",FQ),"\u256E":(QQ={},QQ[1]="C.5,1,.5,.5,0,.5",QQ),"\u256F":(BQ={},BQ[1]="C.5,0,.5,.5,0,.5",BQ),"\u2570":(RQ={},RQ[1]="C.5,0,.5,.5,1,.5",RQ)},n.powerlineDefinitions={"\uE0B0":{d:"M0,0 L1,.5 L0,1",type:0},"\uE0B1":{d:"M0,0 L1,.5 L0,1",type:1,horizontalPadding:.5},"\uE0B2":{d:"M1,0 L0,.5 L1,1",type:0},"\uE0B3":{d:"M1,0 L0,.5 L1,1",type:1,horizontalPadding:.5}},n.tryDrawCustomChar=function(G,u,RU,EU,CU,aU){var BU=n.blockElementDefinitions[u];if(BU)return function(FU,kU,vU,XU,mU,bU){for(var JU=0;JU<kU.length;JU++){var WU=kU[JU],A=mU/8,ZU=bU/8;FU.fillRect(vU+WU.x*A,XU+WU.y*ZU,WU.w*A,WU.h*ZU)}}(G,BU,RU,EU,CU,aU),!0;var rU=aQ[u];if(rU)return function(FU,kU,vU,XU,mU,bU){var JU,WU=JQ.get(kU);WU||(WU=new Map,JQ.set(kU,WU));var A=FU.fillStyle;if(typeof A!="string")throw new Error('Unexpected fillStyle type "'+A+'"');var ZU=WU.get(A);if(!ZU){var eU=kU[0].length,hU=kU.length,pU=document.createElement("canvas");pU.width=eU,pU.height=hU;var GU=(0,nQ.throwIfFalsy)(pU.getContext("2d")),TU=new ImageData(eU,hU),yU=void 0,YU=void 0,MU=void 0,xU=void 0;if(A.startsWith("#"))yU=parseInt(A.slice(1,3),16),YU=parseInt(A.slice(3,5),16),MU=parseInt(A.slice(5,7),16),xU=A.length>7&&parseInt(A.slice(7,9),16)||1;else{if(!A.startsWith("rgba"))throw new Error('Unexpected fillStyle color format "'+A+'" when drawing pattern glyph');yU=(JU=dQ(A.substring(5,A.length-1).split(",").map(function(OU){return parseFloat(OU)}),4))[0],YU=JU[1],MU=JU[2],xU=JU[3]}for(var DU=0;DU<hU;DU++)for(var sU=0;sU<eU;sU++)TU.data[4*(DU*eU+sU)]=yU,TU.data[4*(DU*eU+sU)+1]=YU,TU.data[4*(DU*eU+sU)+2]=MU,TU.data[4*(DU*eU+sU)+3]=kU[DU][sU]*(255*xU);GU.putImageData(TU,0,0),ZU=(0,nQ.throwIfFalsy)(FU.createPattern(pU,null)),WU.set(A,ZU)}FU.fillStyle=ZU,FU.fillRect(vU,XU,mU,bU)}(G,rU,RU,EU,CU,aU),!0;var cU=n.boxDrawingDefinitions[u];if(cU)return function(FU,kU,vU,XU,mU,bU){var JU,WU,A,ZU;FU.strokeStyle=FU.fillStyle;try{for(var eU=VQ(Object.entries(kU)),hU=eU.next();!hU.done;hU=eU.next()){var pU=dQ(hU.value,2),GU=pU[0],TU=pU[1];FU.beginPath(),FU.lineWidth=window.devicePixelRatio*Number.parseInt(GU);var yU=void 0;yU=typeof TU=="function"?TU(.15,.15/bU*mU):TU;try{for(var YU=(A=void 0,VQ(yU.split(" "))),MU=YU.next();!MU.done;MU=YU.next()){var xU=MU.value,DU=xU[0],sU=ZQ[DU];if(sU){var OU=xU.substring(1).split(",");OU[0]&&OU[1]&&sU(FU,eQ(OU,mU,bU,vU,XU))}else console.error('Could not find drawing instructions for "'+DU+'"')}}catch(lQ){A={error:lQ}}finally{try{MU&&!MU.done&&(ZU=YU.return)&&ZU.call(YU)}finally{if(A)throw A.error}}FU.stroke(),FU.closePath()}}catch(lQ){JU={error:lQ}}finally{try{hU&&!hU.done&&(WU=eU.return)&&WU.call(eU)}finally{if(JU)throw JU.error}}}(G,cU,RU,EU,CU,aU),!0;var HU=n.powerlineDefinitions[u];return!!HU&&(function(FU,kU,vU,XU,mU,bU){var JU,WU;FU.beginPath(),FU.lineWidth=window.devicePixelRatio;try{for(var A=VQ(kU.d.split(" ")),ZU=A.next();!ZU.done;ZU=A.next()){var eU=ZU.value,hU=eU[0],pU=ZQ[hU];if(pU){var GU=eU.substring(1).split(",");GU[0]&&GU[1]&&pU(FU,eQ(GU,mU,bU,vU,XU,kU.horizontalPadding))}else console.error('Could not find drawing instructions for "'+hU+'"')}}catch(TU){JU={error:TU}}finally{try{ZU&&!ZU.done&&(WU=A.return)&&WU.call(A)}finally{if(JU)throw JU.error}}kU.type===1?(FU.strokeStyle=FU.fillStyle,FU.stroke()):FU.fill(),FU.closePath()}(G,HU,RU,EU,CU,aU),!0)};var JQ=new Map;function WQ(G,u,RU){return RU===void 0&&(RU=0),Math.max(Math.min(G,u),RU)}var ZQ={C:function(G,u){return G.bezierCurveTo(u[0],u[1],u[2],u[3],u[4],u[5])},L:function(G,u){return G.lineTo(u[0],u[1])},M:function(G,u){return G.moveTo(u[0],u[1])}};function eQ(G,u,RU,EU,CU,aU){aU===void 0&&(aU=0);var BU=G.map(function(HU){return parseFloat(HU)||parseInt(HU)});if(BU.length<2)throw new Error("Too few arguments for instruction");for(var rU=0;rU<BU.length;rU+=2)BU[rU]*=u-2*aU*window.devicePixelRatio,BU[rU]!==0&&(BU[rU]=WQ(Math.round(BU[rU]+.5)-.5,u,0)),BU[rU]+=EU+aU*window.devicePixelRatio;for(var cU=1;cU<BU.length;cU+=2)BU[cU]*=RU,BU[cU]!==0&&(BU[cU]=WQ(Math.round(BU[cU]+.5)-.5,RU,0)),BU[cU]+=CU;return BU}},3700:(x,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.GridCache=void 0;var o=function(){function t(){this.cache=[]}return t.prototype.resize=function(Z,e){for(var S=0;S<Z;S++){this.cache.length<=S&&this.cache.push([]);for(var r=this.cache[S].length;r<e;r++)this.cache[S].push(void 0);this.cache[S].length=e}this.cache.length=Z},t.prototype.clear=function(){for(var Z=0;Z<this.cache.length;Z++)for(var e=0;e<this.cache[Z].length;e++)this.cache[Z][e]=void 0},t}();n.GridCache=o},5098:function(x,n,o){var t,Z=this&&this.__extends||(t=function(W,Q){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(U,F){U.__proto__=F}||function(U,F){for(var B in F)Object.prototype.hasOwnProperty.call(F,B)&&(U[B]=F[B])},t(W,Q)},function(W,Q){if(typeof Q!="function"&&Q!==null)throw new TypeError("Class extends value "+String(Q)+" is not a constructor or null");function U(){this.constructor=W}t(W,Q),W.prototype=Q===null?Object.create(Q):(U.prototype=Q.prototype,new U)}),e=this&&this.__decorate||function(W,Q,U,F){var B,R=arguments.length,J=R<3?Q:F===null?F=Object.getOwnPropertyDescriptor(Q,U):F;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")J=Reflect.decorate(W,Q,U,F);else for(var V=W.length-1;V>=0;V--)(B=W[V])&&(J=(R<3?B(J):R>3?B(Q,U,J):B(Q,U))||J);return R>3&&J&&Object.defineProperty(Q,U,J),J},S=this&&this.__param||function(W,Q){return function(U,F){Q(U,F,W)}};Object.defineProperty(n,"__esModule",{value:!0}),n.LinkRenderLayer=void 0;var r=o(1546),E=o(8803),d=o(2040),l=o(2585),N=function(W){function Q(U,F,B,R,J,V,k,i,a){var h=W.call(this,U,"link",F,!0,B,R,k,i,a)||this;return J.onShowLinkUnderline(function(T){return h._onShowLinkUnderline(T)}),J.onHideLinkUnderline(function(T){return h._onHideLinkUnderline(T)}),V.onShowLinkUnderline(function(T){return h._onShowLinkUnderline(T)}),V.onHideLinkUnderline(function(T){return h._onHideLinkUnderline(T)}),h}return Z(Q,W),Q.prototype.resize=function(U){W.prototype.resize.call(this,U),this._state=void 0},Q.prototype.reset=function(){this._clearCurrentLink()},Q.prototype._clearCurrentLink=function(){if(this._state){this._clearCells(this._state.x1,this._state.y1,this._state.cols-this._state.x1,1);var U=this._state.y2-this._state.y1-1;U>0&&this._clearCells(0,this._state.y1+1,this._state.cols,U),this._clearCells(0,this._state.y2,this._state.x2,1),this._state=void 0}},Q.prototype._onShowLinkUnderline=function(U){if(U.fg===E.INVERTED_DEFAULT_COLOR?this._ctx.fillStyle=this._colors.background.css:U.fg&&(0,d.is256Color)(U.fg)?this._ctx.fillStyle=this._colors.ansi[U.fg].css:this._ctx.fillStyle=this._colors.foreground.css,U.y1===U.y2)this._fillBottomLineAtCells(U.x1,U.y1,U.x2-U.x1);else{this._fillBottomLineAtCells(U.x1,U.y1,U.cols-U.x1);for(var F=U.y1+1;F<U.y2;F++)this._fillBottomLineAtCells(0,F,U.cols);this._fillBottomLineAtCells(0,U.y2,U.x2)}this._state=U},Q.prototype._onHideLinkUnderline=function(U){this._clearCurrentLink()},e([S(6,l.IBufferService),S(7,l.IOptionsService),S(8,l.IDecorationService)],Q)}(r.BaseRenderLayer);n.LinkRenderLayer=N},3525:function(x,n,o){var t,Z=this&&this.__extends||(t=function(V,k){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(i,a){i.__proto__=a}||function(i,a){for(var h in a)Object.prototype.hasOwnProperty.call(a,h)&&(i[h]=a[h])},t(V,k)},function(V,k){if(typeof k!="function"&&k!==null)throw new TypeError("Class extends value "+String(k)+" is not a constructor or null");function i(){this.constructor=V}t(V,k),V.prototype=k===null?Object.create(k):(i.prototype=k.prototype,new i)}),e=this&&this.__decorate||function(V,k,i,a){var h,T=arguments.length,s=T<3?k:a===null?a=Object.getOwnPropertyDescriptor(k,i):a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")s=Reflect.decorate(V,k,i,a);else for(var C=V.length-1;C>=0;C--)(h=V[C])&&(s=(T<3?h(s):T>3?h(k,i,s):h(k,i))||s);return T>3&&s&&Object.defineProperty(k,i,s),s},S=this&&this.__param||function(V,k){return function(i,a){k(i,a,V)}},r=this&&this.__values||function(V){var k=typeof Symbol=="function"&&Symbol.iterator,i=k&&V[k],a=0;if(i)return i.call(V);if(V&&typeof V.length=="number")return{next:function(){return V&&a>=V.length&&(V=void 0),{value:V&&V[a++],done:!V}}};throw new TypeError(k?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(n,"__esModule",{value:!0}),n.Renderer=void 0;var E=o(9596),d=o(4149),l=o(2512),N=o(5098),W=o(844),Q=o(4725),U=o(2585),F=o(1420),B=o(8460),R=1,J=function(V){function k(i,a,h,T,s,C,D,p){var c=V.call(this)||this;c._colors=i,c._screenElement=a,c._bufferService=C,c._charSizeService=D,c._optionsService=p,c._id=R++,c._onRequestRedraw=new B.EventEmitter;var m=c._optionsService.rawOptions.allowTransparency;return c._renderLayers=[s.createInstance(E.TextRenderLayer,c._screenElement,0,c._colors,m,c._id),s.createInstance(d.SelectionRenderLayer,c._screenElement,1,c._colors,c._id),s.createInstance(N.LinkRenderLayer,c._screenElement,2,c._colors,c._id,h,T),s.createInstance(l.CursorRenderLayer,c._screenElement,3,c._colors,c._id,c._onRequestRedraw)],c.dimensions={scaledCharWidth:0,scaledCharHeight:0,scaledCellWidth:0,scaledCellHeight:0,scaledCharLeft:0,scaledCharTop:0,scaledCanvasWidth:0,scaledCanvasHeight:0,canvasWidth:0,canvasHeight:0,actualCellWidth:0,actualCellHeight:0},c._devicePixelRatio=window.devicePixelRatio,c._updateDimensions(),c.onOptionsChanged(),c}return Z(k,V),Object.defineProperty(k.prototype,"onRequestRedraw",{get:function(){return this._onRequestRedraw.event},enumerable:!1,configurable:!0}),k.prototype.dispose=function(){var i,a;try{for(var h=r(this._renderLayers),T=h.next();!T.done;T=h.next())T.value.dispose()}catch(s){i={error:s}}finally{try{T&&!T.done&&(a=h.return)&&a.call(h)}finally{if(i)throw i.error}}V.prototype.dispose.call(this),(0,F.removeTerminalFromCache)(this._id)},k.prototype.onDevicePixelRatioChange=function(){this._devicePixelRatio!==window.devicePixelRatio&&(this._devicePixelRatio=window.devicePixelRatio,this.onResize(this._bufferService.cols,this._bufferService.rows))},k.prototype.setColors=function(i){var a,h;this._colors=i;try{for(var T=r(this._renderLayers),s=T.next();!s.done;s=T.next()){var C=s.value;C.setColors(this._colors),C.reset()}}catch(D){a={error:D}}finally{try{s&&!s.done&&(h=T.return)&&h.call(T)}finally{if(a)throw a.error}}},k.prototype.onResize=function(i,a){var h,T;this._updateDimensions();try{for(var s=r(this._renderLayers),C=s.next();!C.done;C=s.next())C.value.resize(this.dimensions)}catch(D){h={error:D}}finally{try{C&&!C.done&&(T=s.return)&&T.call(s)}finally{if(h)throw h.error}}this._screenElement.style.width=this.dimensions.canvasWidth+"px",this._screenElement.style.height=this.dimensions.canvasHeight+"px"},k.prototype.onCharSizeChanged=function(){this.onResize(this._bufferService.cols,this._bufferService.rows)},k.prototype.onBlur=function(){this._runOperation(function(i){return i.onBlur()})},k.prototype.onFocus=function(){this._runOperation(function(i){return i.onFocus()})},k.prototype.onSelectionChanged=function(i,a,h){h===void 0&&(h=!1),this._runOperation(function(T){return T.onSelectionChanged(i,a,h)}),this._colors.selectionForeground&&this._onRequestRedraw.fire({start:0,end:this._bufferService.rows-1})},k.prototype.onCursorMove=function(){this._runOperation(function(i){return i.onCursorMove()})},k.prototype.onOptionsChanged=function(){this._runOperation(function(i){return i.onOptionsChanged()})},k.prototype.clear=function(){this._runOperation(function(i){return i.reset()})},k.prototype._runOperation=function(i){var a,h;try{for(var T=r(this._renderLayers),s=T.next();!s.done;s=T.next())i(s.value)}catch(C){a={error:C}}finally{try{s&&!s.done&&(h=T.return)&&h.call(T)}finally{if(a)throw a.error}}},k.prototype.renderRows=function(i,a){var h,T;try{for(var s=r(this._renderLayers),C=s.next();!C.done;C=s.next())C.value.onGridChanged(i,a)}catch(D){h={error:D}}finally{try{C&&!C.done&&(T=s.return)&&T.call(s)}finally{if(h)throw h.error}}},k.prototype.clearTextureAtlas=function(){var i,a;try{for(var h=r(this._renderLayers),T=h.next();!T.done;T=h.next())T.value.clearTextureAtlas()}catch(s){i={error:s}}finally{try{T&&!T.done&&(a=h.return)&&a.call(h)}finally{if(i)throw i.error}}},k.prototype._updateDimensions=function(){this._charSizeService.hasValidSize&&(this.dimensions.scaledCharWidth=Math.floor(this._charSizeService.width*window.devicePixelRatio),this.dimensions.scaledCharHeight=Math.ceil(this._charSizeService.height*window.devicePixelRatio),this.dimensions.scaledCellHeight=Math.floor(this.dimensions.scaledCharHeight*this._optionsService.rawOptions.lineHeight),this.dimensions.scaledCharTop=this._optionsService.rawOptions.lineHeight===1?0:Math.round((this.dimensions.scaledCellHeight-this.dimensions.scaledCharHeight)/2),this.dimensions.scaledCellWidth=this.dimensions.scaledCharWidth+Math.round(this._optionsService.rawOptions.letterSpacing),this.dimensions.scaledCharLeft=Math.floor(this._optionsService.rawOptions.letterSpacing/2),this.dimensions.scaledCanvasHeight=this._bufferService.rows*this.dimensions.scaledCellHeight,this.dimensions.scaledCanvasWidth=this._bufferService.cols*this.dimensions.scaledCellWidth,this.dimensions.canvasHeight=Math.round(this.dimensions.scaledCanvasHeight/window.devicePixelRatio),this.dimensions.canvasWidth=Math.round(this.dimensions.scaledCanvasWidth/window.devicePixelRatio),this.dimensions.actualCellHeight=this.dimensions.canvasHeight/this._bufferService.rows,this.dimensions.actualCellWidth=this.dimensions.canvasWidth/this._bufferService.cols)},e([S(4,U.IInstantiationService),S(5,U.IBufferService),S(6,Q.ICharSizeService),S(7,U.IOptionsService)],k)}(W.Disposable);n.Renderer=J},1752:(x,n)=>{function o(t){return 57508<=t&&t<=57558}Object.defineProperty(n,"__esModule",{value:!0}),n.excludeFromContrastRatioDemands=n.isPowerlineGlyph=n.throwIfFalsy=void 0,n.throwIfFalsy=function(t){if(!t)throw new Error("value must not be falsy");return t},n.isPowerlineGlyph=o,n.excludeFromContrastRatioDemands=function(t){return o(t)||function(Z){return 9472<=Z&&Z<=9631}(t)}},4149:function(x,n,o){var t,Z=this&&this.__extends||(t=function(l,N){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(W,Q){W.__proto__=Q}||function(W,Q){for(var U in Q)Object.prototype.hasOwnProperty.call(Q,U)&&(W[U]=Q[U])},t(l,N)},function(l,N){if(typeof N!="function"&&N!==null)throw new TypeError("Class extends value "+String(N)+" is not a constructor or null");function W(){this.constructor=l}t(l,N),l.prototype=N===null?Object.create(N):(W.prototype=N.prototype,new W)}),e=this&&this.__decorate||function(l,N,W,Q){var U,F=arguments.length,B=F<3?N:Q===null?Q=Object.getOwnPropertyDescriptor(N,W):Q;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")B=Reflect.decorate(l,N,W,Q);else for(var R=l.length-1;R>=0;R--)(U=l[R])&&(B=(F<3?U(B):F>3?U(N,W,B):U(N,W))||B);return F>3&&B&&Object.defineProperty(N,W,B),B},S=this&&this.__param||function(l,N){return function(W,Q){N(W,Q,l)}};Object.defineProperty(n,"__esModule",{value:!0}),n.SelectionRenderLayer=void 0;var r=o(1546),E=o(2585),d=function(l){function N(W,Q,U,F,B,R,J){var V=l.call(this,W,"selection",Q,!0,U,F,B,R,J)||this;return V._clearState(),V}return Z(N,l),N.prototype._clearState=function(){this._state={start:void 0,end:void 0,columnSelectMode:void 0,ydisp:void 0}},N.prototype.resize=function(W){l.prototype.resize.call(this,W),this._clearState()},N.prototype.reset=function(){this._state.start&&this._state.end&&(this._clearState(),this._clearAll())},N.prototype.onSelectionChanged=function(W,Q,U){if(l.prototype.onSelectionChanged.call(this,W,Q,U),this._didStateChange(W,Q,U,this._bufferService.buffer.ydisp))if(this._clearAll(),W&&Q){var F=W[1]-this._bufferService.buffer.ydisp,B=Q[1]-this._bufferService.buffer.ydisp,R=Math.max(F,0),J=Math.min(B,this._bufferService.rows-1);if(R>=this._bufferService.rows||J<0)this._state.ydisp=this._bufferService.buffer.ydisp;else{if(this._ctx.fillStyle=this._colors.selectionTransparent.css,U){var V=W[0],k=Q[0]-V,i=J-R+1;this._fillCells(V,R,k,i)}else{V=F===R?W[0]:0;var a=R===B?Q[0]:this._bufferService.cols;this._fillCells(V,R,a-V,1);var h=Math.max(J-R-1,0);if(this._fillCells(0,R+1,this._bufferService.cols,h),R!==J){var T=B===J?Q[0]:this._bufferService.cols;this._fillCells(0,J,T,1)}}this._state.start=[W[0],W[1]],this._state.end=[Q[0],Q[1]],this._state.columnSelectMode=U,this._state.ydisp=this._bufferService.buffer.ydisp}}else this._clearState()},N.prototype._didStateChange=function(W,Q,U,F){return!this._areCoordinatesEqual(W,this._state.start)||!this._areCoordinatesEqual(Q,this._state.end)||U!==this._state.columnSelectMode||F!==this._state.ydisp},N.prototype._areCoordinatesEqual=function(W,Q){return!(!W||!Q)&&W[0]===Q[0]&&W[1]===Q[1]},e([S(4,E.IBufferService),S(5,E.IOptionsService),S(6,E.IDecorationService)],N)}(r.BaseRenderLayer);n.SelectionRenderLayer=d},9596:function(x,n,o){var t,Z=this&&this.__extends||(t=function(R,J){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(V,k){V.__proto__=k}||function(V,k){for(var i in k)Object.prototype.hasOwnProperty.call(k,i)&&(V[i]=k[i])},t(R,J)},function(R,J){if(typeof J!="function"&&J!==null)throw new TypeError("Class extends value "+String(J)+" is not a constructor or null");function V(){this.constructor=R}t(R,J),R.prototype=J===null?Object.create(J):(V.prototype=J.prototype,new V)}),e=this&&this.__decorate||function(R,J,V,k){var i,a=arguments.length,h=a<3?J:k===null?k=Object.getOwnPropertyDescriptor(J,V):k;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")h=Reflect.decorate(R,J,V,k);else for(var T=R.length-1;T>=0;T--)(i=R[T])&&(h=(a<3?i(h):a>3?i(J,V,h):i(J,V))||h);return a>3&&h&&Object.defineProperty(J,V,h),h},S=this&&this.__param||function(R,J){return function(V,k){J(V,k,R)}},r=this&&this.__values||function(R){var J=typeof Symbol=="function"&&Symbol.iterator,V=J&&R[J],k=0;if(V)return V.call(R);if(R&&typeof R.length=="number")return{next:function(){return R&&k>=R.length&&(R=void 0),{value:R&&R[k++],done:!R}}};throw new TypeError(J?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(n,"__esModule",{value:!0}),n.TextRenderLayer=void 0;var E=o(3700),d=o(1546),l=o(3734),N=o(643),W=o(511),Q=o(2585),U=o(4725),F=o(4269),B=function(R){function J(V,k,i,a,h,T,s,C,D){var p=R.call(this,V,"text",k,a,i,h,T,s,D)||this;return p._characterJoinerService=C,p._characterWidth=0,p._characterFont="",p._characterOverlapCache={},p._workCell=new W.CellData,p._state=new E.GridCache,p}return Z(J,R),J.prototype.resize=function(V){R.prototype.resize.call(this,V);var k=this._getFont(!1,!1);this._characterWidth===V.scaledCharWidth&&this._characterFont===k||(this._characterWidth=V.scaledCharWidth,this._characterFont=k,this._characterOverlapCache={}),this._state.clear(),this._state.resize(this._bufferService.cols,this._bufferService.rows)},J.prototype.reset=function(){this._state.clear(),this._clearAll()},J.prototype._forEachCell=function(V,k,i){for(var a=V;a<=k;a++)for(var h=a+this._bufferService.buffer.ydisp,T=this._bufferService.buffer.lines.get(h),s=this._characterJoinerService.getJoinedCharacters(h),C=0;C<this._bufferService.cols;C++){T.loadCell(C,this._workCell);var D=this._workCell,p=!1,c=C;if(D.getWidth()!==0){if(s.length>0&&C===s[0][0]){p=!0;var m=s.shift();D=new F.JoinedCellData(this._workCell,T.translateToString(!0,m[0],m[1]),m[1]-m[0]),c=m[1]-1}!p&&this._isOverlapping(D)&&c<T.length-1&&T.getCodePoint(c+1)===N.NULL_CELL_CODE&&(D.content&=-12582913,D.content|=2<<22),i(D,C,a),C=c}}},J.prototype._drawBackground=function(V,k){var i=this,a=this._ctx,h=this._bufferService.cols,T=0,s=0,C=null;a.save(),this._forEachCell(V,k,function(D,p,c){var m,v,z=null;D.isInverse()?z=D.isFgDefault()?i._colors.foreground.css:D.isFgRGB()?"rgb("+l.AttributeData.toColorRGB(D.getFgColor()).join(",")+")":i._colors.ansi[D.getFgColor()].css:D.isBgRGB()?z="rgb("+l.AttributeData.toColorRGB(D.getBgColor()).join(",")+")":D.isBgPalette()&&(z=i._colors.ansi[D.getBgColor()].css);var f=!1;try{for(var H=r(i._decorationService.getDecorationsAtCell(p,i._bufferService.buffer.ydisp+c)),j=H.next();!j.done;j=H.next()){var w=j.value;w.options.layer!=="top"&&f||(w.backgroundColorRGB&&(z=w.backgroundColorRGB.css),f=w.options.layer==="top")}}catch(M){m={error:M}}finally{try{j&&!j.done&&(v=H.return)&&v.call(H)}finally{if(m)throw m.error}}C===null&&(T=p,s=c),c!==s?(a.fillStyle=C||"",i._fillCells(T,s,h-T,1),T=p,s=c):C!==z&&(a.fillStyle=C||"",i._fillCells(T,s,p-T,1),T=p,s=c),C=z}),C!==null&&(a.fillStyle=C,this._fillCells(T,s,h-T,1)),a.restore()},J.prototype._drawForeground=function(V,k){var i=this;this._forEachCell(V,k,function(a,h,T){if(!a.isInvisible()&&(i._drawChars(a,h,T),a.isUnderline()||a.isStrikethrough())){if(i._ctx.save(),a.isInverse())if(a.isBgDefault())i._ctx.fillStyle=i._colors.background.css;else if(a.isBgRGB())i._ctx.fillStyle="rgb("+l.AttributeData.toColorRGB(a.getBgColor()).join(",")+")";else{var s=a.getBgColor();i._optionsService.rawOptions.drawBoldTextInBrightColors&&a.isBold()&&s<8&&(s+=8),i._ctx.fillStyle=i._colors.ansi[s].css}else if(a.isFgDefault())i._ctx.fillStyle=i._colors.foreground.css;else if(a.isFgRGB())i._ctx.fillStyle="rgb("+l.AttributeData.toColorRGB(a.getFgColor()).join(",")+")";else{var C=a.getFgColor();i._optionsService.rawOptions.drawBoldTextInBrightColors&&a.isBold()&&C<8&&(C+=8),i._ctx.fillStyle=i._colors.ansi[C].css}a.isStrikethrough()&&i._fillMiddleLineAtCells(h,T,a.getWidth()),a.isUnderline()&&i._fillBottomLineAtCells(h,T,a.getWidth()),i._ctx.restore()}})},J.prototype.onGridChanged=function(V,k){this._state.cache.length!==0&&(this._charAtlas&&this._charAtlas.beginFrame(),this._clearCells(0,V,this._bufferService.cols,k-V+1),this._drawBackground(V,k),this._drawForeground(V,k))},J.prototype.onOptionsChanged=function(){this._setTransparency(this._optionsService.rawOptions.allowTransparency)},J.prototype._isOverlapping=function(V){if(V.getWidth()!==1||V.getCode()<256)return!1;var k=V.getChars();if(this._characterOverlapCache.hasOwnProperty(k))return this._characterOverlapCache[k];this._ctx.save(),this._ctx.font=this._characterFont;var i=Math.floor(this._ctx.measureText(k).width)>this._characterWidth;return this._ctx.restore(),this._characterOverlapCache[k]=i,i},e([S(5,Q.IBufferService),S(6,Q.IOptionsService),S(7,U.ICharacterJoinerService),S(8,Q.IDecorationService)],J)}(d.BaseRenderLayer);n.TextRenderLayer=B},9616:(x,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.BaseCharAtlas=void 0;var o=function(){function t(){this._didWarmUp=!1}return t.prototype.dispose=function(){},t.prototype.warmUp=function(){this._didWarmUp||(this._doWarmUp(),this._didWarmUp=!0)},t.prototype._doWarmUp=function(){},t.prototype.clear=function(){},t.prototype.beginFrame=function(){},t}();n.BaseCharAtlas=o},1420:(x,n,o)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.removeTerminalFromCache=n.acquireCharAtlas=void 0;var t=o(2040),Z=o(1906),e=[];n.acquireCharAtlas=function(S,r,E,d,l){for(var N=(0,t.generateConfig)(d,l,S,E),W=0;W<e.length;W++){var Q=(U=e[W]).ownedBy.indexOf(r);if(Q>=0){if((0,t.configEquals)(U.config,N))return U.atlas;U.ownedBy.length===1?(U.atlas.dispose(),e.splice(W,1)):U.ownedBy.splice(Q,1);break}}for(W=0;W<e.length;W++){var U=e[W];if((0,t.configEquals)(U.config,N))return U.ownedBy.push(r),U.atlas}var F={atlas:new Z.DynamicCharAtlas(document,N),config:N,ownedBy:[r]};return e.push(F),F.atlas},n.removeTerminalFromCache=function(S){for(var r=0;r<e.length;r++){var E=e[r].ownedBy.indexOf(S);if(E!==-1){e[r].ownedBy.length===1?(e[r].atlas.dispose(),e.splice(r,1)):e[r].ownedBy.splice(E,1);break}}}},2040:(x,n,o)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.is256Color=n.configEquals=n.generateConfig=void 0;var t=o(643);n.generateConfig=function(Z,e,S,r){var E={foreground:r.foreground,background:r.background,cursor:void 0,cursorAccent:void 0,selection:void 0,ansi:r.ansi.slice()};return{devicePixelRatio:window.devicePixelRatio,scaledCharWidth:Z,scaledCharHeight:e,fontFamily:S.fontFamily,fontSize:S.fontSize,fontWeight:S.fontWeight,fontWeightBold:S.fontWeightBold,allowTransparency:S.allowTransparency,colors:E}},n.configEquals=function(Z,e){for(var S=0;S<Z.colors.ansi.length;S++)if(Z.colors.ansi[S].rgba!==e.colors.ansi[S].rgba)return!1;return Z.devicePixelRatio===e.devicePixelRatio&&Z.fontFamily===e.fontFamily&&Z.fontSize===e.fontSize&&Z.fontWeight===e.fontWeight&&Z.fontWeightBold===e.fontWeightBold&&Z.allowTransparency===e.allowTransparency&&Z.scaledCharWidth===e.scaledCharWidth&&Z.scaledCharHeight===e.scaledCharHeight&&Z.colors.foreground===e.colors.foreground&&Z.colors.background===e.colors.background},n.is256Color=function(Z){return Z<t.DEFAULT_COLOR}},8803:(x,n,o)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.CHAR_ATLAS_CELL_SPACING=n.TEXT_BASELINE=n.DIM_OPACITY=n.INVERTED_DEFAULT_COLOR=void 0;var t=o(6114);n.INVERTED_DEFAULT_COLOR=257,n.DIM_OPACITY=.5,n.TEXT_BASELINE=t.isFirefox||t.isLegacyEdge?"bottom":"ideographic",n.CHAR_ATLAS_CELL_SPACING=1},1906:function(x,n,o){var t,Z=this&&this.__extends||(t=function(V,k){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(i,a){i.__proto__=a}||function(i,a){for(var h in a)Object.prototype.hasOwnProperty.call(a,h)&&(i[h]=a[h])},t(V,k)},function(V,k){if(typeof k!="function"&&k!==null)throw new TypeError("Class extends value "+String(k)+" is not a constructor or null");function i(){this.constructor=V}t(V,k),V.prototype=k===null?Object.create(k):(i.prototype=k.prototype,new i)});Object.defineProperty(n,"__esModule",{value:!0}),n.NoneCharAtlas=n.DynamicCharAtlas=n.getGlyphCacheKey=void 0;var e=o(8803),S=o(9616),r=o(5680),E=o(7001),d=o(6114),l=o(1752),N=o(8055),W=1024,Q=1024,U={css:"rgba(0, 0, 0, 0)",rgba:0};function F(V){return V.code<<21|V.bg<<12|V.fg<<3|(V.bold?0:4)+(V.dim?0:2)+(V.italic?0:1)}n.getGlyphCacheKey=F;var B=function(V){function k(i,a){var h=V.call(this)||this;h._config=a,h._drawToCacheCount=0,h._glyphsWaitingOnBitmap=[],h._bitmapCommitTimeout=null,h._bitmap=null,h._cacheCanvas=i.createElement("canvas"),h._cacheCanvas.width=W,h._cacheCanvas.height=Q,h._cacheCtx=(0,l.throwIfFalsy)(h._cacheCanvas.getContext("2d",{alpha:!0}));var T=i.createElement("canvas");T.width=h._config.scaledCharWidth,T.height=h._config.scaledCharHeight,h._tmpCtx=(0,l.throwIfFalsy)(T.getContext("2d",{alpha:h._config.allowTransparency})),h._width=Math.floor(W/h._config.scaledCharWidth),h._height=Math.floor(Q/h._config.scaledCharHeight);var s=h._width*h._height;return h._cacheMap=new E.LRUMap(s),h._cacheMap.prealloc(s),h}return Z(k,V),k.prototype.dispose=function(){this._bitmapCommitTimeout!==null&&(window.clearTimeout(this._bitmapCommitTimeout),this._bitmapCommitTimeout=null)},k.prototype.beginFrame=function(){this._drawToCacheCount=0},k.prototype.clear=function(){if(this._cacheMap.size>0){var i=this._width*this._height;this._cacheMap=new E.LRUMap(i),this._cacheMap.prealloc(i)}this._cacheCtx.clearRect(0,0,W,Q),this._tmpCtx.clearRect(0,0,this._config.scaledCharWidth,this._config.scaledCharHeight)},k.prototype.draw=function(i,a,h,T){if(a.code===32)return!0;if(!this._canCache(a))return!1;var s=F(a),C=this._cacheMap.get(s);if(C!=null)return this._drawFromCache(i,C,h,T),!0;if(this._drawToCacheCount<100){var D;D=this._cacheMap.size<this._cacheMap.capacity?this._cacheMap.size:this._cacheMap.peek().index;var p=this._drawToCache(a,D);return this._cacheMap.set(s,p),this._drawFromCache(i,p,h,T),!0}return!1},k.prototype._canCache=function(i){return i.code<256},k.prototype._toCoordinateX=function(i){return i%this._width*this._config.scaledCharWidth},k.prototype._toCoordinateY=function(i){return Math.floor(i/this._width)*this._config.scaledCharHeight},k.prototype._drawFromCache=function(i,a,h,T){if(!a.isEmpty){var s=this._toCoordinateX(a.index),C=this._toCoordinateY(a.index);i.drawImage(a.inBitmap?this._bitmap:this._cacheCanvas,s,C,this._config.scaledCharWidth,this._config.scaledCharHeight,h,T,this._config.scaledCharWidth,this._config.scaledCharHeight)}},k.prototype._getColorFromAnsiIndex=function(i){return i<this._config.colors.ansi.length?this._config.colors.ansi[i]:r.DEFAULT_ANSI_COLORS[i]},k.prototype._getBackgroundColor=function(i){return this._config.allowTransparency?U:i.bg===e.INVERTED_DEFAULT_COLOR?this._config.colors.foreground:i.bg<256?this._getColorFromAnsiIndex(i.bg):this._config.colors.background},k.prototype._getForegroundColor=function(i){return i.fg===e.INVERTED_DEFAULT_COLOR?N.color.opaque(this._config.colors.background):i.fg<256?this._getColorFromAnsiIndex(i.fg):this._config.colors.foreground},k.prototype._drawToCache=function(i,a){this._drawToCacheCount++,this._tmpCtx.save();var h=this._getBackgroundColor(i);this._tmpCtx.globalCompositeOperation="copy",this._tmpCtx.fillStyle=h.css,this._tmpCtx.fillRect(0,0,this._config.scaledCharWidth,this._config.scaledCharHeight),this._tmpCtx.globalCompositeOperation="source-over";var T=i.bold?this._config.fontWeightBold:this._config.fontWeight,s=i.italic?"italic":"";this._tmpCtx.font=s+" "+T+" "+this._config.fontSize*this._config.devicePixelRatio+"px "+this._config.fontFamily,this._tmpCtx.textBaseline=e.TEXT_BASELINE,this._tmpCtx.fillStyle=this._getForegroundColor(i).css,i.dim&&(this._tmpCtx.globalAlpha=e.DIM_OPACITY),this._tmpCtx.fillText(i.chars,0,this._config.scaledCharHeight);var C=this._tmpCtx.getImageData(0,0,this._config.scaledCharWidth,this._config.scaledCharHeight),D=!1;if(this._config.allowTransparency||(D=J(C,h)),D&&i.chars==="_"&&!this._config.allowTransparency)for(var p=1;p<=5&&(this._tmpCtx.fillText(i.chars,0,this._config.scaledCharHeight-p),D=J(C=this._tmpCtx.getImageData(0,0,this._config.scaledCharWidth,this._config.scaledCharHeight),h));p++);this._tmpCtx.restore();var c=this._toCoordinateX(a),m=this._toCoordinateY(a);this._cacheCtx.putImageData(C,c,m);var v={index:a,isEmpty:D,inBitmap:!1};return this._addGlyphToBitmap(v),v},k.prototype._addGlyphToBitmap=function(i){var a=this;!("createImageBitmap"in window)||d.isFirefox||d.isSafari||(this._glyphsWaitingOnBitmap.push(i),this._bitmapCommitTimeout===null&&(this._bitmapCommitTimeout=window.setTimeout(function(){return a._generateBitmap()},100)))},k.prototype._generateBitmap=function(){var i=this,a=this._glyphsWaitingOnBitmap;this._glyphsWaitingOnBitmap=[],window.createImageBitmap(this._cacheCanvas).then(function(h){i._bitmap=h;for(var T=0;T<a.length;T++)a[T].inBitmap=!0}),this._bitmapCommitTimeout=null},k}(S.BaseCharAtlas);n.DynamicCharAtlas=B;var R=function(V){function k(i,a){return V.call(this)||this}return Z(k,V),k.prototype.draw=function(i,a,h,T){return!1},k}(S.BaseCharAtlas);function J(V,k){for(var i=!0,a=k.rgba>>>24,h=k.rgba>>>16&255,T=k.rgba>>>8&255,s=0;s<V.data.length;s+=4)V.data[s]===a&&V.data[s+1]===h&&V.data[s+2]===T?V.data[s+3]=0:i=!1;return i}n.NoneCharAtlas=R},7001:(x,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.LRUMap=void 0;var o=function(){function t(Z){this.capacity=Z,this._map={},this._head=null,this._tail=null,this._nodePool=[],this.size=0}return t.prototype._unlinkNode=function(Z){var e=Z.prev,S=Z.next;Z===this._head&&(this._head=S),Z===this._tail&&(this._tail=e),e!==null&&(e.next=S),S!==null&&(S.prev=e)},t.prototype._appendNode=function(Z){var e=this._tail;e!==null&&(e.next=Z),Z.prev=e,Z.next=null,this._tail=Z,this._head===null&&(this._head=Z)},t.prototype.prealloc=function(Z){for(var e=this._nodePool,S=0;S<Z;S++)e.push({prev:null,next:null,key:null,value:null})},t.prototype.get=function(Z){var e=this._map[Z];return e!==void 0?(this._unlinkNode(e),this._appendNode(e),e.value):null},t.prototype.peekValue=function(Z){var e=this._map[Z];return e!==void 0?e.value:null},t.prototype.peek=function(){var Z=this._head;return Z===null?null:Z.value},t.prototype.set=function(Z,e){var S=this._map[Z];if(S!==void 0)S=this._map[Z],this._unlinkNode(S),S.value=e;else if(this.size>=this.capacity)S=this._head,this._unlinkNode(S),delete this._map[S.key],S.key=Z,S.value=e,this._map[Z]=S;else{var r=this._nodePool;r.length>0?((S=r.pop()).key=Z,S.value=e):S={prev:null,next:null,key:Z,value:e},this._map[Z]=S,this.size++}this._appendNode(S)},t}();n.LRUMap=o},1296:function(x,n,o){var t,Z=this&&this.__extends||(t=function(a,h){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(T,s){T.__proto__=s}||function(T,s){for(var C in s)Object.prototype.hasOwnProperty.call(s,C)&&(T[C]=s[C])},t(a,h)},function(a,h){if(typeof h!="function"&&h!==null)throw new TypeError("Class extends value "+String(h)+" is not a constructor or null");function T(){this.constructor=a}t(a,h),a.prototype=h===null?Object.create(h):(T.prototype=h.prototype,new T)}),e=this&&this.__decorate||function(a,h,T,s){var C,D=arguments.length,p=D<3?h:s===null?s=Object.getOwnPropertyDescriptor(h,T):s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")p=Reflect.decorate(a,h,T,s);else for(var c=a.length-1;c>=0;c--)(C=a[c])&&(p=(D<3?C(p):D>3?C(h,T,p):C(h,T))||p);return D>3&&p&&Object.defineProperty(h,T,p),p},S=this&&this.__param||function(a,h){return function(T,s){h(T,s,a)}},r=this&&this.__values||function(a){var h=typeof Symbol=="function"&&Symbol.iterator,T=h&&a[h],s=0;if(T)return T.call(a);if(a&&typeof a.length=="number")return{next:function(){return a&&s>=a.length&&(a=void 0),{value:a&&a[s++],done:!a}}};throw new TypeError(h?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(n,"__esModule",{value:!0}),n.DomRenderer=void 0;var E=o(3787),d=o(8803),l=o(844),N=o(4725),W=o(2585),Q=o(8460),U=o(8055),F=o(9631),B="xterm-dom-renderer-owner-",R="xterm-fg-",J="xterm-bg-",V="xterm-focus",k=1,i=function(a){function h(T,s,C,D,p,c,m,v,z,f){var H=a.call(this)||this;return H._colors=T,H._element=s,H._screenElement=C,H._viewportElement=D,H._linkifier=p,H._linkifier2=c,H._charSizeService=v,H._optionsService=z,H._bufferService=f,H._terminalClass=k++,H._rowElements=[],H._rowContainer=document.createElement("div"),H._rowContainer.classList.add("xterm-rows"),H._rowContainer.style.lineHeight="normal",H._rowContainer.setAttribute("aria-hidden","true"),H._refreshRowElements(H._bufferService.cols,H._bufferService.rows),H._selectionContainer=document.createElement("div"),H._selectionContainer.classList.add("xterm-selection"),H._selectionContainer.setAttribute("aria-hidden","true"),H.dimensions={scaledCharWidth:0,scaledCharHeight:0,scaledCellWidth:0,scaledCellHeight:0,scaledCharLeft:0,scaledCharTop:0,scaledCanvasWidth:0,scaledCanvasHeight:0,canvasWidth:0,canvasHeight:0,actualCellWidth:0,actualCellHeight:0},H._updateDimensions(),H._injectCss(),H._rowFactory=m.createInstance(E.DomRendererRowFactory,document,H._colors),H._element.classList.add(B+H._terminalClass),H._screenElement.appendChild(H._rowContainer),H._screenElement.appendChild(H._selectionContainer),H.register(H._linkifier.onShowLinkUnderline(function(j){return H._onLinkHover(j)})),H.register(H._linkifier.onHideLinkUnderline(function(j){return H._onLinkLeave(j)})),H.register(H._linkifier2.onShowLinkUnderline(function(j){return H._onLinkHover(j)})),H.register(H._linkifier2.onHideLinkUnderline(function(j){return H._onLinkLeave(j)})),H}return Z(h,a),Object.defineProperty(h.prototype,"onRequestRedraw",{get:function(){return new Q.EventEmitter().event},enumerable:!1,configurable:!0}),h.prototype.dispose=function(){this._element.classList.remove(B+this._terminalClass),(0,F.removeElementFromParent)(this._rowContainer,this._selectionContainer,this._themeStyleElement,this._dimensionsStyleElement),a.prototype.dispose.call(this)},h.prototype._updateDimensions=function(){var T,s;this.dimensions.scaledCharWidth=this._charSizeService.width*window.devicePixelRatio,this.dimensions.scaledCharHeight=Math.ceil(this._charSizeService.height*window.devicePixelRatio),this.dimensions.scaledCellWidth=this.dimensions.scaledCharWidth+Math.round(this._optionsService.rawOptions.letterSpacing),this.dimensions.scaledCellHeight=Math.floor(this.dimensions.scaledCharHeight*this._optionsService.rawOptions.lineHeight),this.dimensions.scaledCharLeft=0,this.dimensions.scaledCharTop=0,this.dimensions.scaledCanvasWidth=this.dimensions.scaledCellWidth*this._bufferService.cols,this.dimensions.scaledCanvasHeight=this.dimensions.scaledCellHeight*this._bufferService.rows,this.dimensions.canvasWidth=Math.round(this.dimensions.scaledCanvasWidth/window.devicePixelRatio),this.dimensions.canvasHeight=Math.round(this.dimensions.scaledCanvasHeight/window.devicePixelRatio),this.dimensions.actualCellWidth=this.dimensions.canvasWidth/this._bufferService.cols,this.dimensions.actualCellHeight=this.dimensions.canvasHeight/this._bufferService.rows;try{for(var C=r(this._rowElements),D=C.next();!D.done;D=C.next()){var p=D.value;p.style.width=this.dimensions.canvasWidth+"px",p.style.height=this.dimensions.actualCellHeight+"px",p.style.lineHeight=this.dimensions.actualCellHeight+"px",p.style.overflow="hidden"}}catch(m){T={error:m}}finally{try{D&&!D.done&&(s=C.return)&&s.call(C)}finally{if(T)throw T.error}}this._dimensionsStyleElement||(this._dimensionsStyleElement=document.createElement("style"),this._screenElement.appendChild(this._dimensionsStyleElement));var c=this._terminalSelector+" .xterm-rows span { display: inline-block; height: 100%; vertical-align: top; width: "+this.dimensions.actualCellWidth+"px}";this._dimensionsStyleElement.textContent=c,this._selectionContainer.style.height=this._viewportElement.style.height,this._screenElement.style.width=this.dimensions.canvasWidth+"px",this._screenElement.style.height=this.dimensions.canvasHeight+"px"},h.prototype.setColors=function(T){this._colors=T,this._injectCss()},h.prototype._injectCss=function(){var T=this;this._themeStyleElement||(this._themeStyleElement=document.createElement("style"),this._screenElement.appendChild(this._themeStyleElement));var s=this._terminalSelector+" .xterm-rows { color: "+this._colors.foreground.css+"; font-family: "+this._optionsService.rawOptions.fontFamily+"; font-size: "+this._optionsService.rawOptions.fontSize+"px;}";s+=this._terminalSelector+" span:not(."+E.BOLD_CLASS+") { font-weight: "+this._optionsService.rawOptions.fontWeight+";}"+this._terminalSelector+" span."+E.BOLD_CLASS+" { font-weight: "+this._optionsService.rawOptions.fontWeightBold+";}"+this._terminalSelector+" span."+E.ITALIC_CLASS+" { font-style: italic;}",s+="@keyframes blink_box_shadow_"+this._terminalClass+" { 50% {  box-shadow: none; }}",s+="@keyframes blink_block_"+this._terminalClass+" { 0% {  background-color: "+this._colors.cursor.css+";  color: "+this._colors.cursorAccent.css+"; } 50% {  background-color: "+this._colors.cursorAccent.css+";  color: "+this._colors.cursor.css+"; }}",s+=this._terminalSelector+" .xterm-rows:not(.xterm-focus) ."+E.CURSOR_CLASS+"."+E.CURSOR_STYLE_BLOCK_CLASS+" { outline: 1px solid "+this._colors.cursor.css+"; outline-offset: -1px;}"+this._terminalSelector+" .xterm-rows.xterm-focus ."+E.CURSOR_CLASS+"."+E.CURSOR_BLINK_CLASS+":not(."+E.CURSOR_STYLE_BLOCK_CLASS+") { animation: blink_box_shadow_"+this._terminalClass+" 1s step-end infinite;}"+this._terminalSelector+" .xterm-rows.xterm-focus ."+E.CURSOR_CLASS+"."+E.CURSOR_BLINK_CLASS+"."+E.CURSOR_STYLE_BLOCK_CLASS+" { animation: blink_block_"+this._terminalClass+" 1s step-end infinite;}"+this._terminalSelector+" .xterm-rows.xterm-focus ."+E.CURSOR_CLASS+"."+E.CURSOR_STYLE_BLOCK_CLASS+" { background-color: "+this._colors.cursor.css+"; color: "+this._colors.cursorAccent.css+";}"+this._terminalSelector+" .xterm-rows ."+E.CURSOR_CLASS+"."+E.CURSOR_STYLE_BAR_CLASS+" { box-shadow: "+this._optionsService.rawOptions.cursorWidth+"px 0 0 "+this._colors.cursor.css+" inset;}"+this._terminalSelector+" .xterm-rows ."+E.CURSOR_CLASS+"."+E.CURSOR_STYLE_UNDERLINE_CLASS+" { box-shadow: 0 -1px 0 "+this._colors.cursor.css+" inset;}",s+=this._terminalSelector+" .xterm-selection { position: absolute; top: 0; left: 0; z-index: 1; pointer-events: none;}"+this._terminalSelector+" .xterm-selection div { position: absolute; background-color: "+this._colors.selectionOpaque.css+";}",this._colors.ansi.forEach(function(C,D){s+=T._terminalSelector+" ."+R+D+" { color: "+C.css+"; }"+T._terminalSelector+" ."+J+D+" { background-color: "+C.css+"; }"}),s+=this._terminalSelector+" ."+R+d.INVERTED_DEFAULT_COLOR+" { color: "+U.color.opaque(this._colors.background).css+"; }"+this._terminalSelector+" ."+J+d.INVERTED_DEFAULT_COLOR+" { background-color: "+this._colors.foreground.css+"; }",this._themeStyleElement.textContent=s},h.prototype.onDevicePixelRatioChange=function(){this._updateDimensions()},h.prototype._refreshRowElements=function(T,s){for(var C=this._rowElements.length;C<=s;C++){var D=document.createElement("div");this._rowContainer.appendChild(D),this._rowElements.push(D)}for(;this._rowElements.length>s;)this._rowContainer.removeChild(this._rowElements.pop())},h.prototype.onResize=function(T,s){this._refreshRowElements(T,s),this._updateDimensions()},h.prototype.onCharSizeChanged=function(){this._updateDimensions()},h.prototype.onBlur=function(){this._rowContainer.classList.remove(V)},h.prototype.onFocus=function(){this._rowContainer.classList.add(V)},h.prototype.onSelectionChanged=function(T,s,C){for(;this._selectionContainer.children.length;)this._selectionContainer.removeChild(this._selectionContainer.children[0]);if(this._rowFactory.onSelectionChanged(T,s,C),this.renderRows(0,this._bufferService.rows-1),T&&s){var D=T[1]-this._bufferService.buffer.ydisp,p=s[1]-this._bufferService.buffer.ydisp,c=Math.max(D,0),m=Math.min(p,this._bufferService.rows-1);if(!(c>=this._bufferService.rows||m<0)){var v=document.createDocumentFragment();if(C){var z=T[0]>s[0];v.appendChild(this._createSelectionElement(c,z?s[0]:T[0],z?T[0]:s[0],m-c+1))}else{var f=D===c?T[0]:0,H=c===p?s[0]:this._bufferService.cols;v.appendChild(this._createSelectionElement(c,f,H));var j=m-c-1;if(v.appendChild(this._createSelectionElement(c+1,0,this._bufferService.cols,j)),c!==m){var w=p===m?s[0]:this._bufferService.cols;v.appendChild(this._createSelectionElement(m,0,w))}}this._selectionContainer.appendChild(v)}}},h.prototype._createSelectionElement=function(T,s,C,D){D===void 0&&(D=1);var p=document.createElement("div");return p.style.height=D*this.dimensions.actualCellHeight+"px",p.style.top=T*this.dimensions.actualCellHeight+"px",p.style.left=s*this.dimensions.actualCellWidth+"px",p.style.width=this.dimensions.actualCellWidth*(C-s)+"px",p},h.prototype.onCursorMove=function(){},h.prototype.onOptionsChanged=function(){this._updateDimensions(),this._injectCss()},h.prototype.clear=function(){var T,s;try{for(var C=r(this._rowElements),D=C.next();!D.done;D=C.next())D.value.innerText=""}catch(p){T={error:p}}finally{try{D&&!D.done&&(s=C.return)&&s.call(C)}finally{if(T)throw T.error}}},h.prototype.renderRows=function(T,s){for(var C=this._bufferService.buffer.ybase+this._bufferService.buffer.y,D=Math.min(this._bufferService.buffer.x,this._bufferService.cols-1),p=this._optionsService.rawOptions.cursorBlink,c=T;c<=s;c++){var m=this._rowElements[c];m.innerText="";var v=c+this._bufferService.buffer.ydisp,z=this._bufferService.buffer.lines.get(v),f=this._optionsService.rawOptions.cursorStyle;m.appendChild(this._rowFactory.createRow(z,v,v===C,f,D,p,this.dimensions.actualCellWidth,this._bufferService.cols))}},Object.defineProperty(h.prototype,"_terminalSelector",{get:function(){return"."+B+this._terminalClass},enumerable:!1,configurable:!0}),h.prototype._onLinkHover=function(T){this._setCellUnderline(T.x1,T.x2,T.y1,T.y2,T.cols,!0)},h.prototype._onLinkLeave=function(T){this._setCellUnderline(T.x1,T.x2,T.y1,T.y2,T.cols,!1)},h.prototype._setCellUnderline=function(T,s,C,D,p,c){for(;T!==s||C!==D;){var m=this._rowElements[C];if(!m)return;var v=m.children[T];v&&(v.style.textDecoration=c?"underline":"none"),++T>=p&&(T=0,C++)}},e([S(6,W.IInstantiationService),S(7,N.ICharSizeService),S(8,W.IOptionsService),S(9,W.IBufferService)],h)}(l.Disposable);n.DomRenderer=i},3787:function(x,n,o){var t=this&&this.__decorate||function(B,R,J,V){var k,i=arguments.length,a=i<3?R:V===null?V=Object.getOwnPropertyDescriptor(R,J):V;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(B,R,J,V);else for(var h=B.length-1;h>=0;h--)(k=B[h])&&(a=(i<3?k(a):i>3?k(R,J,a):k(R,J))||a);return i>3&&a&&Object.defineProperty(R,J,a),a},Z=this&&this.__param||function(B,R){return function(J,V){R(J,V,B)}},e=this&&this.__values||function(B){var R=typeof Symbol=="function"&&Symbol.iterator,J=R&&B[R],V=0;if(J)return J.call(B);if(B&&typeof B.length=="number")return{next:function(){return B&&V>=B.length&&(B=void 0),{value:B&&B[V++],done:!B}}};throw new TypeError(R?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(n,"__esModule",{value:!0}),n.DomRendererRowFactory=n.CURSOR_STYLE_UNDERLINE_CLASS=n.CURSOR_STYLE_BAR_CLASS=n.CURSOR_STYLE_BLOCK_CLASS=n.CURSOR_BLINK_CLASS=n.CURSOR_CLASS=n.STRIKETHROUGH_CLASS=n.UNDERLINE_CLASS=n.ITALIC_CLASS=n.DIM_CLASS=n.BOLD_CLASS=void 0;var S=o(8803),r=o(643),E=o(511),d=o(2585),l=o(8055),N=o(4725),W=o(4269),Q=o(1752);n.BOLD_CLASS="xterm-bold",n.DIM_CLASS="xterm-dim",n.ITALIC_CLASS="xterm-italic",n.UNDERLINE_CLASS="xterm-underline",n.STRIKETHROUGH_CLASS="xterm-strikethrough",n.CURSOR_CLASS="xterm-cursor",n.CURSOR_BLINK_CLASS="xterm-cursor-blink",n.CURSOR_STYLE_BLOCK_CLASS="xterm-cursor-block",n.CURSOR_STYLE_BAR_CLASS="xterm-cursor-bar",n.CURSOR_STYLE_UNDERLINE_CLASS="xterm-cursor-underline";var U=function(){function B(R,J,V,k,i,a){this._document=R,this._colors=J,this._characterJoinerService=V,this._optionsService=k,this._coreService=i,this._decorationService=a,this._workCell=new E.CellData,this._columnSelectMode=!1}return B.prototype.setColors=function(R){this._colors=R},B.prototype.onSelectionChanged=function(R,J,V){this._selectionStart=R,this._selectionEnd=J,this._columnSelectMode=V},B.prototype.createRow=function(R,J,V,k,i,a,h,T){for(var s,C,D=this._document.createDocumentFragment(),p=this._characterJoinerService.getJoinedCharacters(J),c=0,m=Math.min(R.length,T)-1;m>=0;m--)if(R.loadCell(m,this._workCell).getCode()!==r.NULL_CELL_CODE||V&&m===i){c=m+1;break}for(m=0;m<c;m++){R.loadCell(m,this._workCell);var v=this._workCell.getWidth();if(v!==0){var z=!1,f=m,H=this._workCell;if(p.length>0&&m===p[0][0]){z=!0;var j=p.shift();H=new W.JoinedCellData(this._workCell,R.translateToString(!0,j[0],j[1]),j[1]-j[0]),f=j[1]-1,v=H.getWidth()}var w=this._document.createElement("span");if(v>1&&(w.style.width=h*v+"px"),z&&(w.style.display="inline",i>=m&&i<=f&&(i=m)),!this._coreService.isCursorHidden&&V&&m===i)switch(w.classList.add(n.CURSOR_CLASS),a&&w.classList.add(n.CURSOR_BLINK_CLASS),k){case"bar":w.classList.add(n.CURSOR_STYLE_BAR_CLASS);break;case"underline":w.classList.add(n.CURSOR_STYLE_UNDERLINE_CLASS);break;default:w.classList.add(n.CURSOR_STYLE_BLOCK_CLASS)}H.isBold()&&w.classList.add(n.BOLD_CLASS),H.isItalic()&&w.classList.add(n.ITALIC_CLASS),H.isDim()&&w.classList.add(n.DIM_CLASS),H.isUnderline()&&w.classList.add(n.UNDERLINE_CLASS),H.isInvisible()?w.textContent=r.WHITESPACE_CELL_CHAR:w.textContent=H.getChars()||r.WHITESPACE_CELL_CHAR,H.isStrikethrough()&&w.classList.add(n.STRIKETHROUGH_CLASS);var M=H.getFgColor(),P=H.getFgColorMode(),g=H.getBgColor(),UU=H.getBgColorMode(),X=!!H.isInverse();if(X){var $=M;M=g,g=$;var K=P;P=UU,UU=K}var O=void 0,b=void 0,Y=!1;try{for(var y=(s=void 0,e(this._decorationService.getDecorationsAtCell(m,J))),L=y.next();!L.done;L=y.next()){var _=L.value;_.options.layer!=="top"&&Y||(_.backgroundColorRGB&&(UU=50331648,g=_.backgroundColorRGB.rgba>>8&16777215,O=_.backgroundColorRGB),_.foregroundColorRGB&&(P=50331648,M=_.foregroundColorRGB.rgba>>8&16777215,b=_.foregroundColorRGB),Y=_.options.layer==="top")}}catch(lU){s={error:lU}}finally{try{L&&!L.done&&(C=y.return)&&C.call(y)}finally{if(s)throw s.error}}var q=this._isCellInSelection(m,J);Y||this._colors.selectionForeground&&q&&(P=50331648,M=this._colors.selectionForeground.rgba>>8&16777215,b=this._colors.selectionForeground),q&&(O=this._colors.selectionOpaque,Y=!0),Y&&w.classList.add("xterm-decoration-top");var QU=void 0;switch(UU){case 16777216:case 33554432:QU=this._colors.ansi[g],w.classList.add("xterm-bg-"+g);break;case 50331648:QU=l.rgba.toColor(g>>16,g>>8&255,255&g),this._addStyle(w,"background-color:#"+F((g>>>0).toString(16),"0",6));break;default:X?(QU=this._colors.foreground,w.classList.add("xterm-bg-"+S.INVERTED_DEFAULT_COLOR)):QU=this._colors.background}switch(P){case 16777216:case 33554432:H.isBold()&&M<8&&this._optionsService.rawOptions.drawBoldTextInBrightColors&&(M+=8),this._applyMinimumContrast(w,QU,this._colors.ansi[M],H,O,void 0)||w.classList.add("xterm-fg-"+M);break;case 50331648:var VU=l.rgba.toColor(M>>16&255,M>>8&255,255&M);this._applyMinimumContrast(w,QU,VU,H,O,b)||this._addStyle(w,"color:#"+F(M.toString(16),"0",6));break;default:this._applyMinimumContrast(w,QU,this._colors.foreground,H,O,void 0)||X&&w.classList.add("xterm-fg-"+S.INVERTED_DEFAULT_COLOR)}D.appendChild(w),m=f}}return D},B.prototype._applyMinimumContrast=function(R,J,V,k,i,a){if(this._optionsService.rawOptions.minimumContrastRatio===1||(0,Q.excludeFromContrastRatioDemands)(k.getCode()))return!1;var h=void 0;return i||a||(h=this._colors.contrastCache.getColor(J.rgba,V.rgba)),h===void 0&&(h=l.color.ensureContrastRatio(i||J,a||V,this._optionsService.rawOptions.minimumContrastRatio),this._colors.contrastCache.setColor((i||J).rgba,(a||V).rgba,h!=null?h:null)),!!h&&(this._addStyle(R,"color:"+h.css),!0)},B.prototype._addStyle=function(R,J){R.setAttribute("style",""+(R.getAttribute("style")||"")+J+";")},B.prototype._isCellInSelection=function(R,J){var V=this._selectionStart,k=this._selectionEnd;return!(!V||!k)&&(this._columnSelectMode?V[0]<=k[0]?R>=V[0]&&J>=V[1]&&R<k[0]&&J<=k[1]:R<V[0]&&J>=V[1]&&R>=k[0]&&J<=k[1]:J>V[1]&&J<k[1]||V[1]===k[1]&&J===V[1]&&R>=V[0]&&R<k[0]||V[1]<k[1]&&J===k[1]&&R<k[0]||V[1]<k[1]&&J===V[1]&&R>=V[0])},t([Z(2,N.ICharacterJoinerService),Z(3,d.IOptionsService),Z(4,d.ICoreService),Z(5,d.IDecorationService)],B)}();function F(B,R,J){for(;B.length<J;)B=R+B;return B}n.DomRendererRowFactory=U},456:(x,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.SelectionModel=void 0;var o=function(){function t(Z){this._bufferService=Z,this.isSelectAllActive=!1,this.selectionStartLength=0}return t.prototype.clearSelection=function(){this.selectionStart=void 0,this.selectionEnd=void 0,this.isSelectAllActive=!1,this.selectionStartLength=0},Object.defineProperty(t.prototype,"finalSelectionStart",{get:function(){return this.isSelectAllActive?[0,0]:this.selectionEnd&&this.selectionStart&&this.areSelectionValuesReversed()?this.selectionEnd:this.selectionStart},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"finalSelectionEnd",{get:function(){return this.isSelectAllActive?[this._bufferService.cols,this._bufferService.buffer.ybase+this._bufferService.rows-1]:this.selectionStart?!this.selectionEnd||this.areSelectionValuesReversed()?(Z=this.selectionStart[0]+this.selectionStartLength)>this._bufferService.cols?Z%this._bufferService.cols==0?[this._bufferService.cols,this.selectionStart[1]+Math.floor(Z/this._bufferService.cols)-1]:[Z%this._bufferService.cols,this.selectionStart[1]+Math.floor(Z/this._bufferService.cols)]:[Z,this.selectionStart[1]]:this.selectionStartLength&&this.selectionEnd[1]===this.selectionStart[1]?(Z=this.selectionStart[0]+this.selectionStartLength)>this._bufferService.cols?[Z%this._bufferService.cols,this.selectionStart[1]+Math.floor(Z/this._bufferService.cols)]:[Math.max(Z,this.selectionEnd[0]),this.selectionEnd[1]]:this.selectionEnd:void 0;var Z},enumerable:!1,configurable:!0}),t.prototype.areSelectionValuesReversed=function(){var Z=this.selectionStart,e=this.selectionEnd;return!(!Z||!e)&&(Z[1]>e[1]||Z[1]===e[1]&&Z[0]>e[0])},t.prototype.onTrim=function(Z){return this.selectionStart&&(this.selectionStart[1]-=Z),this.selectionEnd&&(this.selectionEnd[1]-=Z),this.selectionEnd&&this.selectionEnd[1]<0?(this.clearSelection(),!0):(this.selectionStart&&this.selectionStart[1]<0&&(this.selectionStart[1]=0),!1)},t}();n.SelectionModel=o},428:function(x,n,o){var t=this&&this.__decorate||function(d,l,N,W){var Q,U=arguments.length,F=U<3?l:W===null?W=Object.getOwnPropertyDescriptor(l,N):W;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")F=Reflect.decorate(d,l,N,W);else for(var B=d.length-1;B>=0;B--)(Q=d[B])&&(F=(U<3?Q(F):U>3?Q(l,N,F):Q(l,N))||F);return U>3&&F&&Object.defineProperty(l,N,F),F},Z=this&&this.__param||function(d,l){return function(N,W){l(N,W,d)}};Object.defineProperty(n,"__esModule",{value:!0}),n.CharSizeService=void 0;var e=o(2585),S=o(8460),r=function(){function d(l,N,W){this._optionsService=W,this.width=0,this.height=0,this._onCharSizeChange=new S.EventEmitter,this._measureStrategy=new E(l,N,this._optionsService)}return Object.defineProperty(d.prototype,"hasValidSize",{get:function(){return this.width>0&&this.height>0},enumerable:!1,configurable:!0}),Object.defineProperty(d.prototype,"onCharSizeChange",{get:function(){return this._onCharSizeChange.event},enumerable:!1,configurable:!0}),d.prototype.measure=function(){var l=this._measureStrategy.measure();l.width===this.width&&l.height===this.height||(this.width=l.width,this.height=l.height,this._onCharSizeChange.fire())},t([Z(2,e.IOptionsService)],d)}();n.CharSizeService=r;var E=function(){function d(l,N,W){this._document=l,this._parentElement=N,this._optionsService=W,this._result={width:0,height:0},this._measureElement=this._document.createElement("span"),this._measureElement.classList.add("xterm-char-measure-element"),this._measureElement.textContent="W",this._measureElement.setAttribute("aria-hidden","true"),this._parentElement.appendChild(this._measureElement)}return d.prototype.measure=function(){this._measureElement.style.fontFamily=this._optionsService.rawOptions.fontFamily,this._measureElement.style.fontSize=this._optionsService.rawOptions.fontSize+"px";var l=this._measureElement.getBoundingClientRect();return l.width!==0&&l.height!==0&&(this._result.width=l.width,this._result.height=Math.ceil(l.height)),this._result},d}()},4269:function(x,n,o){var t,Z=this&&this.__extends||(t=function(Q,U){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(F,B){F.__proto__=B}||function(F,B){for(var R in B)Object.prototype.hasOwnProperty.call(B,R)&&(F[R]=B[R])},t(Q,U)},function(Q,U){if(typeof U!="function"&&U!==null)throw new TypeError("Class extends value "+String(U)+" is not a constructor or null");function F(){this.constructor=Q}t(Q,U),Q.prototype=U===null?Object.create(U):(F.prototype=U.prototype,new F)}),e=this&&this.__decorate||function(Q,U,F,B){var R,J=arguments.length,V=J<3?U:B===null?B=Object.getOwnPropertyDescriptor(U,F):B;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")V=Reflect.decorate(Q,U,F,B);else for(var k=Q.length-1;k>=0;k--)(R=Q[k])&&(V=(J<3?R(V):J>3?R(U,F,V):R(U,F))||V);return J>3&&V&&Object.defineProperty(U,F,V),V},S=this&&this.__param||function(Q,U){return function(F,B){U(F,B,Q)}};Object.defineProperty(n,"__esModule",{value:!0}),n.CharacterJoinerService=n.JoinedCellData=void 0;var r=o(3734),E=o(643),d=o(511),l=o(2585),N=function(Q){function U(F,B,R){var J=Q.call(this)||this;return J.content=0,J.combinedData="",J.fg=F.fg,J.bg=F.bg,J.combinedData=B,J._width=R,J}return Z(U,Q),U.prototype.isCombined=function(){return 2097152},U.prototype.getWidth=function(){return this._width},U.prototype.getChars=function(){return this.combinedData},U.prototype.getCode=function(){return 2097151},U.prototype.setFromCharData=function(F){throw new Error("not implemented")},U.prototype.getAsCharData=function(){return[this.fg,this.getChars(),this.getWidth(),this.getCode()]},U}(r.AttributeData);n.JoinedCellData=N;var W=function(){function Q(U){this._bufferService=U,this._characterJoiners=[],this._nextCharacterJoinerId=0,this._workCell=new d.CellData}return Q.prototype.register=function(U){var F={id:this._nextCharacterJoinerId++,handler:U};return this._characterJoiners.push(F),F.id},Q.prototype.deregister=function(U){for(var F=0;F<this._characterJoiners.length;F++)if(this._characterJoiners[F].id===U)return this._characterJoiners.splice(F,1),!0;return!1},Q.prototype.getJoinedCharacters=function(U){if(this._characterJoiners.length===0)return[];var F=this._bufferService.buffer.lines.get(U);if(!F||F.length===0)return[];for(var B=[],R=F.translateToString(!0),J=0,V=0,k=0,i=F.getFg(0),a=F.getBg(0),h=0;h<F.getTrimmedLength();h++)if(F.loadCell(h,this._workCell),this._workCell.getWidth()!==0){if(this._workCell.fg!==i||this._workCell.bg!==a){if(h-J>1)for(var T=this._getJoinedRanges(R,k,V,F,J),s=0;s<T.length;s++)B.push(T[s]);J=h,k=V,i=this._workCell.fg,a=this._workCell.bg}V+=this._workCell.getChars().length||E.WHITESPACE_CELL_CHAR.length}if(this._bufferService.cols-J>1)for(T=this._getJoinedRanges(R,k,V,F,J),s=0;s<T.length;s++)B.push(T[s]);return B},Q.prototype._getJoinedRanges=function(U,F,B,R,J){var V=U.substring(F,B),k=[];try{k=this._characterJoiners[0].handler(V)}catch(T){console.error(T)}for(var i=1;i<this._characterJoiners.length;i++)try{for(var a=this._characterJoiners[i].handler(V),h=0;h<a.length;h++)Q._mergeRanges(k,a[h])}catch(T){console.error(T)}return this._stringRangesToCellRanges(k,R,J),k},Q.prototype._stringRangesToCellRanges=function(U,F,B){var R=0,J=!1,V=0,k=U[R];if(k){for(var i=B;i<this._bufferService.cols;i++){var a=F.getWidth(i),h=F.getString(i).length||E.WHITESPACE_CELL_CHAR.length;if(a!==0){if(!J&&k[0]<=V&&(k[0]=i,J=!0),k[1]<=V){if(k[1]=i,!(k=U[++R]))break;k[0]<=V?(k[0]=i,J=!0):J=!1}V+=h}}k&&(k[1]=this._bufferService.cols)}},Q._mergeRanges=function(U,F){for(var B=!1,R=0;R<U.length;R++){var J=U[R];if(B){if(F[1]<=J[0])return U[R-1][1]=F[1],U;if(F[1]<=J[1])return U[R-1][1]=Math.max(F[1],J[1]),U.splice(R,1),U;U.splice(R,1),R--}else{if(F[1]<=J[0])return U.splice(R,0,F),U;if(F[1]<=J[1])return J[0]=Math.min(F[0],J[0]),U;F[0]<J[1]&&(J[0]=Math.min(F[0],J[0]),B=!0)}}return B?U[U.length-1][1]=F[1]:U.push(F),U},Q=e([S(0,l.IBufferService)],Q)}();n.CharacterJoinerService=W},5114:(x,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.CoreBrowserService=void 0;var o=function(){function t(Z){this._textarea=Z}return Object.defineProperty(t.prototype,"isFocused",{get:function(){return(this._textarea.getRootNode?this._textarea.getRootNode():document).activeElement===this._textarea&&document.hasFocus()},enumerable:!1,configurable:!0}),t}();n.CoreBrowserService=o},8934:function(x,n,o){var t=this&&this.__decorate||function(E,d,l,N){var W,Q=arguments.length,U=Q<3?d:N===null?N=Object.getOwnPropertyDescriptor(d,l):N;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")U=Reflect.decorate(E,d,l,N);else for(var F=E.length-1;F>=0;F--)(W=E[F])&&(U=(Q<3?W(U):Q>3?W(d,l,U):W(d,l))||U);return Q>3&&U&&Object.defineProperty(d,l,U),U},Z=this&&this.__param||function(E,d){return function(l,N){d(l,N,E)}};Object.defineProperty(n,"__esModule",{value:!0}),n.MouseService=void 0;var e=o(4725),S=o(9806),r=function(){function E(d,l){this._renderService=d,this._charSizeService=l}return E.prototype.getCoords=function(d,l,N,W,Q){return(0,S.getCoords)(window,d,l,N,W,this._charSizeService.hasValidSize,this._renderService.dimensions.actualCellWidth,this._renderService.dimensions.actualCellHeight,Q)},E.prototype.getRawByteCoords=function(d,l,N,W){var Q=this.getCoords(d,l,N,W);return(0,S.getRawByteCoords)(Q)},t([Z(0,e.IRenderService),Z(1,e.ICharSizeService)],E)}();n.MouseService=r},3230:function(x,n,o){var t,Z=this&&this.__extends||(t=function(F,B){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(R,J){R.__proto__=J}||function(R,J){for(var V in J)Object.prototype.hasOwnProperty.call(J,V)&&(R[V]=J[V])},t(F,B)},function(F,B){if(typeof B!="function"&&B!==null)throw new TypeError("Class extends value "+String(B)+" is not a constructor or null");function R(){this.constructor=F}t(F,B),F.prototype=B===null?Object.create(B):(R.prototype=B.prototype,new R)}),e=this&&this.__decorate||function(F,B,R,J){var V,k=arguments.length,i=k<3?B:J===null?J=Object.getOwnPropertyDescriptor(B,R):J;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(F,B,R,J);else for(var a=F.length-1;a>=0;a--)(V=F[a])&&(i=(k<3?V(i):k>3?V(B,R,i):V(B,R))||i);return k>3&&i&&Object.defineProperty(B,R,i),i},S=this&&this.__param||function(F,B){return function(R,J){B(R,J,F)}};Object.defineProperty(n,"__esModule",{value:!0}),n.RenderService=void 0;var r=o(6193),E=o(8460),d=o(844),l=o(5596),N=o(3656),W=o(2585),Q=o(4725),U=function(F){function B(R,J,V,k,i,a,h){var T=F.call(this)||this;if(T._renderer=R,T._rowCount=J,T._charSizeService=i,T._isPaused=!1,T._needsFullRefresh=!1,T._isNextRenderRedrawOnly=!0,T._needsSelectionRefresh=!1,T._canvasWidth=0,T._canvasHeight=0,T._selectionState={start:void 0,end:void 0,columnSelectMode:!1},T._onDimensionsChange=new E.EventEmitter,T._onRenderedViewportChange=new E.EventEmitter,T._onRender=new E.EventEmitter,T._onRefreshRequest=new E.EventEmitter,T.register({dispose:function(){return T._renderer.dispose()}}),T._renderDebouncer=new r.RenderDebouncer(function(C,D){return T._renderRows(C,D)}),T.register(T._renderDebouncer),T._screenDprMonitor=new l.ScreenDprMonitor,T._screenDprMonitor.setListener(function(){return T.onDevicePixelRatioChange()}),T.register(T._screenDprMonitor),T.register(h.onResize(function(){return T._fullRefresh()})),T.register(h.buffers.onBufferActivate(function(){var C;return(C=T._renderer)===null||C===void 0?void 0:C.clear()})),T.register(k.onOptionChange(function(){return T._handleOptionsChanged()})),T.register(T._charSizeService.onCharSizeChange(function(){return T.onCharSizeChanged()})),T.register(a.onDecorationRegistered(function(){return T._fullRefresh()})),T.register(a.onDecorationRemoved(function(){return T._fullRefresh()})),T._renderer.onRequestRedraw(function(C){return T.refreshRows(C.start,C.end,!0)}),T.register((0,N.addDisposableDomListener)(window,"resize",function(){return T.onDevicePixelRatioChange()})),"IntersectionObserver"in window){var s=new IntersectionObserver(function(C){return T._onIntersectionChange(C[C.length-1])},{threshold:0});s.observe(V),T.register({dispose:function(){return s.disconnect()}})}return T}return Z(B,F),Object.defineProperty(B.prototype,"onDimensionsChange",{get:function(){return this._onDimensionsChange.event},enumerable:!1,configurable:!0}),Object.defineProperty(B.prototype,"onRenderedViewportChange",{get:function(){return this._onRenderedViewportChange.event},enumerable:!1,configurable:!0}),Object.defineProperty(B.prototype,"onRender",{get:function(){return this._onRender.event},enumerable:!1,configurable:!0}),Object.defineProperty(B.prototype,"onRefreshRequest",{get:function(){return this._onRefreshRequest.event},enumerable:!1,configurable:!0}),Object.defineProperty(B.prototype,"dimensions",{get:function(){return this._renderer.dimensions},enumerable:!1,configurable:!0}),B.prototype._onIntersectionChange=function(R){this._isPaused=R.isIntersecting===void 0?R.intersectionRatio===0:!R.isIntersecting,this._isPaused||this._charSizeService.hasValidSize||this._charSizeService.measure(),!this._isPaused&&this._needsFullRefresh&&(this.refreshRows(0,this._rowCount-1),this._needsFullRefresh=!1)},B.prototype.refreshRows=function(R,J,V){V===void 0&&(V=!1),this._isPaused?this._needsFullRefresh=!0:(V||(this._isNextRenderRedrawOnly=!1),this._renderDebouncer.refresh(R,J,this._rowCount))},B.prototype._renderRows=function(R,J){this._renderer.renderRows(R,J),this._needsSelectionRefresh&&(this._renderer.onSelectionChanged(this._selectionState.start,this._selectionState.end,this._selectionState.columnSelectMode),this._needsSelectionRefresh=!1),this._isNextRenderRedrawOnly||this._onRenderedViewportChange.fire({start:R,end:J}),this._onRender.fire({start:R,end:J}),this._isNextRenderRedrawOnly=!0},B.prototype.resize=function(R,J){this._rowCount=J,this._fireOnCanvasResize()},B.prototype._handleOptionsChanged=function(){this._renderer.onOptionsChanged(),this.refreshRows(0,this._rowCount-1),this._fireOnCanvasResize()},B.prototype._fireOnCanvasResize=function(){this._renderer.dimensions.canvasWidth===this._canvasWidth&&this._renderer.dimensions.canvasHeight===this._canvasHeight||this._onDimensionsChange.fire(this._renderer.dimensions)},B.prototype.dispose=function(){F.prototype.dispose.call(this)},B.prototype.setRenderer=function(R){var J=this;this._renderer.dispose(),this._renderer=R,this._renderer.onRequestRedraw(function(V){return J.refreshRows(V.start,V.end,!0)}),this._needsSelectionRefresh=!0,this._fullRefresh()},B.prototype.addRefreshCallback=function(R){return this._renderDebouncer.addRefreshCallback(R)},B.prototype._fullRefresh=function(){this._isPaused?this._needsFullRefresh=!0:this.refreshRows(0,this._rowCount-1)},B.prototype.clearTextureAtlas=function(){var R,J;(J=(R=this._renderer)===null||R===void 0?void 0:R.clearTextureAtlas)===null||J===void 0||J.call(R),this._fullRefresh()},B.prototype.setColors=function(R){this._renderer.setColors(R),this._fullRefresh()},B.prototype.onDevicePixelRatioChange=function(){this._charSizeService.measure(),this._renderer.onDevicePixelRatioChange(),this.refreshRows(0,this._rowCount-1)},B.prototype.onResize=function(R,J){this._renderer.onResize(R,J),this._fullRefresh()},B.prototype.onCharSizeChanged=function(){this._renderer.onCharSizeChanged()},B.prototype.onBlur=function(){this._renderer.onBlur()},B.prototype.onFocus=function(){this._renderer.onFocus()},B.prototype.onSelectionChanged=function(R,J,V){this._selectionState.start=R,this._selectionState.end=J,this._selectionState.columnSelectMode=V,this._renderer.onSelectionChanged(R,J,V)},B.prototype.onCursorMove=function(){this._renderer.onCursorMove()},B.prototype.clear=function(){this._renderer.clear()},e([S(3,W.IOptionsService),S(4,Q.ICharSizeService),S(5,W.IDecorationService),S(6,W.IBufferService)],B)}(d.Disposable);n.RenderService=U},9312:function(x,n,o){var t,Z=this&&this.__extends||(t=function(k,i){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(a,h){a.__proto__=h}||function(a,h){for(var T in h)Object.prototype.hasOwnProperty.call(h,T)&&(a[T]=h[T])},t(k,i)},function(k,i){if(typeof i!="function"&&i!==null)throw new TypeError("Class extends value "+String(i)+" is not a constructor or null");function a(){this.constructor=k}t(k,i),k.prototype=i===null?Object.create(i):(a.prototype=i.prototype,new a)}),e=this&&this.__decorate||function(k,i,a,h){var T,s=arguments.length,C=s<3?i:h===null?h=Object.getOwnPropertyDescriptor(i,a):h;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")C=Reflect.decorate(k,i,a,h);else for(var D=k.length-1;D>=0;D--)(T=k[D])&&(C=(s<3?T(C):s>3?T(i,a,C):T(i,a))||C);return s>3&&C&&Object.defineProperty(i,a,C),C},S=this&&this.__param||function(k,i){return function(a,h){i(a,h,k)}};Object.defineProperty(n,"__esModule",{value:!0}),n.SelectionService=void 0;var r=o(6114),E=o(456),d=o(511),l=o(8460),N=o(4725),W=o(2585),Q=o(9806),U=o(9504),F=o(844),B=o(4841),R=String.fromCharCode(160),J=new RegExp(R,"g"),V=function(k){function i(a,h,T,s,C,D,p,c){var m=k.call(this)||this;return m._element=a,m._screenElement=h,m._linkifier=T,m._bufferService=s,m._coreService=C,m._mouseService=D,m._optionsService=p,m._renderService=c,m._dragScrollAmount=0,m._enabled=!0,m._workCell=new d.CellData,m._mouseDownTimeStamp=0,m._oldHasSelection=!1,m._oldSelectionStart=void 0,m._oldSelectionEnd=void 0,m._onLinuxMouseSelection=m.register(new l.EventEmitter),m._onRedrawRequest=m.register(new l.EventEmitter),m._onSelectionChange=m.register(new l.EventEmitter),m._onRequestScrollLines=m.register(new l.EventEmitter),m._mouseMoveListener=function(v){return m._onMouseMove(v)},m._mouseUpListener=function(v){return m._onMouseUp(v)},m._coreService.onUserInput(function(){m.hasSelection&&m.clearSelection()}),m._trimListener=m._bufferService.buffer.lines.onTrim(function(v){return m._onTrim(v)}),m.register(m._bufferService.buffers.onBufferActivate(function(v){return m._onBufferActivate(v)})),m.enable(),m._model=new E.SelectionModel(m._bufferService),m._activeSelectionMode=0,m}return Z(i,k),Object.defineProperty(i.prototype,"onLinuxMouseSelection",{get:function(){return this._onLinuxMouseSelection.event},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,"onRequestRedraw",{get:function(){return this._onRedrawRequest.event},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,"onSelectionChange",{get:function(){return this._onSelectionChange.event},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,"onRequestScrollLines",{get:function(){return this._onRequestScrollLines.event},enumerable:!1,configurable:!0}),i.prototype.dispose=function(){this._removeMouseDownListeners()},i.prototype.reset=function(){this.clearSelection()},i.prototype.disable=function(){this.clearSelection(),this._enabled=!1},i.prototype.enable=function(){this._enabled=!0},Object.defineProperty(i.prototype,"selectionStart",{get:function(){return this._model.finalSelectionStart},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,"selectionEnd",{get:function(){return this._model.finalSelectionEnd},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,"hasSelection",{get:function(){var a=this._model.finalSelectionStart,h=this._model.finalSelectionEnd;return!(!a||!h||a[0]===h[0]&&a[1]===h[1])},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,"selectionText",{get:function(){var a=this._model.finalSelectionStart,h=this._model.finalSelectionEnd;if(!a||!h)return"";var T=this._bufferService.buffer,s=[];if(this._activeSelectionMode===3){if(a[0]===h[0])return"";for(var C=a[0]<h[0]?a[0]:h[0],D=a[0]<h[0]?h[0]:a[0],p=a[1];p<=h[1];p++){var c=T.translateBufferLineToString(p,!0,C,D);s.push(c)}}else{var m=a[1]===h[1]?h[0]:void 0;for(s.push(T.translateBufferLineToString(a[1],!0,a[0],m)),p=a[1]+1;p<=h[1]-1;p++){var v=T.lines.get(p);c=T.translateBufferLineToString(p,!0),v!=null&&v.isWrapped?s[s.length-1]+=c:s.push(c)}a[1]!==h[1]&&(v=T.lines.get(h[1]),c=T.translateBufferLineToString(h[1],!0,0,h[0]),v&&v.isWrapped?s[s.length-1]+=c:s.push(c))}return s.map(function(z){return z.replace(J," ")}).join(r.isWindows?`\r
`:`
`)},enumerable:!1,configurable:!0}),i.prototype.clearSelection=function(){this._model.clearSelection(),this._removeMouseDownListeners(),this.refresh(),this._onSelectionChange.fire()},i.prototype.refresh=function(a){var h=this;this._refreshAnimationFrame||(this._refreshAnimationFrame=window.requestAnimationFrame(function(){return h._refresh()})),r.isLinux&&a&&this.selectionText.length&&this._onLinuxMouseSelection.fire(this.selectionText)},i.prototype._refresh=function(){this._refreshAnimationFrame=void 0,this._onRedrawRequest.fire({start:this._model.finalSelectionStart,end:this._model.finalSelectionEnd,columnSelectMode:this._activeSelectionMode===3})},i.prototype._isClickInSelection=function(a){var h=this._getMouseBufferCoords(a),T=this._model.finalSelectionStart,s=this._model.finalSelectionEnd;return!!(T&&s&&h)&&this._areCoordsInSelection(h,T,s)},i.prototype.isCellInSelection=function(a,h){var T=this._model.finalSelectionStart,s=this._model.finalSelectionEnd;return!(!T||!s)&&this._areCoordsInSelection([a,h],T,s)},i.prototype._areCoordsInSelection=function(a,h,T){return a[1]>h[1]&&a[1]<T[1]||h[1]===T[1]&&a[1]===h[1]&&a[0]>=h[0]&&a[0]<T[0]||h[1]<T[1]&&a[1]===T[1]&&a[0]<T[0]||h[1]<T[1]&&a[1]===h[1]&&a[0]>=h[0]},i.prototype._selectWordAtCursor=function(a,h){var T,s,C=(s=(T=this._linkifier.currentLink)===null||T===void 0?void 0:T.link)===null||s===void 0?void 0:s.range;if(C)return this._model.selectionStart=[C.start.x-1,C.start.y-1],this._model.selectionStartLength=(0,B.getRangeLength)(C,this._bufferService.cols),this._model.selectionEnd=void 0,!0;var D=this._getMouseBufferCoords(a);return!!D&&(this._selectWordAt(D,h),this._model.selectionEnd=void 0,!0)},i.prototype.selectAll=function(){this._model.isSelectAllActive=!0,this.refresh(),this._onSelectionChange.fire()},i.prototype.selectLines=function(a,h){this._model.clearSelection(),a=Math.max(a,0),h=Math.min(h,this._bufferService.buffer.lines.length-1),this._model.selectionStart=[0,a],this._model.selectionEnd=[this._bufferService.cols,h],this.refresh(),this._onSelectionChange.fire()},i.prototype._onTrim=function(a){this._model.onTrim(a)&&this.refresh()},i.prototype._getMouseBufferCoords=function(a){var h=this._mouseService.getCoords(a,this._screenElement,this._bufferService.cols,this._bufferService.rows,!0);if(h)return h[0]--,h[1]--,h[1]+=this._bufferService.buffer.ydisp,h},i.prototype._getMouseEventScrollAmount=function(a){var h=(0,Q.getCoordsRelativeToElement)(window,a,this._screenElement)[1],T=this._renderService.dimensions.canvasHeight;return h>=0&&h<=T?0:(h>T&&(h-=T),h=Math.min(Math.max(h,-50),50),(h/=50)/Math.abs(h)+Math.round(14*h))},i.prototype.shouldForceSelection=function(a){return r.isMac?a.altKey&&this._optionsService.rawOptions.macOptionClickForcesSelection:a.shiftKey},i.prototype.onMouseDown=function(a){if(this._mouseDownTimeStamp=a.timeStamp,(a.button!==2||!this.hasSelection)&&a.button===0){if(!this._enabled){if(!this.shouldForceSelection(a))return;a.stopPropagation()}a.preventDefault(),this._dragScrollAmount=0,this._enabled&&a.shiftKey?this._onIncrementalClick(a):a.detail===1?this._onSingleClick(a):a.detail===2?this._onDoubleClick(a):a.detail===3&&this._onTripleClick(a),this._addMouseDownListeners(),this.refresh(!0)}},i.prototype._addMouseDownListeners=function(){var a=this;this._screenElement.ownerDocument&&(this._screenElement.ownerDocument.addEventListener("mousemove",this._mouseMoveListener),this._screenElement.ownerDocument.addEventListener("mouseup",this._mouseUpListener)),this._dragScrollIntervalTimer=window.setInterval(function(){return a._dragScroll()},50)},i.prototype._removeMouseDownListeners=function(){this._screenElement.ownerDocument&&(this._screenElement.ownerDocument.removeEventListener("mousemove",this._mouseMoveListener),this._screenElement.ownerDocument.removeEventListener("mouseup",this._mouseUpListener)),clearInterval(this._dragScrollIntervalTimer),this._dragScrollIntervalTimer=void 0},i.prototype._onIncrementalClick=function(a){this._model.selectionStart&&(this._model.selectionEnd=this._getMouseBufferCoords(a))},i.prototype._onSingleClick=function(a){if(this._model.selectionStartLength=0,this._model.isSelectAllActive=!1,this._activeSelectionMode=this.shouldColumnSelect(a)?3:0,this._model.selectionStart=this._getMouseBufferCoords(a),this._model.selectionStart){this._model.selectionEnd=void 0;var h=this._bufferService.buffer.lines.get(this._model.selectionStart[1]);h&&h.length!==this._model.selectionStart[0]&&h.hasWidth(this._model.selectionStart[0])===0&&this._model.selectionStart[0]++}},i.prototype._onDoubleClick=function(a){this._selectWordAtCursor(a,!0)&&(this._activeSelectionMode=1)},i.prototype._onTripleClick=function(a){var h=this._getMouseBufferCoords(a);h&&(this._activeSelectionMode=2,this._selectLineAt(h[1]))},i.prototype.shouldColumnSelect=function(a){return a.altKey&&!(r.isMac&&this._optionsService.rawOptions.macOptionClickForcesSelection)},i.prototype._onMouseMove=function(a){if(a.stopImmediatePropagation(),this._model.selectionStart){var h=this._model.selectionEnd?[this._model.selectionEnd[0],this._model.selectionEnd[1]]:null;if(this._model.selectionEnd=this._getMouseBufferCoords(a),this._model.selectionEnd){this._activeSelectionMode===2?this._model.selectionEnd[1]<this._model.selectionStart[1]?this._model.selectionEnd[0]=0:this._model.selectionEnd[0]=this._bufferService.cols:this._activeSelectionMode===1&&this._selectToWordAt(this._model.selectionEnd),this._dragScrollAmount=this._getMouseEventScrollAmount(a),this._activeSelectionMode!==3&&(this._dragScrollAmount>0?this._model.selectionEnd[0]=this._bufferService.cols:this._dragScrollAmount<0&&(this._model.selectionEnd[0]=0));var T=this._bufferService.buffer;if(this._model.selectionEnd[1]<T.lines.length){var s=T.lines.get(this._model.selectionEnd[1]);s&&s.hasWidth(this._model.selectionEnd[0])===0&&this._model.selectionEnd[0]++}h&&h[0]===this._model.selectionEnd[0]&&h[1]===this._model.selectionEnd[1]||this.refresh(!0)}else this.refresh(!0)}},i.prototype._dragScroll=function(){if(this._model.selectionEnd&&this._model.selectionStart&&this._dragScrollAmount){this._onRequestScrollLines.fire({amount:this._dragScrollAmount,suppressScrollEvent:!1});var a=this._bufferService.buffer;this._dragScrollAmount>0?(this._activeSelectionMode!==3&&(this._model.selectionEnd[0]=this._bufferService.cols),this._model.selectionEnd[1]=Math.min(a.ydisp+this._bufferService.rows,a.lines.length-1)):(this._activeSelectionMode!==3&&(this._model.selectionEnd[0]=0),this._model.selectionEnd[1]=a.ydisp),this.refresh()}},i.prototype._onMouseUp=function(a){var h=a.timeStamp-this._mouseDownTimeStamp;if(this._removeMouseDownListeners(),this.selectionText.length<=1&&h<500&&a.altKey&&this._optionsService.getOption("altClickMovesCursor")){if(this._bufferService.buffer.ybase===this._bufferService.buffer.ydisp){var T=this._mouseService.getCoords(a,this._element,this._bufferService.cols,this._bufferService.rows,!1);if(T&&T[0]!==void 0&&T[1]!==void 0){var s=(0,U.moveToCellSequence)(T[0]-1,T[1]-1,this._bufferService,this._coreService.decPrivateModes.applicationCursorKeys);this._coreService.triggerDataEvent(s,!0)}}}else this._fireEventIfSelectionChanged()},i.prototype._fireEventIfSelectionChanged=function(){var a=this._model.finalSelectionStart,h=this._model.finalSelectionEnd,T=!(!a||!h||a[0]===h[0]&&a[1]===h[1]);T?a&&h&&(this._oldSelectionStart&&this._oldSelectionEnd&&a[0]===this._oldSelectionStart[0]&&a[1]===this._oldSelectionStart[1]&&h[0]===this._oldSelectionEnd[0]&&h[1]===this._oldSelectionEnd[1]||this._fireOnSelectionChange(a,h,T)):this._oldHasSelection&&this._fireOnSelectionChange(a,h,T)},i.prototype._fireOnSelectionChange=function(a,h,T){this._oldSelectionStart=a,this._oldSelectionEnd=h,this._oldHasSelection=T,this._onSelectionChange.fire()},i.prototype._onBufferActivate=function(a){var h=this;this.clearSelection(),this._trimListener.dispose(),this._trimListener=a.activeBuffer.lines.onTrim(function(T){return h._onTrim(T)})},i.prototype._convertViewportColToCharacterIndex=function(a,h){for(var T=h[0],s=0;h[0]>=s;s++){var C=a.loadCell(s,this._workCell).getChars().length;this._workCell.getWidth()===0?T--:C>1&&h[0]!==s&&(T+=C-1)}return T},i.prototype.setSelection=function(a,h,T){this._model.clearSelection(),this._removeMouseDownListeners(),this._model.selectionStart=[a,h],this._model.selectionStartLength=T,this.refresh(),this._fireEventIfSelectionChanged()},i.prototype.rightClickSelect=function(a){this._isClickInSelection(a)||(this._selectWordAtCursor(a,!1)&&this.refresh(!0),this._fireEventIfSelectionChanged())},i.prototype._getWordAt=function(a,h,T,s){if(T===void 0&&(T=!0),s===void 0&&(s=!0),!(a[0]>=this._bufferService.cols)){var C=this._bufferService.buffer,D=C.lines.get(a[1]);if(D){var p=C.translateBufferLineToString(a[1],!1),c=this._convertViewportColToCharacterIndex(D,a),m=c,v=a[0]-c,z=0,f=0,H=0,j=0;if(p.charAt(c)===" "){for(;c>0&&p.charAt(c-1)===" ";)c--;for(;m<p.length&&p.charAt(m+1)===" ";)m++}else{var w=a[0],M=a[0];D.getWidth(w)===0&&(z++,w--),D.getWidth(M)===2&&(f++,M++);var P=D.getString(M).length;for(P>1&&(j+=P-1,m+=P-1);w>0&&c>0&&!this._isCharWordSeparator(D.loadCell(w-1,this._workCell));){D.loadCell(w-1,this._workCell);var g=this._workCell.getChars().length;this._workCell.getWidth()===0?(z++,w--):g>1&&(H+=g-1,c-=g-1),c--,w--}for(;M<D.length&&m+1<p.length&&!this._isCharWordSeparator(D.loadCell(M+1,this._workCell));){D.loadCell(M+1,this._workCell);var UU=this._workCell.getChars().length;this._workCell.getWidth()===2?(f++,M++):UU>1&&(j+=UU-1,m+=UU-1),m++,M++}}m++;var X=c+v-z+H,$=Math.min(this._bufferService.cols,m-c+z+f-H-j);if(h||p.slice(c,m).trim()!==""){if(T&&X===0&&D.getCodePoint(0)!==32){var K=C.lines.get(a[1]-1);if(K&&D.isWrapped&&K.getCodePoint(this._bufferService.cols-1)!==32){var O=this._getWordAt([this._bufferService.cols-1,a[1]-1],!1,!0,!1);if(O){var b=this._bufferService.cols-O.start;X-=b,$+=b}}}if(s&&X+$===this._bufferService.cols&&D.getCodePoint(this._bufferService.cols-1)!==32){var Y=C.lines.get(a[1]+1);if((Y==null?void 0:Y.isWrapped)&&Y.getCodePoint(0)!==32){var y=this._getWordAt([0,a[1]+1],!1,!1,!0);y&&($+=y.length)}}return{start:X,length:$}}}}},i.prototype._selectWordAt=function(a,h){var T=this._getWordAt(a,h);if(T){for(;T.start<0;)T.start+=this._bufferService.cols,a[1]--;this._model.selectionStart=[T.start,a[1]],this._model.selectionStartLength=T.length}},i.prototype._selectToWordAt=function(a){var h=this._getWordAt(a,!0);if(h){for(var T=a[1];h.start<0;)h.start+=this._bufferService.cols,T--;if(!this._model.areSelectionValuesReversed())for(;h.start+h.length>this._bufferService.cols;)h.length-=this._bufferService.cols,T++;this._model.selectionEnd=[this._model.areSelectionValuesReversed()?h.start:h.start+h.length,T]}},i.prototype._isCharWordSeparator=function(a){return a.getWidth()!==0&&this._optionsService.rawOptions.wordSeparator.indexOf(a.getChars())>=0},i.prototype._selectLineAt=function(a){var h=this._bufferService.buffer.getWrappedRangeForLine(a),T={start:{x:0,y:h.first},end:{x:this._bufferService.cols-1,y:h.last}};this._model.selectionStart=[0,h.first],this._model.selectionEnd=void 0,this._model.selectionStartLength=(0,B.getRangeLength)(T,this._bufferService.cols)},e([S(3,W.IBufferService),S(4,W.ICoreService),S(5,N.IMouseService),S(6,W.IOptionsService),S(7,N.IRenderService)],i)}(F.Disposable);n.SelectionService=V},4725:(x,n,o)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.ICharacterJoinerService=n.ISoundService=n.ISelectionService=n.IRenderService=n.IMouseService=n.ICoreBrowserService=n.ICharSizeService=void 0;var t=o(8343);n.ICharSizeService=(0,t.createDecorator)("CharSizeService"),n.ICoreBrowserService=(0,t.createDecorator)("CoreBrowserService"),n.IMouseService=(0,t.createDecorator)("MouseService"),n.IRenderService=(0,t.createDecorator)("RenderService"),n.ISelectionService=(0,t.createDecorator)("SelectionService"),n.ISoundService=(0,t.createDecorator)("SoundService"),n.ICharacterJoinerService=(0,t.createDecorator)("CharacterJoinerService")},357:function(x,n,o){var t=this&&this.__decorate||function(r,E,d,l){var N,W=arguments.length,Q=W<3?E:l===null?l=Object.getOwnPropertyDescriptor(E,d):l;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")Q=Reflect.decorate(r,E,d,l);else for(var U=r.length-1;U>=0;U--)(N=r[U])&&(Q=(W<3?N(Q):W>3?N(E,d,Q):N(E,d))||Q);return W>3&&Q&&Object.defineProperty(E,d,Q),Q},Z=this&&this.__param||function(r,E){return function(d,l){E(d,l,r)}};Object.defineProperty(n,"__esModule",{value:!0}),n.SoundService=void 0;var e=o(2585),S=function(){function r(E){this._optionsService=E}return Object.defineProperty(r,"audioContext",{get:function(){if(!r._audioContext){var E=window.AudioContext||window.webkitAudioContext;if(!E)return console.warn("Web Audio API is not supported by this browser. Consider upgrading to the latest version"),null;r._audioContext=new E}return r._audioContext},enumerable:!1,configurable:!0}),r.prototype.playBellSound=function(){var E=r.audioContext;if(E){var d=E.createBufferSource();E.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._optionsService.rawOptions.bellSound)),function(l){d.buffer=l,d.connect(E.destination),d.start(0)})}},r.prototype._base64ToArrayBuffer=function(E){for(var d=window.atob(E),l=d.length,N=new Uint8Array(l),W=0;W<l;W++)N[W]=d.charCodeAt(W);return N.buffer},r.prototype._removeMimeType=function(E){return E.split(",")[1]},r=t([Z(0,e.IOptionsService)],r)}();n.SoundService=S},6349:(x,n,o)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.CircularList=void 0;var t=o(8460),Z=function(){function e(S){this._maxLength=S,this.onDeleteEmitter=new t.EventEmitter,this.onInsertEmitter=new t.EventEmitter,this.onTrimEmitter=new t.EventEmitter,this._array=new Array(this._maxLength),this._startIndex=0,this._length=0}return Object.defineProperty(e.prototype,"onDelete",{get:function(){return this.onDeleteEmitter.event},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"onInsert",{get:function(){return this.onInsertEmitter.event},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"onTrim",{get:function(){return this.onTrimEmitter.event},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"maxLength",{get:function(){return this._maxLength},set:function(S){if(this._maxLength!==S){for(var r=new Array(S),E=0;E<Math.min(S,this.length);E++)r[E]=this._array[this._getCyclicIndex(E)];this._array=r,this._maxLength=S,this._startIndex=0}},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"length",{get:function(){return this._length},set:function(S){if(S>this._length)for(var r=this._length;r<S;r++)this._array[r]=void 0;this._length=S},enumerable:!1,configurable:!0}),e.prototype.get=function(S){return this._array[this._getCyclicIndex(S)]},e.prototype.set=function(S,r){this._array[this._getCyclicIndex(S)]=r},e.prototype.push=function(S){this._array[this._getCyclicIndex(this._length)]=S,this._length===this._maxLength?(this._startIndex=++this._startIndex%this._maxLength,this.onTrimEmitter.fire(1)):this._length++},e.prototype.recycle=function(){if(this._length!==this._maxLength)throw new Error("Can only recycle when the buffer is full");return this._startIndex=++this._startIndex%this._maxLength,this.onTrimEmitter.fire(1),this._array[this._getCyclicIndex(this._length-1)]},Object.defineProperty(e.prototype,"isFull",{get:function(){return this._length===this._maxLength},enumerable:!1,configurable:!0}),e.prototype.pop=function(){return this._array[this._getCyclicIndex(this._length---1)]},e.prototype.splice=function(S,r){for(var E=[],d=2;d<arguments.length;d++)E[d-2]=arguments[d];if(r){for(var l=S;l<this._length-r;l++)this._array[this._getCyclicIndex(l)]=this._array[this._getCyclicIndex(l+r)];this._length-=r,this.onDeleteEmitter.fire({index:S,amount:r})}for(l=this._length-1;l>=S;l--)this._array[this._getCyclicIndex(l+E.length)]=this._array[this._getCyclicIndex(l)];for(l=0;l<E.length;l++)this._array[this._getCyclicIndex(S+l)]=E[l];if(E.length&&this.onInsertEmitter.fire({index:S,amount:E.length}),this._length+E.length>this._maxLength){var N=this._length+E.length-this._maxLength;this._startIndex+=N,this._length=this._maxLength,this.onTrimEmitter.fire(N)}else this._length+=E.length},e.prototype.trimStart=function(S){S>this._length&&(S=this._length),this._startIndex+=S,this._length-=S,this.onTrimEmitter.fire(S)},e.prototype.shiftElements=function(S,r,E){if(!(r<=0)){if(S<0||S>=this._length)throw new Error("start argument out of range");if(S+E<0)throw new Error("Cannot shift elements in list beyond index 0");if(E>0){for(var d=r-1;d>=0;d--)this.set(S+d+E,this.get(S+d));var l=S+r+E-this._length;if(l>0)for(this._length+=l;this._length>this._maxLength;)this._length--,this._startIndex++,this.onTrimEmitter.fire(1)}else for(d=0;d<r;d++)this.set(S+d+E,this.get(S+d))}},e.prototype._getCyclicIndex=function(S){return(this._startIndex+S)%this._maxLength},e}();n.CircularList=Z},1439:(x,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.clone=void 0,n.clone=function o(t,Z){if(Z===void 0&&(Z=5),typeof t!="object")return t;var e=Array.isArray(t)?[]:{};for(var S in t)e[S]=Z<=1?t[S]:t[S]&&o(t[S],Z-1);return e}},8055:function(x,n){var o,t,Z,e,S=this&&this.__read||function(d,l){var N=typeof Symbol=="function"&&d[Symbol.iterator];if(!N)return d;var W,Q,U=N.call(d),F=[];try{for(;(l===void 0||l-- >0)&&!(W=U.next()).done;)F.push(W.value)}catch(B){Q={error:B}}finally{try{W&&!W.done&&(N=U.return)&&N.call(U)}finally{if(Q)throw Q.error}}return F};function r(d){var l=d.toString(16);return l.length<2?"0"+l:l}function E(d,l){return d<l?(l+.05)/(d+.05):(d+.05)/(l+.05)}Object.defineProperty(n,"__esModule",{value:!0}),n.contrastRatio=n.toPaddedHex=n.rgba=n.rgb=n.css=n.color=n.channels=void 0,function(d){d.toCss=function(l,N,W,Q){return Q!==void 0?"#"+r(l)+r(N)+r(W)+r(Q):"#"+r(l)+r(N)+r(W)},d.toRgba=function(l,N,W,Q){return Q===void 0&&(Q=255),(l<<24|N<<16|W<<8|Q)>>>0}}(o=n.channels||(n.channels={})),(t=n.color||(n.color={})).blend=function(d,l){var N=(255&l.rgba)/255;if(N===1)return{css:l.css,rgba:l.rgba};var W=l.rgba>>24&255,Q=l.rgba>>16&255,U=l.rgba>>8&255,F=d.rgba>>24&255,B=d.rgba>>16&255,R=d.rgba>>8&255,J=F+Math.round((W-F)*N),V=B+Math.round((Q-B)*N),k=R+Math.round((U-R)*N);return{css:o.toCss(J,V,k),rgba:o.toRgba(J,V,k)}},t.isOpaque=function(d){return(255&d.rgba)==255},t.ensureContrastRatio=function(d,l,N){var W=e.ensureContrastRatio(d.rgba,l.rgba,N);if(W)return e.toColor(W>>24&255,W>>16&255,W>>8&255)},t.opaque=function(d){var l=(255|d.rgba)>>>0,N=S(e.toChannels(l),3),W=N[0],Q=N[1],U=N[2];return{css:o.toCss(W,Q,U),rgba:l}},t.opacity=function(d,l){var N=Math.round(255*l),W=S(e.toChannels(d.rgba),3),Q=W[0],U=W[1],F=W[2];return{css:o.toCss(Q,U,F,N),rgba:o.toRgba(Q,U,F,N)}},t.toColorRGB=function(d){return[d.rgba>>24&255,d.rgba>>16&255,d.rgba>>8&255]},(n.css||(n.css={})).toColor=function(d){if(d.match(/#[0-9a-f]{3,8}/i))switch(d.length){case 4:var l=parseInt(d.slice(1,2).repeat(2),16),N=parseInt(d.slice(2,3).repeat(2),16),W=parseInt(d.slice(3,4).repeat(2),16);return e.toColor(l,N,W);case 5:l=parseInt(d.slice(1,2).repeat(2),16),N=parseInt(d.slice(2,3).repeat(2),16),W=parseInt(d.slice(3,4).repeat(2),16);var Q=parseInt(d.slice(4,5).repeat(2),16);return e.toColor(l,N,W,Q);case 7:return{css:d,rgba:(parseInt(d.slice(1),16)<<8|255)>>>0};case 9:return{css:d,rgba:parseInt(d.slice(1),16)>>>0}}var U=d.match(/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(,\s*(0|1|\d?\.(\d+))\s*)?\)/);if(U)return l=parseInt(U[1]),N=parseInt(U[2]),W=parseInt(U[3]),Q=Math.round(255*(U[5]===void 0?1:parseFloat(U[5]))),e.toColor(l,N,W,Q);throw new Error("css.toColor: Unsupported css format")},function(d){function l(N,W,Q){var U=N/255,F=W/255,B=Q/255;return .2126*(U<=.03928?U/12.92:Math.pow((U+.055)/1.055,2.4))+.7152*(F<=.03928?F/12.92:Math.pow((F+.055)/1.055,2.4))+.0722*(B<=.03928?B/12.92:Math.pow((B+.055)/1.055,2.4))}d.relativeLuminance=function(N){return l(N>>16&255,N>>8&255,255&N)},d.relativeLuminance2=l}(Z=n.rgb||(n.rgb={})),function(d){function l(W,Q,U){for(var F=W>>24&255,B=W>>16&255,R=W>>8&255,J=Q>>24&255,V=Q>>16&255,k=Q>>8&255,i=E(Z.relativeLuminance2(J,V,k),Z.relativeLuminance2(F,B,R));i<U&&(J>0||V>0||k>0);)J-=Math.max(0,Math.ceil(.1*J)),V-=Math.max(0,Math.ceil(.1*V)),k-=Math.max(0,Math.ceil(.1*k)),i=E(Z.relativeLuminance2(J,V,k),Z.relativeLuminance2(F,B,R));return(J<<24|V<<16|k<<8|255)>>>0}function N(W,Q,U){for(var F=W>>24&255,B=W>>16&255,R=W>>8&255,J=Q>>24&255,V=Q>>16&255,k=Q>>8&255,i=E(Z.relativeLuminance2(J,V,k),Z.relativeLuminance2(F,B,R));i<U&&(J<255||V<255||k<255);)J=Math.min(255,J+Math.ceil(.1*(255-J))),V=Math.min(255,V+Math.ceil(.1*(255-V))),k=Math.min(255,k+Math.ceil(.1*(255-k))),i=E(Z.relativeLuminance2(J,V,k),Z.relativeLuminance2(F,B,R));return(J<<24|V<<16|k<<8|255)>>>0}d.ensureContrastRatio=function(W,Q,U){var F=Z.relativeLuminance(W>>8),B=Z.relativeLuminance(Q>>8);if(E(F,B)<U){if(B<F){var R=l(W,Q,U),J=E(F,Z.relativeLuminance(R>>8));if(J<U){var V=N(W,W,U);return J>E(F,Z.relativeLuminance(V>>8))?R:V}return R}var k=N(W,Q,U),i=E(F,Z.relativeLuminance(k>>8));return i<U?(V=l(W,W,U),i>E(F,Z.relativeLuminance(V>>8))?k:V):k}},d.reduceLuminance=l,d.increaseLuminance=N,d.toChannels=function(W){return[W>>24&255,W>>16&255,W>>8&255,255&W]},d.toColor=function(W,Q,U,F){return{css:o.toCss(W,Q,U,F),rgba:o.toRgba(W,Q,U,F)}}}(e=n.rgba||(n.rgba={})),n.toPaddedHex=r,n.contrastRatio=E},8969:function(x,n,o){var t,Z=this&&this.__extends||(t=function(h,T){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(s,C){s.__proto__=C}||function(s,C){for(var D in C)Object.prototype.hasOwnProperty.call(C,D)&&(s[D]=C[D])},t(h,T)},function(h,T){if(typeof T!="function"&&T!==null)throw new TypeError("Class extends value "+String(T)+" is not a constructor or null");function s(){this.constructor=h}t(h,T),h.prototype=T===null?Object.create(T):(s.prototype=T.prototype,new s)}),e=this&&this.__values||function(h){var T=typeof Symbol=="function"&&Symbol.iterator,s=T&&h[T],C=0;if(s)return s.call(h);if(h&&typeof h.length=="number")return{next:function(){return h&&C>=h.length&&(h=void 0),{value:h&&h[C++],done:!h}}};throw new TypeError(T?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(n,"__esModule",{value:!0}),n.CoreTerminal=void 0;var S=o(844),r=o(2585),E=o(4348),d=o(7866),l=o(744),N=o(7302),W=o(6975),Q=o(8460),U=o(1753),F=o(3730),B=o(1480),R=o(7994),J=o(9282),V=o(5435),k=o(5981),i=!1,a=function(h){function T(s){var C=h.call(this)||this;return C._onBinary=new Q.EventEmitter,C._onData=new Q.EventEmitter,C._onLineFeed=new Q.EventEmitter,C._onResize=new Q.EventEmitter,C._onScroll=new Q.EventEmitter,C._onWriteParsed=new Q.EventEmitter,C._instantiationService=new E.InstantiationService,C.optionsService=new N.OptionsService(s),C._instantiationService.setService(r.IOptionsService,C.optionsService),C._bufferService=C.register(C._instantiationService.createInstance(l.BufferService)),C._instantiationService.setService(r.IBufferService,C._bufferService),C._logService=C._instantiationService.createInstance(d.LogService),C._instantiationService.setService(r.ILogService,C._logService),C.coreService=C.register(C._instantiationService.createInstance(W.CoreService,function(){return C.scrollToBottom()})),C._instantiationService.setService(r.ICoreService,C.coreService),C.coreMouseService=C._instantiationService.createInstance(U.CoreMouseService),C._instantiationService.setService(r.ICoreMouseService,C.coreMouseService),C._dirtyRowService=C._instantiationService.createInstance(F.DirtyRowService),C._instantiationService.setService(r.IDirtyRowService,C._dirtyRowService),C.unicodeService=C._instantiationService.createInstance(B.UnicodeService),C._instantiationService.setService(r.IUnicodeService,C.unicodeService),C._charsetService=C._instantiationService.createInstance(R.CharsetService),C._instantiationService.setService(r.ICharsetService,C._charsetService),C._inputHandler=new V.InputHandler(C._bufferService,C._charsetService,C.coreService,C._dirtyRowService,C._logService,C.optionsService,C.coreMouseService,C.unicodeService),C.register((0,Q.forwardEvent)(C._inputHandler.onLineFeed,C._onLineFeed)),C.register(C._inputHandler),C.register((0,Q.forwardEvent)(C._bufferService.onResize,C._onResize)),C.register((0,Q.forwardEvent)(C.coreService.onData,C._onData)),C.register((0,Q.forwardEvent)(C.coreService.onBinary,C._onBinary)),C.register(C.optionsService.onOptionChange(function(D){return C._updateOptions(D)})),C.register(C._bufferService.onScroll(function(D){C._onScroll.fire({position:C._bufferService.buffer.ydisp,source:0}),C._dirtyRowService.markRangeDirty(C._bufferService.buffer.scrollTop,C._bufferService.buffer.scrollBottom)})),C.register(C._inputHandler.onScroll(function(D){C._onScroll.fire({position:C._bufferService.buffer.ydisp,source:0}),C._dirtyRowService.markRangeDirty(C._bufferService.buffer.scrollTop,C._bufferService.buffer.scrollBottom)})),C._writeBuffer=new k.WriteBuffer(function(D,p){return C._inputHandler.parse(D,p)}),C.register((0,Q.forwardEvent)(C._writeBuffer.onWriteParsed,C._onWriteParsed)),C}return Z(T,h),Object.defineProperty(T.prototype,"onBinary",{get:function(){return this._onBinary.event},enumerable:!1,configurable:!0}),Object.defineProperty(T.prototype,"onData",{get:function(){return this._onData.event},enumerable:!1,configurable:!0}),Object.defineProperty(T.prototype,"onLineFeed",{get:function(){return this._onLineFeed.event},enumerable:!1,configurable:!0}),Object.defineProperty(T.prototype,"onResize",{get:function(){return this._onResize.event},enumerable:!1,configurable:!0}),Object.defineProperty(T.prototype,"onWriteParsed",{get:function(){return this._onWriteParsed.event},enumerable:!1,configurable:!0}),Object.defineProperty(T.prototype,"onScroll",{get:function(){var s=this;return this._onScrollApi||(this._onScrollApi=new Q.EventEmitter,this.register(this._onScroll.event(function(C){var D;(D=s._onScrollApi)===null||D===void 0||D.fire(C.position)}))),this._onScrollApi.event},enumerable:!1,configurable:!0}),Object.defineProperty(T.prototype,"cols",{get:function(){return this._bufferService.cols},enumerable:!1,configurable:!0}),Object.defineProperty(T.prototype,"rows",{get:function(){return this._bufferService.rows},enumerable:!1,configurable:!0}),Object.defineProperty(T.prototype,"buffers",{get:function(){return this._bufferService.buffers},enumerable:!1,configurable:!0}),Object.defineProperty(T.prototype,"options",{get:function(){return this.optionsService.options},set:function(s){for(var C in s)this.optionsService.options[C]=s[C]},enumerable:!1,configurable:!0}),T.prototype.dispose=function(){var s;this._isDisposed||(h.prototype.dispose.call(this),(s=this._windowsMode)===null||s===void 0||s.dispose(),this._windowsMode=void 0)},T.prototype.write=function(s,C){this._writeBuffer.write(s,C)},T.prototype.writeSync=function(s,C){this._logService.logLevel<=r.LogLevelEnum.WARN&&!i&&(this._logService.warn("writeSync is unreliable and will be removed soon."),i=!0),this._writeBuffer.writeSync(s,C)},T.prototype.resize=function(s,C){isNaN(s)||isNaN(C)||(s=Math.max(s,l.MINIMUM_COLS),C=Math.max(C,l.MINIMUM_ROWS),this._bufferService.resize(s,C))},T.prototype.scroll=function(s,C){C===void 0&&(C=!1),this._bufferService.scroll(s,C)},T.prototype.scrollLines=function(s,C,D){this._bufferService.scrollLines(s,C,D)},T.prototype.scrollPages=function(s){this._bufferService.scrollPages(s)},T.prototype.scrollToTop=function(){this._bufferService.scrollToTop()},T.prototype.scrollToBottom=function(){this._bufferService.scrollToBottom()},T.prototype.scrollToLine=function(s){this._bufferService.scrollToLine(s)},T.prototype.registerEscHandler=function(s,C){return this._inputHandler.registerEscHandler(s,C)},T.prototype.registerDcsHandler=function(s,C){return this._inputHandler.registerDcsHandler(s,C)},T.prototype.registerCsiHandler=function(s,C){return this._inputHandler.registerCsiHandler(s,C)},T.prototype.registerOscHandler=function(s,C){return this._inputHandler.registerOscHandler(s,C)},T.prototype._setup=function(){this.optionsService.rawOptions.windowsMode&&this._enableWindowsMode()},T.prototype.reset=function(){this._inputHandler.reset(),this._bufferService.reset(),this._charsetService.reset(),this.coreService.reset(),this.coreMouseService.reset()},T.prototype._updateOptions=function(s){var C;switch(s){case"scrollback":this.buffers.resize(this.cols,this.rows);break;case"windowsMode":this.optionsService.rawOptions.windowsMode?this._enableWindowsMode():((C=this._windowsMode)===null||C===void 0||C.dispose(),this._windowsMode=void 0)}},T.prototype._enableWindowsMode=function(){var s=this;if(!this._windowsMode){var C=[];C.push(this.onLineFeed(J.updateWindowsModeWrappedState.bind(null,this._bufferService))),C.push(this.registerCsiHandler({final:"H"},function(){return(0,J.updateWindowsModeWrappedState)(s._bufferService),!1})),this._windowsMode={dispose:function(){var D,p;try{for(var c=e(C),m=c.next();!m.done;m=c.next())m.value.dispose()}catch(v){D={error:v}}finally{try{m&&!m.done&&(p=c.return)&&p.call(c)}finally{if(D)throw D.error}}}}}},T}(S.Disposable);n.CoreTerminal=a},8460:(x,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.forwardEvent=n.EventEmitter=void 0;var o=function(){function t(){this._listeners=[],this._disposed=!1}return Object.defineProperty(t.prototype,"event",{get:function(){var Z=this;return this._event||(this._event=function(e){return Z._listeners.push(e),{dispose:function(){if(!Z._disposed){for(var S=0;S<Z._listeners.length;S++)if(Z._listeners[S]===e)return void Z._listeners.splice(S,1)}}}}),this._event},enumerable:!1,configurable:!0}),t.prototype.fire=function(Z,e){for(var S=[],r=0;r<this._listeners.length;r++)S.push(this._listeners[r]);for(r=0;r<S.length;r++)S[r].call(void 0,Z,e)},t.prototype.dispose=function(){this._listeners&&(this._listeners.length=0),this._disposed=!0},t}();n.EventEmitter=o,n.forwardEvent=function(t,Z){return t(function(e){return Z.fire(e)})}},5435:function(x,n,o){var t,Z=this&&this.__extends||(t=function(C,D){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(p,c){p.__proto__=c}||function(p,c){for(var m in c)Object.prototype.hasOwnProperty.call(c,m)&&(p[m]=c[m])},t(C,D)},function(C,D){if(typeof D!="function"&&D!==null)throw new TypeError("Class extends value "+String(D)+" is not a constructor or null");function p(){this.constructor=C}t(C,D),C.prototype=D===null?Object.create(D):(p.prototype=D.prototype,new p)});Object.defineProperty(n,"__esModule",{value:!0}),n.InputHandler=n.WindowsOptionsReportType=void 0;var e,S=o(2584),r=o(7116),E=o(2015),d=o(844),l=o(8273),N=o(482),W=o(8437),Q=o(8460),U=o(643),F=o(511),B=o(3734),R=o(2585),J=o(6242),V=o(6351),k=o(5941),i={"(":0,")":1,"*":2,"+":3,"-":1,".":2},a=131072;function h(C,D){if(C>24)return D.setWinLines||!1;switch(C){case 1:return!!D.restoreWin;case 2:return!!D.minimizeWin;case 3:return!!D.setWinPosition;case 4:return!!D.setWinSizePixels;case 5:return!!D.raiseWin;case 6:return!!D.lowerWin;case 7:return!!D.refreshWin;case 8:return!!D.setWinSizeChars;case 9:return!!D.maximizeWin;case 10:return!!D.fullscreenWin;case 11:return!!D.getWinState;case 13:return!!D.getWinPosition;case 14:return!!D.getWinSizePixels;case 15:return!!D.getScreenSizePixels;case 16:return!!D.getCellSizePixels;case 18:return!!D.getWinSizeChars;case 19:return!!D.getScreenSizeChars;case 20:return!!D.getIconTitle;case 21:return!!D.getWinTitle;case 22:return!!D.pushTitle;case 23:return!!D.popTitle;case 24:return!!D.setWinLines}return!1}(function(C){C[C.GET_WIN_SIZE_PIXELS=0]="GET_WIN_SIZE_PIXELS",C[C.GET_CELL_SIZE_PIXELS=1]="GET_CELL_SIZE_PIXELS"})(e=n.WindowsOptionsReportType||(n.WindowsOptionsReportType={}));var T=function(){function C(D,p,c,m){this._bufferService=D,this._coreService=p,this._logService=c,this._optionsService=m,this._data=new Uint32Array(0)}return C.prototype.hook=function(D){this._data=new Uint32Array(0)},C.prototype.put=function(D,p,c){this._data=(0,l.concat)(this._data,D.subarray(p,c))},C.prototype.unhook=function(D){if(!D)return this._data=new Uint32Array(0),!0;var p=(0,N.utf32ToString)(this._data);switch(this._data=new Uint32Array(0),p){case'"q':this._coreService.triggerDataEvent(S.C0.ESC+'P1$r0"q'+S.C0.ESC+"\\");break;case'"p':this._coreService.triggerDataEvent(S.C0.ESC+'P1$r61;1"p'+S.C0.ESC+"\\");break;case"r":var c=this._bufferService.buffer.scrollTop+1+";"+(this._bufferService.buffer.scrollBottom+1)+"r";this._coreService.triggerDataEvent(S.C0.ESC+"P1$r"+c+S.C0.ESC+"\\");break;case"m":this._coreService.triggerDataEvent(S.C0.ESC+"P1$r0m"+S.C0.ESC+"\\");break;case" q":var m={block:2,underline:4,bar:6}[this._optionsService.rawOptions.cursorStyle];m-=this._optionsService.rawOptions.cursorBlink?1:0,this._coreService.triggerDataEvent(S.C0.ESC+"P1$r"+m+" q"+S.C0.ESC+"\\");break;default:this._logService.debug("Unknown DCS $q %s",p),this._coreService.triggerDataEvent(S.C0.ESC+"P0$r"+S.C0.ESC+"\\")}return!0},C}(),s=function(C){function D(p,c,m,v,z,f,H,j,w){w===void 0&&(w=new E.EscapeSequenceParser);var M=C.call(this)||this;M._bufferService=p,M._charsetService=c,M._coreService=m,M._dirtyRowService=v,M._logService=z,M._optionsService=f,M._coreMouseService=H,M._unicodeService=j,M._parser=w,M._parseBuffer=new Uint32Array(4096),M._stringDecoder=new N.StringToUtf32,M._utf8Decoder=new N.Utf8ToUtf32,M._workCell=new F.CellData,M._windowTitle="",M._iconName="",M._windowTitleStack=[],M._iconNameStack=[],M._curAttrData=W.DEFAULT_ATTR_DATA.clone(),M._eraseAttrDataInternal=W.DEFAULT_ATTR_DATA.clone(),M._onRequestBell=new Q.EventEmitter,M._onRequestRefreshRows=new Q.EventEmitter,M._onRequestReset=new Q.EventEmitter,M._onRequestSendFocus=new Q.EventEmitter,M._onRequestSyncScrollBar=new Q.EventEmitter,M._onRequestWindowsOptionsReport=new Q.EventEmitter,M._onA11yChar=new Q.EventEmitter,M._onA11yTab=new Q.EventEmitter,M._onCursorMove=new Q.EventEmitter,M._onLineFeed=new Q.EventEmitter,M._onScroll=new Q.EventEmitter,M._onTitleChange=new Q.EventEmitter,M._onColor=new Q.EventEmitter,M._parseStack={paused:!1,cursorStartX:0,cursorStartY:0,decodedLength:0,position:0},M._specialColors=[256,257,258],M.register(M._parser),M._activeBuffer=M._bufferService.buffer,M.register(M._bufferService.buffers.onBufferActivate(function(X){return M._activeBuffer=X.activeBuffer})),M._parser.setCsiHandlerFallback(function(X,$){M._logService.debug("Unknown CSI code: ",{identifier:M._parser.identToString(X),params:$.toArray()})}),M._parser.setEscHandlerFallback(function(X){M._logService.debug("Unknown ESC code: ",{identifier:M._parser.identToString(X)})}),M._parser.setExecuteHandlerFallback(function(X){M._logService.debug("Unknown EXECUTE code: ",{code:X})}),M._parser.setOscHandlerFallback(function(X,$,K){M._logService.debug("Unknown OSC code: ",{identifier:X,action:$,data:K})}),M._parser.setDcsHandlerFallback(function(X,$,K){$==="HOOK"&&(K=K.toArray()),M._logService.debug("Unknown DCS code: ",{identifier:M._parser.identToString(X),action:$,payload:K})}),M._parser.setPrintHandler(function(X,$,K){return M.print(X,$,K)}),M._parser.registerCsiHandler({final:"@"},function(X){return M.insertChars(X)}),M._parser.registerCsiHandler({intermediates:" ",final:"@"},function(X){return M.scrollLeft(X)}),M._parser.registerCsiHandler({final:"A"},function(X){return M.cursorUp(X)}),M._parser.registerCsiHandler({intermediates:" ",final:"A"},function(X){return M.scrollRight(X)}),M._parser.registerCsiHandler({final:"B"},function(X){return M.cursorDown(X)}),M._parser.registerCsiHandler({final:"C"},function(X){return M.cursorForward(X)}),M._parser.registerCsiHandler({final:"D"},function(X){return M.cursorBackward(X)}),M._parser.registerCsiHandler({final:"E"},function(X){return M.cursorNextLine(X)}),M._parser.registerCsiHandler({final:"F"},function(X){return M.cursorPrecedingLine(X)}),M._parser.registerCsiHandler({final:"G"},function(X){return M.cursorCharAbsolute(X)}),M._parser.registerCsiHandler({final:"H"},function(X){return M.cursorPosition(X)}),M._parser.registerCsiHandler({final:"I"},function(X){return M.cursorForwardTab(X)}),M._parser.registerCsiHandler({final:"J"},function(X){return M.eraseInDisplay(X)}),M._parser.registerCsiHandler({prefix:"?",final:"J"},function(X){return M.eraseInDisplay(X)}),M._parser.registerCsiHandler({final:"K"},function(X){return M.eraseInLine(X)}),M._parser.registerCsiHandler({prefix:"?",final:"K"},function(X){return M.eraseInLine(X)}),M._parser.registerCsiHandler({final:"L"},function(X){return M.insertLines(X)}),M._parser.registerCsiHandler({final:"M"},function(X){return M.deleteLines(X)}),M._parser.registerCsiHandler({final:"P"},function(X){return M.deleteChars(X)}),M._parser.registerCsiHandler({final:"S"},function(X){return M.scrollUp(X)}),M._parser.registerCsiHandler({final:"T"},function(X){return M.scrollDown(X)}),M._parser.registerCsiHandler({final:"X"},function(X){return M.eraseChars(X)}),M._parser.registerCsiHandler({final:"Z"},function(X){return M.cursorBackwardTab(X)}),M._parser.registerCsiHandler({final:"`"},function(X){return M.charPosAbsolute(X)}),M._parser.registerCsiHandler({final:"a"},function(X){return M.hPositionRelative(X)}),M._parser.registerCsiHandler({final:"b"},function(X){return M.repeatPrecedingCharacter(X)}),M._parser.registerCsiHandler({final:"c"},function(X){return M.sendDeviceAttributesPrimary(X)}),M._parser.registerCsiHandler({prefix:">",final:"c"},function(X){return M.sendDeviceAttributesSecondary(X)}),M._parser.registerCsiHandler({final:"d"},function(X){return M.linePosAbsolute(X)}),M._parser.registerCsiHandler({final:"e"},function(X){return M.vPositionRelative(X)}),M._parser.registerCsiHandler({final:"f"},function(X){return M.hVPosition(X)}),M._parser.registerCsiHandler({final:"g"},function(X){return M.tabClear(X)}),M._parser.registerCsiHandler({final:"h"},function(X){return M.setMode(X)}),M._parser.registerCsiHandler({prefix:"?",final:"h"},function(X){return M.setModePrivate(X)}),M._parser.registerCsiHandler({final:"l"},function(X){return M.resetMode(X)}),M._parser.registerCsiHandler({prefix:"?",final:"l"},function(X){return M.resetModePrivate(X)}),M._parser.registerCsiHandler({final:"m"},function(X){return M.charAttributes(X)}),M._parser.registerCsiHandler({final:"n"},function(X){return M.deviceStatus(X)}),M._parser.registerCsiHandler({prefix:"?",final:"n"},function(X){return M.deviceStatusPrivate(X)}),M._parser.registerCsiHandler({intermediates:"!",final:"p"},function(X){return M.softReset(X)}),M._parser.registerCsiHandler({intermediates:" ",final:"q"},function(X){return M.setCursorStyle(X)}),M._parser.registerCsiHandler({final:"r"},function(X){return M.setScrollRegion(X)}),M._parser.registerCsiHandler({final:"s"},function(X){return M.saveCursor(X)}),M._parser.registerCsiHandler({final:"t"},function(X){return M.windowOptions(X)}),M._parser.registerCsiHandler({final:"u"},function(X){return M.restoreCursor(X)}),M._parser.registerCsiHandler({intermediates:"'",final:"}"},function(X){return M.insertColumns(X)}),M._parser.registerCsiHandler({intermediates:"'",final:"~"},function(X){return M.deleteColumns(X)}),M._parser.setExecuteHandler(S.C0.BEL,function(){return M.bell()}),M._parser.setExecuteHandler(S.C0.LF,function(){return M.lineFeed()}),M._parser.setExecuteHandler(S.C0.VT,function(){return M.lineFeed()}),M._parser.setExecuteHandler(S.C0.FF,function(){return M.lineFeed()}),M._parser.setExecuteHandler(S.C0.CR,function(){return M.carriageReturn()}),M._parser.setExecuteHandler(S.C0.BS,function(){return M.backspace()}),M._parser.setExecuteHandler(S.C0.HT,function(){return M.tab()}),M._parser.setExecuteHandler(S.C0.SO,function(){return M.shiftOut()}),M._parser.setExecuteHandler(S.C0.SI,function(){return M.shiftIn()}),M._parser.setExecuteHandler(S.C1.IND,function(){return M.index()}),M._parser.setExecuteHandler(S.C1.NEL,function(){return M.nextLine()}),M._parser.setExecuteHandler(S.C1.HTS,function(){return M.tabSet()}),M._parser.registerOscHandler(0,new J.OscHandler(function(X){return M.setTitle(X),M.setIconName(X),!0})),M._parser.registerOscHandler(1,new J.OscHandler(function(X){return M.setIconName(X)})),M._parser.registerOscHandler(2,new J.OscHandler(function(X){return M.setTitle(X)})),M._parser.registerOscHandler(4,new J.OscHandler(function(X){return M.setOrReportIndexedColor(X)})),M._parser.registerOscHandler(10,new J.OscHandler(function(X){return M.setOrReportFgColor(X)})),M._parser.registerOscHandler(11,new J.OscHandler(function(X){return M.setOrReportBgColor(X)})),M._parser.registerOscHandler(12,new J.OscHandler(function(X){return M.setOrReportCursorColor(X)})),M._parser.registerOscHandler(104,new J.OscHandler(function(X){return M.restoreIndexedColor(X)})),M._parser.registerOscHandler(110,new J.OscHandler(function(X){return M.restoreFgColor(X)})),M._parser.registerOscHandler(111,new J.OscHandler(function(X){return M.restoreBgColor(X)})),M._parser.registerOscHandler(112,new J.OscHandler(function(X){return M.restoreCursorColor(X)})),M._parser.registerEscHandler({final:"7"},function(){return M.saveCursor()}),M._parser.registerEscHandler({final:"8"},function(){return M.restoreCursor()}),M._parser.registerEscHandler({final:"D"},function(){return M.index()}),M._parser.registerEscHandler({final:"E"},function(){return M.nextLine()}),M._parser.registerEscHandler({final:"H"},function(){return M.tabSet()}),M._parser.registerEscHandler({final:"M"},function(){return M.reverseIndex()}),M._parser.registerEscHandler({final:"="},function(){return M.keypadApplicationMode()}),M._parser.registerEscHandler({final:">"},function(){return M.keypadNumericMode()}),M._parser.registerEscHandler({final:"c"},function(){return M.fullReset()}),M._parser.registerEscHandler({final:"n"},function(){return M.setgLevel(2)}),M._parser.registerEscHandler({final:"o"},function(){return M.setgLevel(3)}),M._parser.registerEscHandler({final:"|"},function(){return M.setgLevel(3)}),M._parser.registerEscHandler({final:"}"},function(){return M.setgLevel(2)}),M._parser.registerEscHandler({final:"~"},function(){return M.setgLevel(1)}),M._parser.registerEscHandler({intermediates:"%",final:"@"},function(){return M.selectDefaultCharset()}),M._parser.registerEscHandler({intermediates:"%",final:"G"},function(){return M.selectDefaultCharset()});var P=function(X){g._parser.registerEscHandler({intermediates:"(",final:X},function(){return M.selectCharset("("+X)}),g._parser.registerEscHandler({intermediates:")",final:X},function(){return M.selectCharset(")"+X)}),g._parser.registerEscHandler({intermediates:"*",final:X},function(){return M.selectCharset("*"+X)}),g._parser.registerEscHandler({intermediates:"+",final:X},function(){return M.selectCharset("+"+X)}),g._parser.registerEscHandler({intermediates:"-",final:X},function(){return M.selectCharset("-"+X)}),g._parser.registerEscHandler({intermediates:".",final:X},function(){return M.selectCharset("."+X)}),g._parser.registerEscHandler({intermediates:"/",final:X},function(){return M.selectCharset("/"+X)})},g=this;for(var UU in r.CHARSETS)P(UU);return M._parser.registerEscHandler({intermediates:"#",final:"8"},function(){return M.screenAlignmentPattern()}),M._parser.setErrorHandler(function(X){return M._logService.error("Parsing error: ",X),X}),M._parser.registerDcsHandler({intermediates:"$",final:"q"},new T(M._bufferService,M._coreService,M._logService,M._optionsService)),M}return Z(D,C),Object.defineProperty(D.prototype,"onRequestBell",{get:function(){return this._onRequestBell.event},enumerable:!1,configurable:!0}),Object.defineProperty(D.prototype,"onRequestRefreshRows",{get:function(){return this._onRequestRefreshRows.event},enumerable:!1,configurable:!0}),Object.defineProperty(D.prototype,"onRequestReset",{get:function(){return this._onRequestReset.event},enumerable:!1,configurable:!0}),Object.defineProperty(D.prototype,"onRequestSendFocus",{get:function(){return this._onRequestSendFocus.event},enumerable:!1,configurable:!0}),Object.defineProperty(D.prototype,"onRequestSyncScrollBar",{get:function(){return this._onRequestSyncScrollBar.event},enumerable:!1,configurable:!0}),Object.defineProperty(D.prototype,"onRequestWindowsOptionsReport",{get:function(){return this._onRequestWindowsOptionsReport.event},enumerable:!1,configurable:!0}),Object.defineProperty(D.prototype,"onA11yChar",{get:function(){return this._onA11yChar.event},enumerable:!1,configurable:!0}),Object.defineProperty(D.prototype,"onA11yTab",{get:function(){return this._onA11yTab.event},enumerable:!1,configurable:!0}),Object.defineProperty(D.prototype,"onCursorMove",{get:function(){return this._onCursorMove.event},enumerable:!1,configurable:!0}),Object.defineProperty(D.prototype,"onLineFeed",{get:function(){return this._onLineFeed.event},enumerable:!1,configurable:!0}),Object.defineProperty(D.prototype,"onScroll",{get:function(){return this._onScroll.event},enumerable:!1,configurable:!0}),Object.defineProperty(D.prototype,"onTitleChange",{get:function(){return this._onTitleChange.event},enumerable:!1,configurable:!0}),Object.defineProperty(D.prototype,"onColor",{get:function(){return this._onColor.event},enumerable:!1,configurable:!0}),D.prototype.dispose=function(){C.prototype.dispose.call(this)},D.prototype._preserveStack=function(p,c,m,v){this._parseStack.paused=!0,this._parseStack.cursorStartX=p,this._parseStack.cursorStartY=c,this._parseStack.decodedLength=m,this._parseStack.position=v},D.prototype._logSlowResolvingAsync=function(p){this._logService.logLevel<=R.LogLevelEnum.WARN&&Promise.race([p,new Promise(function(c,m){return setTimeout(function(){return m("#SLOW_TIMEOUT")},5e3)})]).catch(function(c){if(c!=="#SLOW_TIMEOUT")throw c;console.warn("async parser handler taking longer than 5000 ms")})},D.prototype.parse=function(p,c){var m,v=this._activeBuffer.x,z=this._activeBuffer.y,f=0,H=this._parseStack.paused;if(H){if(m=this._parser.parse(this._parseBuffer,this._parseStack.decodedLength,c))return this._logSlowResolvingAsync(m),m;v=this._parseStack.cursorStartX,z=this._parseStack.cursorStartY,this._parseStack.paused=!1,p.length>a&&(f=this._parseStack.position+a)}if(this._logService.logLevel<=R.LogLevelEnum.DEBUG&&this._logService.debug("parsing data"+(typeof p=="string"?' "'+p+'"':' "'+Array.prototype.map.call(p,function(P){return String.fromCharCode(P)}).join("")+'"'),typeof p=="string"?p.split("").map(function(P){return P.charCodeAt(0)}):p),this._parseBuffer.length<p.length&&this._parseBuffer.length<a&&(this._parseBuffer=new Uint32Array(Math.min(p.length,a))),H||this._dirtyRowService.clearRange(),p.length>a)for(var j=f;j<p.length;j+=a){var w=j+a<p.length?j+a:p.length,M=typeof p=="string"?this._stringDecoder.decode(p.substring(j,w),this._parseBuffer):this._utf8Decoder.decode(p.subarray(j,w),this._parseBuffer);if(m=this._parser.parse(this._parseBuffer,M))return this._preserveStack(v,z,M,j),this._logSlowResolvingAsync(m),m}else if(!H&&(M=typeof p=="string"?this._stringDecoder.decode(p,this._parseBuffer):this._utf8Decoder.decode(p,this._parseBuffer),m=this._parser.parse(this._parseBuffer,M)))return this._preserveStack(v,z,M,0),this._logSlowResolvingAsync(m),m;this._activeBuffer.x===v&&this._activeBuffer.y===z||this._onCursorMove.fire(),this._onRequestRefreshRows.fire(this._dirtyRowService.start,this._dirtyRowService.end)},D.prototype.print=function(p,c,m){var v,z,f=this._charsetService.charset,H=this._optionsService.rawOptions.screenReaderMode,j=this._bufferService.cols,w=this._coreService.decPrivateModes.wraparound,M=this._coreService.modes.insertMode,P=this._curAttrData,g=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y);this._dirtyRowService.markDirty(this._activeBuffer.y),this._activeBuffer.x&&m-c>0&&g.getWidth(this._activeBuffer.x-1)===2&&g.setCellFromCodePoint(this._activeBuffer.x-1,0,1,P.fg,P.bg,P.extended);for(var UU=c;UU<m;++UU){if(v=p[UU],z=this._unicodeService.wcwidth(v),v<127&&f){var X=f[String.fromCharCode(v)];X&&(v=X.charCodeAt(0))}if(H&&this._onA11yChar.fire((0,N.stringFromCodePoint)(v)),z||!this._activeBuffer.x){if(this._activeBuffer.x+z-1>=j){if(w){for(;this._activeBuffer.x<j;)g.setCellFromCodePoint(this._activeBuffer.x++,0,1,P.fg,P.bg,P.extended);this._activeBuffer.x=0,this._activeBuffer.y++,this._activeBuffer.y===this._activeBuffer.scrollBottom+1?(this._activeBuffer.y--,this._bufferService.scroll(this._eraseAttrData(),!0)):(this._activeBuffer.y>=this._bufferService.rows&&(this._activeBuffer.y=this._bufferService.rows-1),this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y).isWrapped=!0),g=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y)}else if(this._activeBuffer.x=j-1,z===2)continue}if(M&&(g.insertCells(this._activeBuffer.x,z,this._activeBuffer.getNullCell(P),P),g.getWidth(j-1)===2&&g.setCellFromCodePoint(j-1,U.NULL_CELL_CODE,U.NULL_CELL_WIDTH,P.fg,P.bg,P.extended)),g.setCellFromCodePoint(this._activeBuffer.x++,v,z,P.fg,P.bg,P.extended),z>0)for(;--z;)g.setCellFromCodePoint(this._activeBuffer.x++,0,0,P.fg,P.bg,P.extended)}else g.getWidth(this._activeBuffer.x-1)?g.addCodepointToCell(this._activeBuffer.x-1,v):g.addCodepointToCell(this._activeBuffer.x-2,v)}m-c>0&&(g.loadCell(this._activeBuffer.x-1,this._workCell),this._workCell.getWidth()===2||this._workCell.getCode()>65535?this._parser.precedingCodepoint=0:this._workCell.isCombined()?this._parser.precedingCodepoint=this._workCell.getChars().charCodeAt(0):this._parser.precedingCodepoint=this._workCell.content),this._activeBuffer.x<j&&m-c>0&&g.getWidth(this._activeBuffer.x)===0&&!g.hasContent(this._activeBuffer.x)&&g.setCellFromCodePoint(this._activeBuffer.x,0,1,P.fg,P.bg,P.extended),this._dirtyRowService.markDirty(this._activeBuffer.y)},D.prototype.registerCsiHandler=function(p,c){var m=this;return p.final!=="t"||p.prefix||p.intermediates?this._parser.registerCsiHandler(p,c):this._parser.registerCsiHandler(p,function(v){return!h(v.params[0],m._optionsService.rawOptions.windowOptions)||c(v)})},D.prototype.registerDcsHandler=function(p,c){return this._parser.registerDcsHandler(p,new V.DcsHandler(c))},D.prototype.registerEscHandler=function(p,c){return this._parser.registerEscHandler(p,c)},D.prototype.registerOscHandler=function(p,c){return this._parser.registerOscHandler(p,new J.OscHandler(c))},D.prototype.bell=function(){return this._onRequestBell.fire(),!0},D.prototype.lineFeed=function(){return this._dirtyRowService.markDirty(this._activeBuffer.y),this._optionsService.rawOptions.convertEol&&(this._activeBuffer.x=0),this._activeBuffer.y++,this._activeBuffer.y===this._activeBuffer.scrollBottom+1?(this._activeBuffer.y--,this._bufferService.scroll(this._eraseAttrData())):this._activeBuffer.y>=this._bufferService.rows&&(this._activeBuffer.y=this._bufferService.rows-1),this._activeBuffer.x>=this._bufferService.cols&&this._activeBuffer.x--,this._dirtyRowService.markDirty(this._activeBuffer.y),this._onLineFeed.fire(),!0},D.prototype.carriageReturn=function(){return this._activeBuffer.x=0,!0},D.prototype.backspace=function(){var p;if(!this._coreService.decPrivateModes.reverseWraparound)return this._restrictCursor(),this._activeBuffer.x>0&&this._activeBuffer.x--,!0;if(this._restrictCursor(this._bufferService.cols),this._activeBuffer.x>0)this._activeBuffer.x--;else if(this._activeBuffer.x===0&&this._activeBuffer.y>this._activeBuffer.scrollTop&&this._activeBuffer.y<=this._activeBuffer.scrollBottom&&((p=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y))===null||p===void 0?void 0:p.isWrapped)){this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y).isWrapped=!1,this._activeBuffer.y--,this._activeBuffer.x=this._bufferService.cols-1;var c=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y);c.hasWidth(this._activeBuffer.x)&&!c.hasContent(this._activeBuffer.x)&&this._activeBuffer.x--}return this._restrictCursor(),!0},D.prototype.tab=function(){if(this._activeBuffer.x>=this._bufferService.cols)return!0;var p=this._activeBuffer.x;return this._activeBuffer.x=this._activeBuffer.nextStop(),this._optionsService.rawOptions.screenReaderMode&&this._onA11yTab.fire(this._activeBuffer.x-p),!0},D.prototype.shiftOut=function(){return this._charsetService.setgLevel(1),!0},D.prototype.shiftIn=function(){return this._charsetService.setgLevel(0),!0},D.prototype._restrictCursor=function(p){p===void 0&&(p=this._bufferService.cols-1),this._activeBuffer.x=Math.min(p,Math.max(0,this._activeBuffer.x)),this._activeBuffer.y=this._coreService.decPrivateModes.origin?Math.min(this._activeBuffer.scrollBottom,Math.max(this._activeBuffer.scrollTop,this._activeBuffer.y)):Math.min(this._bufferService.rows-1,Math.max(0,this._activeBuffer.y)),this._dirtyRowService.markDirty(this._activeBuffer.y)},D.prototype._setCursor=function(p,c){this._dirtyRowService.markDirty(this._activeBuffer.y),this._coreService.decPrivateModes.origin?(this._activeBuffer.x=p,this._activeBuffer.y=this._activeBuffer.scrollTop+c):(this._activeBuffer.x=p,this._activeBuffer.y=c),this._restrictCursor(),this._dirtyRowService.markDirty(this._activeBuffer.y)},D.prototype._moveCursor=function(p,c){this._restrictCursor(),this._setCursor(this._activeBuffer.x+p,this._activeBuffer.y+c)},D.prototype.cursorUp=function(p){var c=this._activeBuffer.y-this._activeBuffer.scrollTop;return c>=0?this._moveCursor(0,-Math.min(c,p.params[0]||1)):this._moveCursor(0,-(p.params[0]||1)),!0},D.prototype.cursorDown=function(p){var c=this._activeBuffer.scrollBottom-this._activeBuffer.y;return c>=0?this._moveCursor(0,Math.min(c,p.params[0]||1)):this._moveCursor(0,p.params[0]||1),!0},D.prototype.cursorForward=function(p){return this._moveCursor(p.params[0]||1,0),!0},D.prototype.cursorBackward=function(p){return this._moveCursor(-(p.params[0]||1),0),!0},D.prototype.cursorNextLine=function(p){return this.cursorDown(p),this._activeBuffer.x=0,!0},D.prototype.cursorPrecedingLine=function(p){return this.cursorUp(p),this._activeBuffer.x=0,!0},D.prototype.cursorCharAbsolute=function(p){return this._setCursor((p.params[0]||1)-1,this._activeBuffer.y),!0},D.prototype.cursorPosition=function(p){return this._setCursor(p.length>=2?(p.params[1]||1)-1:0,(p.params[0]||1)-1),!0},D.prototype.charPosAbsolute=function(p){return this._setCursor((p.params[0]||1)-1,this._activeBuffer.y),!0},D.prototype.hPositionRelative=function(p){return this._moveCursor(p.params[0]||1,0),!0},D.prototype.linePosAbsolute=function(p){return this._setCursor(this._activeBuffer.x,(p.params[0]||1)-1),!0},D.prototype.vPositionRelative=function(p){return this._moveCursor(0,p.params[0]||1),!0},D.prototype.hVPosition=function(p){return this.cursorPosition(p),!0},D.prototype.tabClear=function(p){var c=p.params[0];return c===0?delete this._activeBuffer.tabs[this._activeBuffer.x]:c===3&&(this._activeBuffer.tabs={}),!0},D.prototype.cursorForwardTab=function(p){if(this._activeBuffer.x>=this._bufferService.cols)return!0;for(var c=p.params[0]||1;c--;)this._activeBuffer.x=this._activeBuffer.nextStop();return!0},D.prototype.cursorBackwardTab=function(p){if(this._activeBuffer.x>=this._bufferService.cols)return!0;for(var c=p.params[0]||1;c--;)this._activeBuffer.x=this._activeBuffer.prevStop();return!0},D.prototype._eraseInBufferLine=function(p,c,m,v){v===void 0&&(v=!1);var z=this._activeBuffer.lines.get(this._activeBuffer.ybase+p);z.replaceCells(c,m,this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData()),v&&(z.isWrapped=!1)},D.prototype._resetBufferLine=function(p){var c=this._activeBuffer.lines.get(this._activeBuffer.ybase+p);c.fill(this._activeBuffer.getNullCell(this._eraseAttrData())),this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase+p),c.isWrapped=!1},D.prototype.eraseInDisplay=function(p){var c;switch(this._restrictCursor(this._bufferService.cols),p.params[0]){case 0:for(c=this._activeBuffer.y,this._dirtyRowService.markDirty(c),this._eraseInBufferLine(c++,this._activeBuffer.x,this._bufferService.cols,this._activeBuffer.x===0);c<this._bufferService.rows;c++)this._resetBufferLine(c);this._dirtyRowService.markDirty(c);break;case 1:for(c=this._activeBuffer.y,this._dirtyRowService.markDirty(c),this._eraseInBufferLine(c,0,this._activeBuffer.x+1,!0),this._activeBuffer.x+1>=this._bufferService.cols&&(this._activeBuffer.lines.get(c+1).isWrapped=!1);c--;)this._resetBufferLine(c);this._dirtyRowService.markDirty(0);break;case 2:for(c=this._bufferService.rows,this._dirtyRowService.markDirty(c-1);c--;)this._resetBufferLine(c);this._dirtyRowService.markDirty(0);break;case 3:var m=this._activeBuffer.lines.length-this._bufferService.rows;m>0&&(this._activeBuffer.lines.trimStart(m),this._activeBuffer.ybase=Math.max(this._activeBuffer.ybase-m,0),this._activeBuffer.ydisp=Math.max(this._activeBuffer.ydisp-m,0),this._onScroll.fire(0))}return!0},D.prototype.eraseInLine=function(p){switch(this._restrictCursor(this._bufferService.cols),p.params[0]){case 0:this._eraseInBufferLine(this._activeBuffer.y,this._activeBuffer.x,this._bufferService.cols,this._activeBuffer.x===0);break;case 1:this._eraseInBufferLine(this._activeBuffer.y,0,this._activeBuffer.x+1,!1);break;case 2:this._eraseInBufferLine(this._activeBuffer.y,0,this._bufferService.cols,!0)}return this._dirtyRowService.markDirty(this._activeBuffer.y),!0},D.prototype.insertLines=function(p){this._restrictCursor();var c=p.params[0]||1;if(this._activeBuffer.y>this._activeBuffer.scrollBottom||this._activeBuffer.y<this._activeBuffer.scrollTop)return!0;for(var m=this._activeBuffer.ybase+this._activeBuffer.y,v=this._bufferService.rows-1-this._activeBuffer.scrollBottom,z=this._bufferService.rows-1+this._activeBuffer.ybase-v+1;c--;)this._activeBuffer.lines.splice(z-1,1),this._activeBuffer.lines.splice(m,0,this._activeBuffer.getBlankLine(this._eraseAttrData()));return this._dirtyRowService.markRangeDirty(this._activeBuffer.y,this._activeBuffer.scrollBottom),this._activeBuffer.x=0,!0},D.prototype.deleteLines=function(p){this._restrictCursor();var c=p.params[0]||1;if(this._activeBuffer.y>this._activeBuffer.scrollBottom||this._activeBuffer.y<this._activeBuffer.scrollTop)return!0;var m,v=this._activeBuffer.ybase+this._activeBuffer.y;for(m=this._bufferService.rows-1-this._activeBuffer.scrollBottom,m=this._bufferService.rows-1+this._activeBuffer.ybase-m;c--;)this._activeBuffer.lines.splice(v,1),this._activeBuffer.lines.splice(m,0,this._activeBuffer.getBlankLine(this._eraseAttrData()));return this._dirtyRowService.markRangeDirty(this._activeBuffer.y,this._activeBuffer.scrollBottom),this._activeBuffer.x=0,!0},D.prototype.insertChars=function(p){this._restrictCursor();var c=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y);return c&&(c.insertCells(this._activeBuffer.x,p.params[0]||1,this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData()),this._dirtyRowService.markDirty(this._activeBuffer.y)),!0},D.prototype.deleteChars=function(p){this._restrictCursor();var c=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y);return c&&(c.deleteCells(this._activeBuffer.x,p.params[0]||1,this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData()),this._dirtyRowService.markDirty(this._activeBuffer.y)),!0},D.prototype.scrollUp=function(p){for(var c=p.params[0]||1;c--;)this._activeBuffer.lines.splice(this._activeBuffer.ybase+this._activeBuffer.scrollTop,1),this._activeBuffer.lines.splice(this._activeBuffer.ybase+this._activeBuffer.scrollBottom,0,this._activeBuffer.getBlankLine(this._eraseAttrData()));return this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom),!0},D.prototype.scrollDown=function(p){for(var c=p.params[0]||1;c--;)this._activeBuffer.lines.splice(this._activeBuffer.ybase+this._activeBuffer.scrollBottom,1),this._activeBuffer.lines.splice(this._activeBuffer.ybase+this._activeBuffer.scrollTop,0,this._activeBuffer.getBlankLine(W.DEFAULT_ATTR_DATA));return this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom),!0},D.prototype.scrollLeft=function(p){if(this._activeBuffer.y>this._activeBuffer.scrollBottom||this._activeBuffer.y<this._activeBuffer.scrollTop)return!0;for(var c=p.params[0]||1,m=this._activeBuffer.scrollTop;m<=this._activeBuffer.scrollBottom;++m){var v=this._activeBuffer.lines.get(this._activeBuffer.ybase+m);v.deleteCells(0,c,this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData()),v.isWrapped=!1}return this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom),!0},D.prototype.scrollRight=function(p){if(this._activeBuffer.y>this._activeBuffer.scrollBottom||this._activeBuffer.y<this._activeBuffer.scrollTop)return!0;for(var c=p.params[0]||1,m=this._activeBuffer.scrollTop;m<=this._activeBuffer.scrollBottom;++m){var v=this._activeBuffer.lines.get(this._activeBuffer.ybase+m);v.insertCells(0,c,this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData()),v.isWrapped=!1}return this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom),!0},D.prototype.insertColumns=function(p){if(this._activeBuffer.y>this._activeBuffer.scrollBottom||this._activeBuffer.y<this._activeBuffer.scrollTop)return!0;for(var c=p.params[0]||1,m=this._activeBuffer.scrollTop;m<=this._activeBuffer.scrollBottom;++m){var v=this._activeBuffer.lines.get(this._activeBuffer.ybase+m);v.insertCells(this._activeBuffer.x,c,this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData()),v.isWrapped=!1}return this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom),!0},D.prototype.deleteColumns=function(p){if(this._activeBuffer.y>this._activeBuffer.scrollBottom||this._activeBuffer.y<this._activeBuffer.scrollTop)return!0;for(var c=p.params[0]||1,m=this._activeBuffer.scrollTop;m<=this._activeBuffer.scrollBottom;++m){var v=this._activeBuffer.lines.get(this._activeBuffer.ybase+m);v.deleteCells(this._activeBuffer.x,c,this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData()),v.isWrapped=!1}return this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom),!0},D.prototype.eraseChars=function(p){this._restrictCursor();var c=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y);return c&&(c.replaceCells(this._activeBuffer.x,this._activeBuffer.x+(p.params[0]||1),this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData()),this._dirtyRowService.markDirty(this._activeBuffer.y)),!0},D.prototype.repeatPrecedingCharacter=function(p){if(!this._parser.precedingCodepoint)return!0;for(var c=p.params[0]||1,m=new Uint32Array(c),v=0;v<c;++v)m[v]=this._parser.precedingCodepoint;return this.print(m,0,m.length),!0},D.prototype.sendDeviceAttributesPrimary=function(p){return p.params[0]>0||(this._is("xterm")||this._is("rxvt-unicode")||this._is("screen")?this._coreService.triggerDataEvent(S.C0.ESC+"[?1;2c"):this._is("linux")&&this._coreService.triggerDataEvent(S.C0.ESC+"[?6c")),!0},D.prototype.sendDeviceAttributesSecondary=function(p){return p.params[0]>0||(this._is("xterm")?this._coreService.triggerDataEvent(S.C0.ESC+"[>0;276;0c"):this._is("rxvt-unicode")?this._coreService.triggerDataEvent(S.C0.ESC+"[>85;95;0c"):this._is("linux")?this._coreService.triggerDataEvent(p.params[0]+"c"):this._is("screen")&&this._coreService.triggerDataEvent(S.C0.ESC+"[>83;40003;0c")),!0},D.prototype._is=function(p){return(this._optionsService.rawOptions.termName+"").indexOf(p)===0},D.prototype.setMode=function(p){for(var c=0;c<p.length;c++)p.params[c]===4&&(this._coreService.modes.insertMode=!0);return!0},D.prototype.setModePrivate=function(p){for(var c=0;c<p.length;c++)switch(p.params[c]){case 1:this._coreService.decPrivateModes.applicationCursorKeys=!0;break;case 2:this._charsetService.setgCharset(0,r.DEFAULT_CHARSET),this._charsetService.setgCharset(1,r.DEFAULT_CHARSET),this._charsetService.setgCharset(2,r.DEFAULT_CHARSET),this._charsetService.setgCharset(3,r.DEFAULT_CHARSET);break;case 3:this._optionsService.rawOptions.windowOptions.setWinLines&&(this._bufferService.resize(132,this._bufferService.rows),this._onRequestReset.fire());break;case 6:this._coreService.decPrivateModes.origin=!0,this._setCursor(0,0);break;case 7:this._coreService.decPrivateModes.wraparound=!0;break;case 12:break;case 45:this._coreService.decPrivateModes.reverseWraparound=!0;break;case 66:this._logService.debug("Serial port requested application keypad."),this._coreService.decPrivateModes.applicationKeypad=!0,this._onRequestSyncScrollBar.fire();break;case 9:this._coreMouseService.activeProtocol="X10";break;case 1e3:this._coreMouseService.activeProtocol="VT200";break;case 1002:this._coreMouseService.activeProtocol="DRAG";break;case 1003:this._coreMouseService.activeProtocol="ANY";break;case 1004:this._coreService.decPrivateModes.sendFocus=!0,this._onRequestSendFocus.fire();break;case 1005:this._logService.debug("DECSET 1005 not supported (see #2507)");break;case 1006:this._coreMouseService.activeEncoding="SGR";break;case 1015:this._logService.debug("DECSET 1015 not supported (see #2507)");break;case 25:this._coreService.isCursorHidden=!1;break;case 1048:this.saveCursor();break;case 1049:this.saveCursor();case 47:case 1047:this._bufferService.buffers.activateAltBuffer(this._eraseAttrData()),this._coreService.isCursorInitialized=!0,this._onRequestRefreshRows.fire(0,this._bufferService.rows-1),this._onRequestSyncScrollBar.fire();break;case 2004:this._coreService.decPrivateModes.bracketedPasteMode=!0}return!0},D.prototype.resetMode=function(p){for(var c=0;c<p.length;c++)p.params[c]===4&&(this._coreService.modes.insertMode=!1);return!0},D.prototype.resetModePrivate=function(p){for(var c=0;c<p.length;c++)switch(p.params[c]){case 1:this._coreService.decPrivateModes.applicationCursorKeys=!1;break;case 3:this._optionsService.rawOptions.windowOptions.setWinLines&&(this._bufferService.resize(80,this._bufferService.rows),this._onRequestReset.fire());break;case 6:this._coreService.decPrivateModes.origin=!1,this._setCursor(0,0);break;case 7:this._coreService.decPrivateModes.wraparound=!1;break;case 12:break;case 45:this._coreService.decPrivateModes.reverseWraparound=!1;break;case 66:this._logService.debug("Switching back to normal keypad."),this._coreService.decPrivateModes.applicationKeypad=!1,this._onRequestSyncScrollBar.fire();break;case 9:case 1e3:case 1002:case 1003:this._coreMouseService.activeProtocol="NONE";break;case 1004:this._coreService.decPrivateModes.sendFocus=!1;break;case 1005:this._logService.debug("DECRST 1005 not supported (see #2507)");break;case 1006:this._coreMouseService.activeEncoding="DEFAULT";break;case 1015:this._logService.debug("DECRST 1015 not supported (see #2507)");break;case 25:this._coreService.isCursorHidden=!0;break;case 1048:this.restoreCursor();break;case 1049:case 47:case 1047:this._bufferService.buffers.activateNormalBuffer(),p.params[c]===1049&&this.restoreCursor(),this._coreService.isCursorInitialized=!0,this._onRequestRefreshRows.fire(0,this._bufferService.rows-1),this._onRequestSyncScrollBar.fire();break;case 2004:this._coreService.decPrivateModes.bracketedPasteMode=!1}return!0},D.prototype._updateAttrColor=function(p,c,m,v,z){return c===2?(p|=50331648,p&=-16777216,p|=B.AttributeData.fromColorRGB([m,v,z])):c===5&&(p&=-50331904,p|=33554432|255&m),p},D.prototype._extractColor=function(p,c,m){var v=[0,0,-1,0,0,0],z=0,f=0;do{if(v[f+z]=p.params[c+f],p.hasSubParams(c+f)){var H=p.getSubParams(c+f),j=0;do v[1]===5&&(z=1),v[f+j+1+z]=H[j];while(++j<H.length&&j+f+1+z<v.length);break}if(v[1]===5&&f+z>=2||v[1]===2&&f+z>=5)break;v[1]&&(z=1)}while(++f+c<p.length&&f+z<v.length);for(j=2;j<v.length;++j)v[j]===-1&&(v[j]=0);switch(v[0]){case 38:m.fg=this._updateAttrColor(m.fg,v[1],v[3],v[4],v[5]);break;case 48:m.bg=this._updateAttrColor(m.bg,v[1],v[3],v[4],v[5]);break;case 58:m.extended=m.extended.clone(),m.extended.underlineColor=this._updateAttrColor(m.extended.underlineColor,v[1],v[3],v[4],v[5])}return f},D.prototype._processUnderline=function(p,c){c.extended=c.extended.clone(),(!~p||p>5)&&(p=1),c.extended.underlineStyle=p,c.fg|=268435456,p===0&&(c.fg&=-268435457),c.updateExtended()},D.prototype.charAttributes=function(p){if(p.length===1&&p.params[0]===0)return this._curAttrData.fg=W.DEFAULT_ATTR_DATA.fg,this._curAttrData.bg=W.DEFAULT_ATTR_DATA.bg,!0;for(var c,m=p.length,v=this._curAttrData,z=0;z<m;z++)(c=p.params[z])>=30&&c<=37?(v.fg&=-50331904,v.fg|=16777216|c-30):c>=40&&c<=47?(v.bg&=-50331904,v.bg|=16777216|c-40):c>=90&&c<=97?(v.fg&=-50331904,v.fg|=16777224|c-90):c>=100&&c<=107?(v.bg&=-50331904,v.bg|=16777224|c-100):c===0?(v.fg=W.DEFAULT_ATTR_DATA.fg,v.bg=W.DEFAULT_ATTR_DATA.bg):c===1?v.fg|=134217728:c===3?v.bg|=67108864:c===4?(v.fg|=268435456,this._processUnderline(p.hasSubParams(z)?p.getSubParams(z)[0]:1,v)):c===5?v.fg|=536870912:c===7?v.fg|=67108864:c===8?v.fg|=1073741824:c===9?v.fg|=2147483648:c===2?v.bg|=134217728:c===21?this._processUnderline(2,v):c===22?(v.fg&=-134217729,v.bg&=-134217729):c===23?v.bg&=-67108865:c===24?v.fg&=-268435457:c===25?v.fg&=-536870913:c===27?v.fg&=-67108865:c===28?v.fg&=-1073741825:c===29?v.fg&=2147483647:c===39?(v.fg&=-67108864,v.fg|=16777215&W.DEFAULT_ATTR_DATA.fg):c===49?(v.bg&=-67108864,v.bg|=16777215&W.DEFAULT_ATTR_DATA.bg):c===38||c===48||c===58?z+=this._extractColor(p,z,v):c===59?(v.extended=v.extended.clone(),v.extended.underlineColor=-1,v.updateExtended()):c===100?(v.fg&=-67108864,v.fg|=16777215&W.DEFAULT_ATTR_DATA.fg,v.bg&=-67108864,v.bg|=16777215&W.DEFAULT_ATTR_DATA.bg):this._logService.debug("Unknown SGR attribute: %d.",c);return!0},D.prototype.deviceStatus=function(p){switch(p.params[0]){case 5:this._coreService.triggerDataEvent(S.C0.ESC+"[0n");break;case 6:var c=this._activeBuffer.y+1,m=this._activeBuffer.x+1;this._coreService.triggerDataEvent(S.C0.ESC+"["+c+";"+m+"R")}return!0},D.prototype.deviceStatusPrivate=function(p){if(p.params[0]===6){var c=this._activeBuffer.y+1,m=this._activeBuffer.x+1;this._coreService.triggerDataEvent(S.C0.ESC+"[?"+c+";"+m+"R")}return!0},D.prototype.softReset=function(p){return this._coreService.isCursorHidden=!1,this._onRequestSyncScrollBar.fire(),this._activeBuffer.scrollTop=0,this._activeBuffer.scrollBottom=this._bufferService.rows-1,this._curAttrData=W.DEFAULT_ATTR_DATA.clone(),this._coreService.reset(),this._charsetService.reset(),this._activeBuffer.savedX=0,this._activeBuffer.savedY=this._activeBuffer.ybase,this._activeBuffer.savedCurAttrData.fg=this._curAttrData.fg,this._activeBuffer.savedCurAttrData.bg=this._curAttrData.bg,this._activeBuffer.savedCharset=this._charsetService.charset,this._coreService.decPrivateModes.origin=!1,!0},D.prototype.setCursorStyle=function(p){var c=p.params[0]||1;switch(c){case 1:case 2:this._optionsService.options.cursorStyle="block";break;case 3:case 4:this._optionsService.options.cursorStyle="underline";break;case 5:case 6:this._optionsService.options.cursorStyle="bar"}var m=c%2==1;return this._optionsService.options.cursorBlink=m,!0},D.prototype.setScrollRegion=function(p){var c,m=p.params[0]||1;return(p.length<2||(c=p.params[1])>this._bufferService.rows||c===0)&&(c=this._bufferService.rows),c>m&&(this._activeBuffer.scrollTop=m-1,this._activeBuffer.scrollBottom=c-1,this._setCursor(0,0)),!0},D.prototype.windowOptions=function(p){if(!h(p.params[0],this._optionsService.rawOptions.windowOptions))return!0;var c=p.length>1?p.params[1]:0;switch(p.params[0]){case 14:c!==2&&this._onRequestWindowsOptionsReport.fire(e.GET_WIN_SIZE_PIXELS);break;case 16:this._onRequestWindowsOptionsReport.fire(e.GET_CELL_SIZE_PIXELS);break;case 18:this._bufferService&&this._coreService.triggerDataEvent(S.C0.ESC+"[8;"+this._bufferService.rows+";"+this._bufferService.cols+"t");break;case 22:c!==0&&c!==2||(this._windowTitleStack.push(this._windowTitle),this._windowTitleStack.length>10&&this._windowTitleStack.shift()),c!==0&&c!==1||(this._iconNameStack.push(this._iconName),this._iconNameStack.length>10&&this._iconNameStack.shift());break;case 23:c!==0&&c!==2||this._windowTitleStack.length&&this.setTitle(this._windowTitleStack.pop()),c!==0&&c!==1||this._iconNameStack.length&&this.setIconName(this._iconNameStack.pop())}return!0},D.prototype.saveCursor=function(p){return this._activeBuffer.savedX=this._activeBuffer.x,this._activeBuffer.savedY=this._activeBuffer.ybase+this._activeBuffer.y,this._activeBuffer.savedCurAttrData.fg=this._curAttrData.fg,this._activeBuffer.savedCurAttrData.bg=this._curAttrData.bg,this._activeBuffer.savedCharset=this._charsetService.charset,!0},D.prototype.restoreCursor=function(p){return this._activeBuffer.x=this._activeBuffer.savedX||0,this._activeBuffer.y=Math.max(this._activeBuffer.savedY-this._activeBuffer.ybase,0),this._curAttrData.fg=this._activeBuffer.savedCurAttrData.fg,this._curAttrData.bg=this._activeBuffer.savedCurAttrData.bg,this._charsetService.charset=this._savedCharset,this._activeBuffer.savedCharset&&(this._charsetService.charset=this._activeBuffer.savedCharset),this._restrictCursor(),!0},D.prototype.setTitle=function(p){return this._windowTitle=p,this._onTitleChange.fire(p),!0},D.prototype.setIconName=function(p){return this._iconName=p,!0},D.prototype.setOrReportIndexedColor=function(p){for(var c=[],m=p.split(";");m.length>1;){var v=m.shift(),z=m.shift();if(/^\d+$/.exec(v)){var f=parseInt(v);if(0<=f&&f<256)if(z==="?")c.push({type:0,index:f});else{var H=(0,k.parseColor)(z);H&&c.push({type:1,index:f,color:H})}}}return c.length&&this._onColor.fire(c),!0},D.prototype._setOrReportSpecialColor=function(p,c){for(var m=p.split(";"),v=0;v<m.length&&!(c>=this._specialColors.length);++v,++c)if(m[v]==="?")this._onColor.fire([{type:0,index:this._specialColors[c]}]);else{var z=(0,k.parseColor)(m[v]);z&&this._onColor.fire([{type:1,index:this._specialColors[c],color:z}])}return!0},D.prototype.setOrReportFgColor=function(p){return this._setOrReportSpecialColor(p,0)},D.prototype.setOrReportBgColor=function(p){return this._setOrReportSpecialColor(p,1)},D.prototype.setOrReportCursorColor=function(p){return this._setOrReportSpecialColor(p,2)},D.prototype.restoreIndexedColor=function(p){if(!p)return this._onColor.fire([{type:2}]),!0;for(var c=[],m=p.split(";"),v=0;v<m.length;++v)if(/^\d+$/.exec(m[v])){var z=parseInt(m[v]);0<=z&&z<256&&c.push({type:2,index:z})}return c.length&&this._onColor.fire(c),!0},D.prototype.restoreFgColor=function(p){return this._onColor.fire([{type:2,index:256}]),!0},D.prototype.restoreBgColor=function(p){return this._onColor.fire([{type:2,index:257}]),!0},D.prototype.restoreCursorColor=function(p){return this._onColor.fire([{type:2,index:258}]),!0},D.prototype.nextLine=function(){return this._activeBuffer.x=0,this.index(),!0},D.prototype.keypadApplicationMode=function(){return this._logService.debug("Serial port requested application keypad."),this._coreService.decPrivateModes.applicationKeypad=!0,this._onRequestSyncScrollBar.fire(),!0},D.prototype.keypadNumericMode=function(){return this._logService.debug("Switching back to normal keypad."),this._coreService.decPrivateModes.applicationKeypad=!1,this._onRequestSyncScrollBar.fire(),!0},D.prototype.selectDefaultCharset=function(){return this._charsetService.setgLevel(0),this._charsetService.setgCharset(0,r.DEFAULT_CHARSET),!0},D.prototype.selectCharset=function(p){return p.length!==2?(this.selectDefaultCharset(),!0):(p[0]==="/"||this._charsetService.setgCharset(i[p[0]],r.CHARSETS[p[1]]||r.DEFAULT_CHARSET),!0)},D.prototype.index=function(){return this._restrictCursor(),this._activeBuffer.y++,this._activeBuffer.y===this._activeBuffer.scrollBottom+1?(this._activeBuffer.y--,this._bufferService.scroll(this._eraseAttrData())):this._activeBuffer.y>=this._bufferService.rows&&(this._activeBuffer.y=this._bufferService.rows-1),this._restrictCursor(),!0},D.prototype.tabSet=function(){return this._activeBuffer.tabs[this._activeBuffer.x]=!0,!0},D.prototype.reverseIndex=function(){if(this._restrictCursor(),this._activeBuffer.y===this._activeBuffer.scrollTop){var p=this._activeBuffer.scrollBottom-this._activeBuffer.scrollTop;this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase+this._activeBuffer.y,p,1),this._activeBuffer.lines.set(this._activeBuffer.ybase+this._activeBuffer.y,this._activeBuffer.getBlankLine(this._eraseAttrData())),this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom)}else this._activeBuffer.y--,this._restrictCursor();return!0},D.prototype.fullReset=function(){return this._parser.reset(),this._onRequestReset.fire(),!0},D.prototype.reset=function(){this._curAttrData=W.DEFAULT_ATTR_DATA.clone(),this._eraseAttrDataInternal=W.DEFAULT_ATTR_DATA.clone()},D.prototype._eraseAttrData=function(){return this._eraseAttrDataInternal.bg&=-67108864,this._eraseAttrDataInternal.bg|=67108863&this._curAttrData.bg,this._eraseAttrDataInternal},D.prototype.setgLevel=function(p){return this._charsetService.setgLevel(p),!0},D.prototype.screenAlignmentPattern=function(){var p=new F.CellData;p.content=1<<22|"E".charCodeAt(0),p.fg=this._curAttrData.fg,p.bg=this._curAttrData.bg,this._setCursor(0,0);for(var c=0;c<this._bufferService.rows;++c){var m=this._activeBuffer.ybase+this._activeBuffer.y+c,v=this._activeBuffer.lines.get(m);v&&(v.fill(p),v.isWrapped=!1)}return this._dirtyRowService.markAllDirty(),this._setCursor(0,0),!0},D}(d.Disposable);n.InputHandler=s},844:function(x,n){var o=this&&this.__values||function(e){var S=typeof Symbol=="function"&&Symbol.iterator,r=S&&e[S],E=0;if(r)return r.call(e);if(e&&typeof e.length=="number")return{next:function(){return e&&E>=e.length&&(e=void 0),{value:e&&e[E++],done:!e}}};throw new TypeError(S?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(n,"__esModule",{value:!0}),n.getDisposeArrayDisposable=n.disposeArray=n.Disposable=void 0;var t=function(){function e(){this._disposables=[],this._isDisposed=!1}return e.prototype.dispose=function(){var S,r;this._isDisposed=!0;try{for(var E=o(this._disposables),d=E.next();!d.done;d=E.next())d.value.dispose()}catch(l){S={error:l}}finally{try{d&&!d.done&&(r=E.return)&&r.call(E)}finally{if(S)throw S.error}}this._disposables.length=0},e.prototype.register=function(S){return this._disposables.push(S),S},e.prototype.unregister=function(S){var r=this._disposables.indexOf(S);r!==-1&&this._disposables.splice(r,1)},e}();function Z(e){var S,r;try{for(var E=o(e),d=E.next();!d.done;d=E.next())d.value.dispose()}catch(l){S={error:l}}finally{try{d&&!d.done&&(r=E.return)&&r.call(E)}finally{if(S)throw S.error}}e.length=0}n.Disposable=t,n.disposeArray=Z,n.getDisposeArrayDisposable=function(e){return{dispose:function(){return Z(e)}}}},6114:(x,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.isLinux=n.isWindows=n.isIphone=n.isIpad=n.isMac=n.isSafari=n.isLegacyEdge=n.isFirefox=void 0;var o=typeof navigator>"u",t=o?"node":navigator.userAgent,Z=o?"node":navigator.platform;n.isFirefox=t.includes("Firefox"),n.isLegacyEdge=t.includes("Edge"),n.isSafari=/^((?!chrome|android).)*safari/i.test(t),n.isMac=["Macintosh","MacIntel","MacPPC","Mac68K"].includes(Z),n.isIpad=Z==="iPad",n.isIphone=Z==="iPhone",n.isWindows=["Windows","Win16","Win32","WinCE"].includes(Z),n.isLinux=Z.indexOf("Linux")>=0},6106:function(x,n){var o=this&&this.__generator||function(Z,e){var S,r,E,d,l={label:0,sent:function(){if(1&E[0])throw E[1];return E[1]},trys:[],ops:[]};return d={next:N(0),throw:N(1),return:N(2)},typeof Symbol=="function"&&(d[Symbol.iterator]=function(){return this}),d;function N(W){return function(Q){return function(U){if(S)throw new TypeError("Generator is already executing.");for(;l;)try{if(S=1,r&&(E=2&U[0]?r.return:U[0]?r.throw||((E=r.return)&&E.call(r),0):r.next)&&!(E=E.call(r,U[1])).done)return E;switch(r=0,E&&(U=[2&U[0],E.value]),U[0]){case 0:case 1:E=U;break;case 4:return l.label++,{value:U[1],done:!1};case 5:l.label++,r=U[1],U=[0];continue;case 7:U=l.ops.pop(),l.trys.pop();continue;default:if(!((E=(E=l.trys).length>0&&E[E.length-1])||U[0]!==6&&U[0]!==2)){l=0;continue}if(U[0]===3&&(!E||U[1]>E[0]&&U[1]<E[3])){l.label=U[1];break}if(U[0]===6&&l.label<E[1]){l.label=E[1],E=U;break}if(E&&l.label<E[2]){l.label=E[2],l.ops.push(U);break}E[2]&&l.ops.pop(),l.trys.pop();continue}U=e.call(Z,l)}catch(F){U=[6,F],r=0}finally{S=E=0}if(5&U[0])throw U[1];return{value:U[0]?U[1]:void 0,done:!0}}([W,Q])}}};Object.defineProperty(n,"__esModule",{value:!0}),n.SortedList=void 0;var t=function(){function Z(e){this._getKey=e,this._array=[]}return Z.prototype.clear=function(){this._array.length=0},Z.prototype.insert=function(e){if(this._array.length!==0){var S=this._search(this._getKey(e),0,this._array.length-1);this._array.splice(S,0,e)}else this._array.push(e)},Z.prototype.delete=function(e){if(this._array.length===0)return!1;var S=this._getKey(e),r=this._search(S,0,this._array.length-1);if(this._getKey(this._array[r])!==S)return!1;do if(this._array[r]===e)return this._array.splice(r,1),!0;while(++r<this._array.length&&this._getKey(this._array[r])===S);return!1},Z.prototype.getKeyIterator=function(e){var S;return o(this,function(r){switch(r.label){case 0:if(this._array.length===0)return[2];if((S=this._search(e,0,this._array.length-1))<0||S>=this._array.length)return[2];if(this._getKey(this._array[S])!==e)return[2];r.label=1;case 1:return[4,this._array[S]];case 2:r.sent(),r.label=3;case 3:if(++S<this._array.length&&this._getKey(this._array[S])===e)return[3,1];r.label=4;case 4:return[2]}})},Z.prototype.values=function(){return this._array.values()},Z.prototype._search=function(e,S,r){if(r<S)return S;var E=Math.floor((S+r)/2);if(this._getKey(this._array[E])>e)return this._search(e,S,E-1);if(this._getKey(this._array[E])<e)return this._search(e,E+1,r);for(;E>0&&this._getKey(this._array[E-1])===e;)E--;return E},Z}();n.SortedList=t},8273:(x,n)=>{function o(t,Z,e,S){if(e===void 0&&(e=0),S===void 0&&(S=t.length),e>=t.length)return t;e=(t.length+e)%t.length,S=S>=t.length?t.length:(t.length+S)%t.length;for(var r=e;r<S;++r)t[r]=Z;return t}Object.defineProperty(n,"__esModule",{value:!0}),n.concat=n.fillFallback=n.fill=void 0,n.fill=function(t,Z,e,S){return t.fill?t.fill(Z,e,S):o(t,Z,e,S)},n.fillFallback=o,n.concat=function(t,Z){var e=new t.constructor(t.length+Z.length);return e.set(t),e.set(Z,t.length),e}},9282:(x,n,o)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.updateWindowsModeWrappedState=void 0;var t=o(643);n.updateWindowsModeWrappedState=function(Z){var e=Z.buffer.lines.get(Z.buffer.ybase+Z.buffer.y-1),S=e==null?void 0:e.get(Z.cols-1),r=Z.buffer.lines.get(Z.buffer.ybase+Z.buffer.y);r&&S&&(r.isWrapped=S[t.CHAR_DATA_CODE_INDEX]!==t.NULL_CELL_CODE&&S[t.CHAR_DATA_CODE_INDEX]!==t.WHITESPACE_CELL_CODE)}},3734:(x,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.ExtendedAttrs=n.AttributeData=void 0;var o=function(){function Z(){this.fg=0,this.bg=0,this.extended=new t}return Z.toColorRGB=function(e){return[e>>>16&255,e>>>8&255,255&e]},Z.fromColorRGB=function(e){return(255&e[0])<<16|(255&e[1])<<8|255&e[2]},Z.prototype.clone=function(){var e=new Z;return e.fg=this.fg,e.bg=this.bg,e.extended=this.extended.clone(),e},Z.prototype.isInverse=function(){return 67108864&this.fg},Z.prototype.isBold=function(){return 134217728&this.fg},Z.prototype.isUnderline=function(){return 268435456&this.fg},Z.prototype.isBlink=function(){return 536870912&this.fg},Z.prototype.isInvisible=function(){return 1073741824&this.fg},Z.prototype.isItalic=function(){return 67108864&this.bg},Z.prototype.isDim=function(){return 134217728&this.bg},Z.prototype.isStrikethrough=function(){return 2147483648&this.fg},Z.prototype.getFgColorMode=function(){return 50331648&this.fg},Z.prototype.getBgColorMode=function(){return 50331648&this.bg},Z.prototype.isFgRGB=function(){return(50331648&this.fg)==50331648},Z.prototype.isBgRGB=function(){return(50331648&this.bg)==50331648},Z.prototype.isFgPalette=function(){return(50331648&this.fg)==16777216||(50331648&this.fg)==33554432},Z.prototype.isBgPalette=function(){return(50331648&this.bg)==16777216||(50331648&this.bg)==33554432},Z.prototype.isFgDefault=function(){return(50331648&this.fg)==0},Z.prototype.isBgDefault=function(){return(50331648&this.bg)==0},Z.prototype.isAttributeDefault=function(){return this.fg===0&&this.bg===0},Z.prototype.getFgColor=function(){switch(50331648&this.fg){case 16777216:case 33554432:return 255&this.fg;case 50331648:return 16777215&this.fg;default:return-1}},Z.prototype.getBgColor=function(){switch(50331648&this.bg){case 16777216:case 33554432:return 255&this.bg;case 50331648:return 16777215&this.bg;default:return-1}},Z.prototype.hasExtendedAttrs=function(){return 268435456&this.bg},Z.prototype.updateExtended=function(){this.extended.isEmpty()?this.bg&=-268435457:this.bg|=268435456},Z.prototype.getUnderlineColor=function(){if(268435456&this.bg&&~this.extended.underlineColor)switch(50331648&this.extended.underlineColor){case 16777216:case 33554432:return 255&this.extended.underlineColor;case 50331648:return 16777215&this.extended.underlineColor;default:return this.getFgColor()}return this.getFgColor()},Z.prototype.getUnderlineColorMode=function(){return 268435456&this.bg&&~this.extended.underlineColor?50331648&this.extended.underlineColor:this.getFgColorMode()},Z.prototype.isUnderlineColorRGB=function(){return 268435456&this.bg&&~this.extended.underlineColor?(50331648&this.extended.underlineColor)==50331648:this.isFgRGB()},Z.prototype.isUnderlineColorPalette=function(){return 268435456&this.bg&&~this.extended.underlineColor?(50331648&this.extended.underlineColor)==16777216||(50331648&this.extended.underlineColor)==33554432:this.isFgPalette()},Z.prototype.isUnderlineColorDefault=function(){return 268435456&this.bg&&~this.extended.underlineColor?(50331648&this.extended.underlineColor)==0:this.isFgDefault()},Z.prototype.getUnderlineStyle=function(){return 268435456&this.fg?268435456&this.bg?this.extended.underlineStyle:1:0},Z}();n.AttributeData=o;var t=function(){function Z(e,S){e===void 0&&(e=0),S===void 0&&(S=-1),this.underlineStyle=e,this.underlineColor=S}return Z.prototype.clone=function(){return new Z(this.underlineStyle,this.underlineColor)},Z.prototype.isEmpty=function(){return this.underlineStyle===0},Z}();n.ExtendedAttrs=t},9092:function(x,n,o){var t=this&&this.__read||function(F,B){var R=typeof Symbol=="function"&&F[Symbol.iterator];if(!R)return F;var J,V,k=R.call(F),i=[];try{for(;(B===void 0||B-- >0)&&!(J=k.next()).done;)i.push(J.value)}catch(a){V={error:a}}finally{try{J&&!J.done&&(R=k.return)&&R.call(k)}finally{if(V)throw V.error}}return i},Z=this&&this.__spreadArray||function(F,B,R){if(R||arguments.length===2)for(var J,V=0,k=B.length;V<k;V++)!J&&V in B||(J||(J=Array.prototype.slice.call(B,0,V)),J[V]=B[V]);return F.concat(J||Array.prototype.slice.call(B))};Object.defineProperty(n,"__esModule",{value:!0}),n.BufferStringIterator=n.Buffer=n.MAX_BUFFER_SIZE=void 0;var e=o(6349),S=o(8437),r=o(511),E=o(643),d=o(4634),l=o(4863),N=o(7116),W=o(3734);n.MAX_BUFFER_SIZE=4294967295;var Q=function(){function F(B,R,J){this._hasScrollback=B,this._optionsService=R,this._bufferService=J,this.ydisp=0,this.ybase=0,this.y=0,this.x=0,this.savedY=0,this.savedX=0,this.savedCurAttrData=S.DEFAULT_ATTR_DATA.clone(),this.savedCharset=N.DEFAULT_CHARSET,this.markers=[],this._nullCell=r.CellData.fromCharData([0,E.NULL_CELL_CHAR,E.NULL_CELL_WIDTH,E.NULL_CELL_CODE]),this._whitespaceCell=r.CellData.fromCharData([0,E.WHITESPACE_CELL_CHAR,E.WHITESPACE_CELL_WIDTH,E.WHITESPACE_CELL_CODE]),this._isClearing=!1,this._cols=this._bufferService.cols,this._rows=this._bufferService.rows,this.lines=new e.CircularList(this._getCorrectBufferLength(this._rows)),this.scrollTop=0,this.scrollBottom=this._rows-1,this.setupTabStops()}return F.prototype.getNullCell=function(B){return B?(this._nullCell.fg=B.fg,this._nullCell.bg=B.bg,this._nullCell.extended=B.extended):(this._nullCell.fg=0,this._nullCell.bg=0,this._nullCell.extended=new W.ExtendedAttrs),this._nullCell},F.prototype.getWhitespaceCell=function(B){return B?(this._whitespaceCell.fg=B.fg,this._whitespaceCell.bg=B.bg,this._whitespaceCell.extended=B.extended):(this._whitespaceCell.fg=0,this._whitespaceCell.bg=0,this._whitespaceCell.extended=new W.ExtendedAttrs),this._whitespaceCell},F.prototype.getBlankLine=function(B,R){return new S.BufferLine(this._bufferService.cols,this.getNullCell(B),R)},Object.defineProperty(F.prototype,"hasScrollback",{get:function(){return this._hasScrollback&&this.lines.maxLength>this._rows},enumerable:!1,configurable:!0}),Object.defineProperty(F.prototype,"isCursorInViewport",{get:function(){var B=this.ybase+this.y-this.ydisp;return B>=0&&B<this._rows},enumerable:!1,configurable:!0}),F.prototype._getCorrectBufferLength=function(B){if(!this._hasScrollback)return B;var R=B+this._optionsService.rawOptions.scrollback;return R>n.MAX_BUFFER_SIZE?n.MAX_BUFFER_SIZE:R},F.prototype.fillViewportRows=function(B){if(this.lines.length===0){B===void 0&&(B=S.DEFAULT_ATTR_DATA);for(var R=this._rows;R--;)this.lines.push(this.getBlankLine(B))}},F.prototype.clear=function(){this.ydisp=0,this.ybase=0,this.y=0,this.x=0,this.lines=new e.CircularList(this._getCorrectBufferLength(this._rows)),this.scrollTop=0,this.scrollBottom=this._rows-1,this.setupTabStops()},F.prototype.resize=function(B,R){var J=this.getNullCell(S.DEFAULT_ATTR_DATA),V=this._getCorrectBufferLength(R);if(V>this.lines.maxLength&&(this.lines.maxLength=V),this.lines.length>0){if(this._cols<B)for(var k=0;k<this.lines.length;k++)this.lines.get(k).resize(B,J);var i=0;if(this._rows<R)for(var a=this._rows;a<R;a++)this.lines.length<R+this.ybase&&(this._optionsService.rawOptions.windowsMode?this.lines.push(new S.BufferLine(B,J)):this.ybase>0&&this.lines.length<=this.ybase+this.y+i+1?(this.ybase--,i++,this.ydisp>0&&this.ydisp--):this.lines.push(new S.BufferLine(B,J)));else for(a=this._rows;a>R;a--)this.lines.length>R+this.ybase&&(this.lines.length>this.ybase+this.y+1?this.lines.pop():(this.ybase++,this.ydisp++));if(V<this.lines.maxLength){var h=this.lines.length-V;h>0&&(this.lines.trimStart(h),this.ybase=Math.max(this.ybase-h,0),this.ydisp=Math.max(this.ydisp-h,0),this.savedY=Math.max(this.savedY-h,0)),this.lines.maxLength=V}this.x=Math.min(this.x,B-1),this.y=Math.min(this.y,R-1),i&&(this.y+=i),this.savedX=Math.min(this.savedX,B-1),this.scrollTop=0}if(this.scrollBottom=R-1,this._isReflowEnabled&&(this._reflow(B,R),this._cols>B))for(k=0;k<this.lines.length;k++)this.lines.get(k).resize(B,J);this._cols=B,this._rows=R},Object.defineProperty(F.prototype,"_isReflowEnabled",{get:function(){return this._hasScrollback&&!this._optionsService.rawOptions.windowsMode},enumerable:!1,configurable:!0}),F.prototype._reflow=function(B,R){this._cols!==B&&(B>this._cols?this._reflowLarger(B,R):this._reflowSmaller(B,R))},F.prototype._reflowLarger=function(B,R){var J=(0,d.reflowLargerGetLinesToRemove)(this.lines,this._cols,B,this.ybase+this.y,this.getNullCell(S.DEFAULT_ATTR_DATA));if(J.length>0){var V=(0,d.reflowLargerCreateNewLayout)(this.lines,J);(0,d.reflowLargerApplyNewLayout)(this.lines,V.layout),this._reflowLargerAdjustViewport(B,R,V.countRemoved)}},F.prototype._reflowLargerAdjustViewport=function(B,R,J){for(var V=this.getNullCell(S.DEFAULT_ATTR_DATA),k=J;k-- >0;)this.ybase===0?(this.y>0&&this.y--,this.lines.length<R&&this.lines.push(new S.BufferLine(B,V))):(this.ydisp===this.ybase&&this.ydisp--,this.ybase--);this.savedY=Math.max(this.savedY-J,0)},F.prototype._reflowSmaller=function(B,R){for(var J=this.getNullCell(S.DEFAULT_ATTR_DATA),V=[],k=0,i=this.lines.length-1;i>=0;i--){var a=this.lines.get(i);if(!(!a||!a.isWrapped&&a.getTrimmedLength()<=B)){for(var h=[a];a.isWrapped&&i>0;)a=this.lines.get(--i),h.unshift(a);var T=this.ybase+this.y;if(!(T>=i&&T<i+h.length)){var s,C=h[h.length-1].getTrimmedLength(),D=(0,d.reflowSmallerGetNewLineLengths)(h,this._cols,B),p=D.length-h.length;s=this.ybase===0&&this.y!==this.lines.length-1?Math.max(0,this.y-this.lines.maxLength+p):Math.max(0,this.lines.length-this.lines.maxLength+p);for(var c=[],m=0;m<p;m++){var v=this.getBlankLine(S.DEFAULT_ATTR_DATA,!0);c.push(v)}c.length>0&&(V.push({start:i+h.length+k,newLines:c}),k+=c.length),h.push.apply(h,Z([],t(c),!1));var z=D.length-1,f=D[z];f===0&&(f=D[--z]);for(var H=h.length-p-1,j=C;H>=0;){var w=Math.min(j,f);if(h[z]===void 0)break;if(h[z].copyCellsFrom(h[H],j-w,f-w,w,!0),(f-=w)==0&&(f=D[--z]),(j-=w)==0){H--;var M=Math.max(H,0);j=(0,d.getWrappedLineTrimmedLength)(h,M,this._cols)}}for(m=0;m<h.length;m++)D[m]<B&&h[m].setCell(D[m],J);for(var P=p-s;P-- >0;)this.ybase===0?this.y<R-1?(this.y++,this.lines.pop()):(this.ybase++,this.ydisp++):this.ybase<Math.min(this.lines.maxLength,this.lines.length+k)-R&&(this.ybase===this.ydisp&&this.ydisp++,this.ybase++);this.savedY=Math.min(this.savedY+p,this.ybase+R-1)}}}if(V.length>0){var g=[],UU=[];for(m=0;m<this.lines.length;m++)UU.push(this.lines.get(m));var X=this.lines.length,$=X-1,K=0,O=V[K];this.lines.length=Math.min(this.lines.maxLength,this.lines.length+k);var b=0;for(m=Math.min(this.lines.maxLength-1,X+k-1);m>=0;m--)if(O&&O.start>$+b){for(var Y=O.newLines.length-1;Y>=0;Y--)this.lines.set(m--,O.newLines[Y]);m++,g.push({index:$+1,amount:O.newLines.length}),b+=O.newLines.length,O=V[++K]}else this.lines.set(m,UU[$--]);var y=0;for(m=g.length-1;m>=0;m--)g[m].index+=y,this.lines.onInsertEmitter.fire(g[m]),y+=g[m].amount;var L=Math.max(0,X+k-this.lines.maxLength);L>0&&this.lines.onTrimEmitter.fire(L)}},F.prototype.stringIndexToBufferIndex=function(B,R,J){for(J===void 0&&(J=!1);R;){var V=this.lines.get(B);if(!V)return[-1,-1];for(var k=J?V.getTrimmedLength():V.length,i=0;i<k;++i)if(V.get(i)[E.CHAR_DATA_WIDTH_INDEX]&&(R-=V.get(i)[E.CHAR_DATA_CHAR_INDEX].length||1),R<0)return[B,i];B++}return[B,0]},F.prototype.translateBufferLineToString=function(B,R,J,V){J===void 0&&(J=0);var k=this.lines.get(B);return k?k.translateToString(R,J,V):""},F.prototype.getWrappedRangeForLine=function(B){for(var R=B,J=B;R>0&&this.lines.get(R).isWrapped;)R--;for(;J+1<this.lines.length&&this.lines.get(J+1).isWrapped;)J++;return{first:R,last:J}},F.prototype.setupTabStops=function(B){for(B!=null?this.tabs[B]||(B=this.prevStop(B)):(this.tabs={},B=0);B<this._cols;B+=this._optionsService.rawOptions.tabStopWidth)this.tabs[B]=!0},F.prototype.prevStop=function(B){for(B==null&&(B=this.x);!this.tabs[--B]&&B>0;);return B>=this._cols?this._cols-1:B<0?0:B},F.prototype.nextStop=function(B){for(B==null&&(B=this.x);!this.tabs[++B]&&B<this._cols;);return B>=this._cols?this._cols-1:B<0?0:B},F.prototype.clearMarkers=function(B){this._isClearing=!0;for(var R=0;R<this.markers.length;R++)this.markers[R].line===B&&(this.markers[R].dispose(),this.markers.splice(R--,1));this._isClearing=!1},F.prototype.clearAllMarkers=function(){this._isClearing=!0;for(var B=0;B<this.markers.length;B++)this.markers[B].dispose(),this.markers.splice(B--,1);this._isClearing=!1},F.prototype.addMarker=function(B){var R=this,J=new l.Marker(B);return this.markers.push(J),J.register(this.lines.onTrim(function(V){J.line-=V,J.line<0&&J.dispose()})),J.register(this.lines.onInsert(function(V){J.line>=V.index&&(J.line+=V.amount)})),J.register(this.lines.onDelete(function(V){J.line>=V.index&&J.line<V.index+V.amount&&J.dispose(),J.line>V.index&&(J.line-=V.amount)})),J.register(J.onDispose(function(){return R._removeMarker(J)})),J},F.prototype._removeMarker=function(B){this._isClearing||this.markers.splice(this.markers.indexOf(B),1)},F.prototype.iterator=function(B,R,J,V,k){return new U(this,B,R,J,V,k)},F}();n.Buffer=Q;var U=function(){function F(B,R,J,V,k,i){J===void 0&&(J=0),V===void 0&&(V=B.lines.length),k===void 0&&(k=0),i===void 0&&(i=0),this._buffer=B,this._trimRight=R,this._startIndex=J,this._endIndex=V,this._startOverscan=k,this._endOverscan=i,this._startIndex<0&&(this._startIndex=0),this._endIndex>this._buffer.lines.length&&(this._endIndex=this._buffer.lines.length),this._current=this._startIndex}return F.prototype.hasNext=function(){return this._current<this._endIndex},F.prototype.next=function(){var B=this._buffer.getWrappedRangeForLine(this._current);B.first<this._startIndex-this._startOverscan&&(B.first=this._startIndex-this._startOverscan),B.last>this._endIndex+this._endOverscan&&(B.last=this._endIndex+this._endOverscan),B.first=Math.max(B.first,0),B.last=Math.min(B.last,this._buffer.lines.length);for(var R="",J=B.first;J<=B.last;++J)R+=this._buffer.translateBufferLineToString(J,this._trimRight);return this._current=B.last+1,{range:B,content:R}},F}();n.BufferStringIterator=U},8437:(x,n,o)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.BufferLine=n.DEFAULT_ATTR_DATA=void 0;var t=o(482),Z=o(643),e=o(511),S=o(3734);n.DEFAULT_ATTR_DATA=Object.freeze(new S.AttributeData);var r=function(){function E(d,l,N){N===void 0&&(N=!1),this.isWrapped=N,this._combined={},this._extendedAttrs={},this._data=new Uint32Array(3*d);for(var W=l||e.CellData.fromCharData([0,Z.NULL_CELL_CHAR,Z.NULL_CELL_WIDTH,Z.NULL_CELL_CODE]),Q=0;Q<d;++Q)this.setCell(Q,W);this.length=d}return E.prototype.get=function(d){var l=this._data[3*d+0],N=2097151&l;return[this._data[3*d+1],2097152&l?this._combined[d]:N?(0,t.stringFromCodePoint)(N):"",l>>22,2097152&l?this._combined[d].charCodeAt(this._combined[d].length-1):N]},E.prototype.set=function(d,l){this._data[3*d+1]=l[Z.CHAR_DATA_ATTR_INDEX],l[Z.CHAR_DATA_CHAR_INDEX].length>1?(this._combined[d]=l[1],this._data[3*d+0]=2097152|d|l[Z.CHAR_DATA_WIDTH_INDEX]<<22):this._data[3*d+0]=l[Z.CHAR_DATA_CHAR_INDEX].charCodeAt(0)|l[Z.CHAR_DATA_WIDTH_INDEX]<<22},E.prototype.getWidth=function(d){return this._data[3*d+0]>>22},E.prototype.hasWidth=function(d){return 12582912&this._data[3*d+0]},E.prototype.getFg=function(d){return this._data[3*d+1]},E.prototype.getBg=function(d){return this._data[3*d+2]},E.prototype.hasContent=function(d){return 4194303&this._data[3*d+0]},E.prototype.getCodePoint=function(d){var l=this._data[3*d+0];return 2097152&l?this._combined[d].charCodeAt(this._combined[d].length-1):2097151&l},E.prototype.isCombined=function(d){return 2097152&this._data[3*d+0]},E.prototype.getString=function(d){var l=this._data[3*d+0];return 2097152&l?this._combined[d]:2097151&l?(0,t.stringFromCodePoint)(2097151&l):""},E.prototype.loadCell=function(d,l){var N=3*d;return l.content=this._data[N+0],l.fg=this._data[N+1],l.bg=this._data[N+2],2097152&l.content&&(l.combinedData=this._combined[d]),268435456&l.bg&&(l.extended=this._extendedAttrs[d]),l},E.prototype.setCell=function(d,l){2097152&l.content&&(this._combined[d]=l.combinedData),268435456&l.bg&&(this._extendedAttrs[d]=l.extended),this._data[3*d+0]=l.content,this._data[3*d+1]=l.fg,this._data[3*d+2]=l.bg},E.prototype.setCellFromCodePoint=function(d,l,N,W,Q,U){268435456&Q&&(this._extendedAttrs[d]=U),this._data[3*d+0]=l|N<<22,this._data[3*d+1]=W,this._data[3*d+2]=Q},E.prototype.addCodepointToCell=function(d,l){var N=this._data[3*d+0];2097152&N?this._combined[d]+=(0,t.stringFromCodePoint)(l):(2097151&N?(this._combined[d]=(0,t.stringFromCodePoint)(2097151&N)+(0,t.stringFromCodePoint)(l),N&=-2097152,N|=2097152):N=l|1<<22,this._data[3*d+0]=N)},E.prototype.insertCells=function(d,l,N,W){if((d%=this.length)&&this.getWidth(d-1)===2&&this.setCellFromCodePoint(d-1,0,1,(W==null?void 0:W.fg)||0,(W==null?void 0:W.bg)||0,(W==null?void 0:W.extended)||new S.ExtendedAttrs),l<this.length-d){for(var Q=new e.CellData,U=this.length-d-l-1;U>=0;--U)this.setCell(d+l+U,this.loadCell(d+U,Q));for(U=0;U<l;++U)this.setCell(d+U,N)}else for(U=d;U<this.length;++U)this.setCell(U,N);this.getWidth(this.length-1)===2&&this.setCellFromCodePoint(this.length-1,0,1,(W==null?void 0:W.fg)||0,(W==null?void 0:W.bg)||0,(W==null?void 0:W.extended)||new S.ExtendedAttrs)},E.prototype.deleteCells=function(d,l,N,W){if(d%=this.length,l<this.length-d){for(var Q=new e.CellData,U=0;U<this.length-d-l;++U)this.setCell(d+U,this.loadCell(d+l+U,Q));for(U=this.length-l;U<this.length;++U)this.setCell(U,N)}else for(U=d;U<this.length;++U)this.setCell(U,N);d&&this.getWidth(d-1)===2&&this.setCellFromCodePoint(d-1,0,1,(W==null?void 0:W.fg)||0,(W==null?void 0:W.bg)||0,(W==null?void 0:W.extended)||new S.ExtendedAttrs),this.getWidth(d)!==0||this.hasContent(d)||this.setCellFromCodePoint(d,0,1,(W==null?void 0:W.fg)||0,(W==null?void 0:W.bg)||0,(W==null?void 0:W.extended)||new S.ExtendedAttrs)},E.prototype.replaceCells=function(d,l,N,W){for(d&&this.getWidth(d-1)===2&&this.setCellFromCodePoint(d-1,0,1,(W==null?void 0:W.fg)||0,(W==null?void 0:W.bg)||0,(W==null?void 0:W.extended)||new S.ExtendedAttrs),l<this.length&&this.getWidth(l-1)===2&&this.setCellFromCodePoint(l,0,1,(W==null?void 0:W.fg)||0,(W==null?void 0:W.bg)||0,(W==null?void 0:W.extended)||new S.ExtendedAttrs);d<l&&d<this.length;)this.setCell(d++,N)},E.prototype.resize=function(d,l){if(d!==this.length){if(d>this.length){var N=new Uint32Array(3*d);this.length&&(3*d<this._data.length?N.set(this._data.subarray(0,3*d)):N.set(this._data)),this._data=N;for(var W=this.length;W<d;++W)this.setCell(W,l)}else if(d){(N=new Uint32Array(3*d)).set(this._data.subarray(0,3*d)),this._data=N;var Q=Object.keys(this._combined);for(W=0;W<Q.length;W++){var U=parseInt(Q[W],10);U>=d&&delete this._combined[U]}}else this._data=new Uint32Array(0),this._combined={};this.length=d}},E.prototype.fill=function(d){this._combined={},this._extendedAttrs={};for(var l=0;l<this.length;++l)this.setCell(l,d)},E.prototype.copyFrom=function(d){for(var l in this.length!==d.length?this._data=new Uint32Array(d._data):this._data.set(d._data),this.length=d.length,this._combined={},d._combined)this._combined[l]=d._combined[l];for(var l in this._extendedAttrs={},d._extendedAttrs)this._extendedAttrs[l]=d._extendedAttrs[l];this.isWrapped=d.isWrapped},E.prototype.clone=function(){var d=new E(0);for(var l in d._data=new Uint32Array(this._data),d.length=this.length,this._combined)d._combined[l]=this._combined[l];for(var l in this._extendedAttrs)d._extendedAttrs[l]=this._extendedAttrs[l];return d.isWrapped=this.isWrapped,d},E.prototype.getTrimmedLength=function(){for(var d=this.length-1;d>=0;--d)if(4194303&this._data[3*d+0])return d+(this._data[3*d+0]>>22);return 0},E.prototype.copyCellsFrom=function(d,l,N,W,Q){var U=d._data;if(Q)for(var F=W-1;F>=0;F--)for(var B=0;B<3;B++)this._data[3*(N+F)+B]=U[3*(l+F)+B];else for(F=0;F<W;F++)for(B=0;B<3;B++)this._data[3*(N+F)+B]=U[3*(l+F)+B];var R=Object.keys(d._combined);for(B=0;B<R.length;B++){var J=parseInt(R[B],10);J>=l&&(this._combined[J-l+N]=d._combined[J])}},E.prototype.translateToString=function(d,l,N){d===void 0&&(d=!1),l===void 0&&(l=0),N===void 0&&(N=this.length),d&&(N=Math.min(N,this.getTrimmedLength()));for(var W="";l<N;){var Q=this._data[3*l+0],U=2097151&Q;W+=2097152&Q?this._combined[l]:U?(0,t.stringFromCodePoint)(U):Z.WHITESPACE_CELL_CHAR,l+=Q>>22||1}return W},E}();n.BufferLine=r},4841:(x,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.getRangeLength=void 0,n.getRangeLength=function(o,t){if(o.start.y>o.end.y)throw new Error("Buffer range end ("+o.end.x+", "+o.end.y+") cannot be before start ("+o.start.x+", "+o.start.y+")");return t*(o.end.y-o.start.y)+(o.end.x-o.start.x+1)}},4634:(x,n)=>{function o(t,Z,e){if(Z===t.length-1)return t[Z].getTrimmedLength();var S=!t[Z].hasContent(e-1)&&t[Z].getWidth(e-1)===1,r=t[Z+1].getWidth(0)===2;return S&&r?e-1:e}Object.defineProperty(n,"__esModule",{value:!0}),n.getWrappedLineTrimmedLength=n.reflowSmallerGetNewLineLengths=n.reflowLargerApplyNewLayout=n.reflowLargerCreateNewLayout=n.reflowLargerGetLinesToRemove=void 0,n.reflowLargerGetLinesToRemove=function(t,Z,e,S,r){for(var E=[],d=0;d<t.length-1;d++){var l=d,N=t.get(++l);if(N.isWrapped){for(var W=[t.get(d)];l<t.length&&N.isWrapped;)W.push(N),N=t.get(++l);if(S>=d&&S<l)d+=W.length-1;else{for(var Q=0,U=o(W,Q,Z),F=1,B=0;F<W.length;){var R=o(W,F,Z),J=R-B,V=e-U,k=Math.min(J,V);W[Q].copyCellsFrom(W[F],B,U,k,!1),(U+=k)===e&&(Q++,U=0),(B+=k)===R&&(F++,B=0),U===0&&Q!==0&&W[Q-1].getWidth(e-1)===2&&(W[Q].copyCellsFrom(W[Q-1],e-1,U++,1,!1),W[Q-1].setCell(e-1,r))}W[Q].replaceCells(U,e,r);for(var i=0,a=W.length-1;a>0&&(a>Q||W[a].getTrimmedLength()===0);a--)i++;i>0&&(E.push(d+W.length-i),E.push(i)),d+=W.length-1}}}return E},n.reflowLargerCreateNewLayout=function(t,Z){for(var e=[],S=0,r=Z[S],E=0,d=0;d<t.length;d++)if(r===d){var l=Z[++S];t.onDeleteEmitter.fire({index:d-E,amount:l}),d+=l-1,E+=l,r=Z[++S]}else e.push(d);return{layout:e,countRemoved:E}},n.reflowLargerApplyNewLayout=function(t,Z){for(var e=[],S=0;S<Z.length;S++)e.push(t.get(Z[S]));for(S=0;S<e.length;S++)t.set(S,e[S]);t.length=Z.length},n.reflowSmallerGetNewLineLengths=function(t,Z,e){for(var S=[],r=t.map(function(U,F){return o(t,F,Z)}).reduce(function(U,F){return U+F}),E=0,d=0,l=0;l<r;){if(r-l<e){S.push(r-l);break}E+=e;var N=o(t,d,Z);E>N&&(E-=N,d++);var W=t[d].getWidth(E-1)===2;W&&E--;var Q=W?e-1:e;S.push(Q),l+=Q}return S},n.getWrappedLineTrimmedLength=o},5295:function(x,n,o){var t,Z=this&&this.__extends||(t=function(E,d){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(l,N){l.__proto__=N}||function(l,N){for(var W in N)Object.prototype.hasOwnProperty.call(N,W)&&(l[W]=N[W])},t(E,d)},function(E,d){if(typeof d!="function"&&d!==null)throw new TypeError("Class extends value "+String(d)+" is not a constructor or null");function l(){this.constructor=E}t(E,d),E.prototype=d===null?Object.create(d):(l.prototype=d.prototype,new l)});Object.defineProperty(n,"__esModule",{value:!0}),n.BufferSet=void 0;var e=o(9092),S=o(8460),r=function(E){function d(l,N){var W=E.call(this)||this;return W._optionsService=l,W._bufferService=N,W._onBufferActivate=W.register(new S.EventEmitter),W.reset(),W}return Z(d,E),Object.defineProperty(d.prototype,"onBufferActivate",{get:function(){return this._onBufferActivate.event},enumerable:!1,configurable:!0}),d.prototype.reset=function(){this._normal=new e.Buffer(!0,this._optionsService,this._bufferService),this._normal.fillViewportRows(),this._alt=new e.Buffer(!1,this._optionsService,this._bufferService),this._activeBuffer=this._normal,this._onBufferActivate.fire({activeBuffer:this._normal,inactiveBuffer:this._alt}),this.setupTabStops()},Object.defineProperty(d.prototype,"alt",{get:function(){return this._alt},enumerable:!1,configurable:!0}),Object.defineProperty(d.prototype,"active",{get:function(){return this._activeBuffer},enumerable:!1,configurable:!0}),Object.defineProperty(d.prototype,"normal",{get:function(){return this._normal},enumerable:!1,configurable:!0}),d.prototype.activateNormalBuffer=function(){this._activeBuffer!==this._normal&&(this._normal.x=this._alt.x,this._normal.y=this._alt.y,this._alt.clear(),this._activeBuffer=this._normal,this._onBufferActivate.fire({activeBuffer:this._normal,inactiveBuffer:this._alt}))},d.prototype.activateAltBuffer=function(l){this._activeBuffer!==this._alt&&(this._alt.fillViewportRows(l),this._alt.x=this._normal.x,this._alt.y=this._normal.y,this._activeBuffer=this._alt,this._onBufferActivate.fire({activeBuffer:this._alt,inactiveBuffer:this._normal}))},d.prototype.resize=function(l,N){this._normal.resize(l,N),this._alt.resize(l,N)},d.prototype.setupTabStops=function(l){this._normal.setupTabStops(l),this._alt.setupTabStops(l)},d}(o(844).Disposable);n.BufferSet=r},511:function(x,n,o){var t,Z=this&&this.__extends||(t=function(d,l){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(N,W){N.__proto__=W}||function(N,W){for(var Q in W)Object.prototype.hasOwnProperty.call(W,Q)&&(N[Q]=W[Q])},t(d,l)},function(d,l){if(typeof l!="function"&&l!==null)throw new TypeError("Class extends value "+String(l)+" is not a constructor or null");function N(){this.constructor=d}t(d,l),d.prototype=l===null?Object.create(l):(N.prototype=l.prototype,new N)});Object.defineProperty(n,"__esModule",{value:!0}),n.CellData=void 0;var e=o(482),S=o(643),r=o(3734),E=function(d){function l(){var N=d!==null&&d.apply(this,arguments)||this;return N.content=0,N.fg=0,N.bg=0,N.extended=new r.ExtendedAttrs,N.combinedData="",N}return Z(l,d),l.fromCharData=function(N){var W=new l;return W.setFromCharData(N),W},l.prototype.isCombined=function(){return 2097152&this.content},l.prototype.getWidth=function(){return this.content>>22},l.prototype.getChars=function(){return 2097152&this.content?this.combinedData:2097151&this.content?(0,e.stringFromCodePoint)(2097151&this.content):""},l.prototype.getCode=function(){return this.isCombined()?this.combinedData.charCodeAt(this.combinedData.length-1):2097151&this.content},l.prototype.setFromCharData=function(N){this.fg=N[S.CHAR_DATA_ATTR_INDEX],this.bg=0;var W=!1;if(N[S.CHAR_DATA_CHAR_INDEX].length>2)W=!0;else if(N[S.CHAR_DATA_CHAR_INDEX].length===2){var Q=N[S.CHAR_DATA_CHAR_INDEX].charCodeAt(0);if(55296<=Q&&Q<=56319){var U=N[S.CHAR_DATA_CHAR_INDEX].charCodeAt(1);56320<=U&&U<=57343?this.content=1024*(Q-55296)+U-56320+65536|N[S.CHAR_DATA_WIDTH_INDEX]<<22:W=!0}else W=!0}else this.content=N[S.CHAR_DATA_CHAR_INDEX].charCodeAt(0)|N[S.CHAR_DATA_WIDTH_INDEX]<<22;W&&(this.combinedData=N[S.CHAR_DATA_CHAR_INDEX],this.content=2097152|N[S.CHAR_DATA_WIDTH_INDEX]<<22)},l.prototype.getAsCharData=function(){return[this.fg,this.getChars(),this.getWidth(),this.getCode()]},l}(r.AttributeData);n.CellData=E},643:(x,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.WHITESPACE_CELL_CODE=n.WHITESPACE_CELL_WIDTH=n.WHITESPACE_CELL_CHAR=n.NULL_CELL_CODE=n.NULL_CELL_WIDTH=n.NULL_CELL_CHAR=n.CHAR_DATA_CODE_INDEX=n.CHAR_DATA_WIDTH_INDEX=n.CHAR_DATA_CHAR_INDEX=n.CHAR_DATA_ATTR_INDEX=n.DEFAULT_ATTR=n.DEFAULT_COLOR=void 0,n.DEFAULT_COLOR=256,n.DEFAULT_ATTR=256|n.DEFAULT_COLOR<<9,n.CHAR_DATA_ATTR_INDEX=0,n.CHAR_DATA_CHAR_INDEX=1,n.CHAR_DATA_WIDTH_INDEX=2,n.CHAR_DATA_CODE_INDEX=3,n.NULL_CELL_CHAR="",n.NULL_CELL_WIDTH=1,n.NULL_CELL_CODE=0,n.WHITESPACE_CELL_CHAR=" ",n.WHITESPACE_CELL_WIDTH=1,n.WHITESPACE_CELL_CODE=32},4863:function(x,n,o){var t,Z=this&&this.__extends||(t=function(r,E){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,l){d.__proto__=l}||function(d,l){for(var N in l)Object.prototype.hasOwnProperty.call(l,N)&&(d[N]=l[N])},t(r,E)},function(r,E){if(typeof E!="function"&&E!==null)throw new TypeError("Class extends value "+String(E)+" is not a constructor or null");function d(){this.constructor=r}t(r,E),r.prototype=E===null?Object.create(E):(d.prototype=E.prototype,new d)});Object.defineProperty(n,"__esModule",{value:!0}),n.Marker=void 0;var e=o(8460),S=function(r){function E(d){var l=r.call(this)||this;return l.line=d,l._id=E._nextId++,l.isDisposed=!1,l._onDispose=new e.EventEmitter,l}return Z(E,r),Object.defineProperty(E.prototype,"id",{get:function(){return this._id},enumerable:!1,configurable:!0}),Object.defineProperty(E.prototype,"onDispose",{get:function(){return this._onDispose.event},enumerable:!1,configurable:!0}),E.prototype.dispose=function(){this.isDisposed||(this.isDisposed=!0,this.line=-1,this._onDispose.fire(),r.prototype.dispose.call(this))},E._nextId=1,E}(o(844).Disposable);n.Marker=S},7116:(x,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.DEFAULT_CHARSET=n.CHARSETS=void 0,n.CHARSETS={},n.DEFAULT_CHARSET=n.CHARSETS.B,n.CHARSETS[0]={"`":"\u25C6",a:"\u2592",b:"\u2409",c:"\u240C",d:"\u240D",e:"\u240A",f:"\xB0",g:"\xB1",h:"\u2424",i:"\u240B",j:"\u2518",k:"\u2510",l:"\u250C",m:"\u2514",n:"\u253C",o:"\u23BA",p:"\u23BB",q:"\u2500",r:"\u23BC",s:"\u23BD",t:"\u251C",u:"\u2524",v:"\u2534",w:"\u252C",x:"\u2502",y:"\u2264",z:"\u2265","{":"\u03C0","|":"\u2260","}":"\xA3","~":"\xB7"},n.CHARSETS.A={"#":"\xA3"},n.CHARSETS.B=void 0,n.CHARSETS[4]={"#":"\xA3","@":"\xBE","[":"ij","\\":"\xBD","]":"|","{":"\xA8","|":"f","}":"\xBC","~":"\xB4"},n.CHARSETS.C=n.CHARSETS[5]={"[":"\xC4","\\":"\xD6","]":"\xC5","^":"\xDC","`":"\xE9","{":"\xE4","|":"\xF6","}":"\xE5","~":"\xFC"},n.CHARSETS.R={"#":"\xA3","@":"\xE0","[":"\xB0","\\":"\xE7","]":"\xA7","{":"\xE9","|":"\xF9","}":"\xE8","~":"\xA8"},n.CHARSETS.Q={"@":"\xE0","[":"\xE2","\\":"\xE7","]":"\xEA","^":"\xEE","`":"\xF4","{":"\xE9","|":"\xF9","}":"\xE8","~":"\xFB"},n.CHARSETS.K={"@":"\xA7","[":"\xC4","\\":"\xD6","]":"\xDC","{":"\xE4","|":"\xF6","}":"\xFC","~":"\xDF"},n.CHARSETS.Y={"#":"\xA3","@":"\xA7","[":"\xB0","\\":"\xE7","]":"\xE9","`":"\xF9","{":"\xE0","|":"\xF2","}":"\xE8","~":"\xEC"},n.CHARSETS.E=n.CHARSETS[6]={"@":"\xC4","[":"\xC6","\\":"\xD8","]":"\xC5","^":"\xDC","`":"\xE4","{":"\xE6","|":"\xF8","}":"\xE5","~":"\xFC"},n.CHARSETS.Z={"#":"\xA3","@":"\xA7","[":"\xA1","\\":"\xD1","]":"\xBF","{":"\xB0","|":"\xF1","}":"\xE7"},n.CHARSETS.H=n.CHARSETS[7]={"@":"\xC9","[":"\xC4","\\":"\xD6","]":"\xC5","^":"\xDC","`":"\xE9","{":"\xE4","|":"\xF6","}":"\xE5","~":"\xFC"},n.CHARSETS["="]={"#":"\xF9","@":"\xE0","[":"\xE9","\\":"\xE7","]":"\xEA","^":"\xEE",_:"\xE8","`":"\xF4","{":"\xE4","|":"\xF6","}":"\xFC","~":"\xFB"}},2584:(x,n)=>{var o,t;Object.defineProperty(n,"__esModule",{value:!0}),n.C1_ESCAPED=n.C1=n.C0=void 0,function(Z){Z.NUL="\0",Z.SOH="",Z.STX="",Z.ETX="",Z.EOT="",Z.ENQ="",Z.ACK="",Z.BEL="\x07",Z.BS="\b",Z.HT="	",Z.LF=`
`,Z.VT="\v",Z.FF="\f",Z.CR="\r",Z.SO="",Z.SI="",Z.DLE="",Z.DC1="",Z.DC2="",Z.DC3="",Z.DC4="",Z.NAK="",Z.SYN="",Z.ETB="",Z.CAN="",Z.EM="",Z.SUB="",Z.ESC="\x1B",Z.FS="",Z.GS="",Z.RS="",Z.US="",Z.SP=" ",Z.DEL="\x7F"}(o=n.C0||(n.C0={})),(t=n.C1||(n.C1={})).PAD="\x80",t.HOP="\x81",t.BPH="\x82",t.NBH="\x83",t.IND="\x84",t.NEL="\x85",t.SSA="\x86",t.ESA="\x87",t.HTS="\x88",t.HTJ="\x89",t.VTS="\x8A",t.PLD="\x8B",t.PLU="\x8C",t.RI="\x8D",t.SS2="\x8E",t.SS3="\x8F",t.DCS="\x90",t.PU1="\x91",t.PU2="\x92",t.STS="\x93",t.CCH="\x94",t.MW="\x95",t.SPA="\x96",t.EPA="\x97",t.SOS="\x98",t.SGCI="\x99",t.SCI="\x9A",t.CSI="\x9B",t.ST="\x9C",t.OSC="\x9D",t.PM="\x9E",t.APC="\x9F",(n.C1_ESCAPED||(n.C1_ESCAPED={})).ST=o.ESC+"\\"},7399:(x,n,o)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.evaluateKeyboardEvent=void 0;var t=o(2584),Z={48:["0",")"],49:["1","!"],50:["2","@"],51:["3","#"],52:["4","$"],53:["5","%"],54:["6","^"],55:["7","&"],56:["8","*"],57:["9","("],186:[";",":"],187:["=","+"],188:[",","<"],189:["-","_"],190:[".",">"],191:["/","?"],192:["`","~"],219:["[","{"],220:["\\","|"],221:["]","}"],222:["'",'"']};n.evaluateKeyboardEvent=function(e,S,r,E){var d={type:0,cancel:!1,key:void 0},l=(e.shiftKey?1:0)|(e.altKey?2:0)|(e.ctrlKey?4:0)|(e.metaKey?8:0);switch(e.keyCode){case 0:e.key==="UIKeyInputUpArrow"?d.key=S?t.C0.ESC+"OA":t.C0.ESC+"[A":e.key==="UIKeyInputLeftArrow"?d.key=S?t.C0.ESC+"OD":t.C0.ESC+"[D":e.key==="UIKeyInputRightArrow"?d.key=S?t.C0.ESC+"OC":t.C0.ESC+"[C":e.key==="UIKeyInputDownArrow"&&(d.key=S?t.C0.ESC+"OB":t.C0.ESC+"[B");break;case 8:if(e.shiftKey){d.key=t.C0.BS;break}if(e.altKey){d.key=t.C0.ESC+t.C0.DEL;break}d.key=t.C0.DEL;break;case 9:if(e.shiftKey){d.key=t.C0.ESC+"[Z";break}d.key=t.C0.HT,d.cancel=!0;break;case 13:d.key=e.altKey?t.C0.ESC+t.C0.CR:t.C0.CR,d.cancel=!0;break;case 27:d.key=t.C0.ESC,e.altKey&&(d.key=t.C0.ESC+t.C0.ESC),d.cancel=!0;break;case 37:if(e.metaKey)break;l?(d.key=t.C0.ESC+"[1;"+(l+1)+"D",d.key===t.C0.ESC+"[1;3D"&&(d.key=t.C0.ESC+(r?"b":"[1;5D"))):d.key=S?t.C0.ESC+"OD":t.C0.ESC+"[D";break;case 39:if(e.metaKey)break;l?(d.key=t.C0.ESC+"[1;"+(l+1)+"C",d.key===t.C0.ESC+"[1;3C"&&(d.key=t.C0.ESC+(r?"f":"[1;5C"))):d.key=S?t.C0.ESC+"OC":t.C0.ESC+"[C";break;case 38:if(e.metaKey)break;l?(d.key=t.C0.ESC+"[1;"+(l+1)+"A",r||d.key!==t.C0.ESC+"[1;3A"||(d.key=t.C0.ESC+"[1;5A")):d.key=S?t.C0.ESC+"OA":t.C0.ESC+"[A";break;case 40:if(e.metaKey)break;l?(d.key=t.C0.ESC+"[1;"+(l+1)+"B",r||d.key!==t.C0.ESC+"[1;3B"||(d.key=t.C0.ESC+"[1;5B")):d.key=S?t.C0.ESC+"OB":t.C0.ESC+"[B";break;case 45:e.shiftKey||e.ctrlKey||(d.key=t.C0.ESC+"[2~");break;case 46:d.key=l?t.C0.ESC+"[3;"+(l+1)+"~":t.C0.ESC+"[3~";break;case 36:d.key=l?t.C0.ESC+"[1;"+(l+1)+"H":S?t.C0.ESC+"OH":t.C0.ESC+"[H";break;case 35:d.key=l?t.C0.ESC+"[1;"+(l+1)+"F":S?t.C0.ESC+"OF":t.C0.ESC+"[F";break;case 33:e.shiftKey?d.type=2:e.ctrlKey?d.key=t.C0.ESC+"[5;"+(l+1)+"~":d.key=t.C0.ESC+"[5~";break;case 34:e.shiftKey?d.type=3:e.ctrlKey?d.key=t.C0.ESC+"[6;"+(l+1)+"~":d.key=t.C0.ESC+"[6~";break;case 112:d.key=l?t.C0.ESC+"[1;"+(l+1)+"P":t.C0.ESC+"OP";break;case 113:d.key=l?t.C0.ESC+"[1;"+(l+1)+"Q":t.C0.ESC+"OQ";break;case 114:d.key=l?t.C0.ESC+"[1;"+(l+1)+"R":t.C0.ESC+"OR";break;case 115:d.key=l?t.C0.ESC+"[1;"+(l+1)+"S":t.C0.ESC+"OS";break;case 116:d.key=l?t.C0.ESC+"[15;"+(l+1)+"~":t.C0.ESC+"[15~";break;case 117:d.key=l?t.C0.ESC+"[17;"+(l+1)+"~":t.C0.ESC+"[17~";break;case 118:d.key=l?t.C0.ESC+"[18;"+(l+1)+"~":t.C0.ESC+"[18~";break;case 119:d.key=l?t.C0.ESC+"[19;"+(l+1)+"~":t.C0.ESC+"[19~";break;case 120:d.key=l?t.C0.ESC+"[20;"+(l+1)+"~":t.C0.ESC+"[20~";break;case 121:d.key=l?t.C0.ESC+"[21;"+(l+1)+"~":t.C0.ESC+"[21~";break;case 122:d.key=l?t.C0.ESC+"[23;"+(l+1)+"~":t.C0.ESC+"[23~";break;case 123:d.key=l?t.C0.ESC+"[24;"+(l+1)+"~":t.C0.ESC+"[24~";break;default:if(!e.ctrlKey||e.shiftKey||e.altKey||e.metaKey)if(r&&!E||!e.altKey||e.metaKey)!r||e.altKey||e.ctrlKey||e.shiftKey||!e.metaKey?e.key&&!e.ctrlKey&&!e.altKey&&!e.metaKey&&e.keyCode>=48&&e.key.length===1?d.key=e.key:e.key&&e.ctrlKey&&(e.key==="_"&&(d.key=t.C0.US),e.key==="@"&&(d.key=t.C0.NUL)):e.keyCode===65&&(d.type=1);else{var N=Z[e.keyCode],W=N==null?void 0:N[e.shiftKey?1:0];if(W)d.key=t.C0.ESC+W;else if(e.keyCode>=65&&e.keyCode<=90){var Q=e.ctrlKey?e.keyCode-64:e.keyCode+32,U=String.fromCharCode(Q);e.shiftKey&&(U=U.toUpperCase()),d.key=t.C0.ESC+U}else e.key==="Dead"&&e.code.startsWith("Key")&&(U=e.code.slice(3,4),e.shiftKey||(U=U.toLowerCase()),d.key=t.C0.ESC+U,d.cancel=!0)}else e.keyCode>=65&&e.keyCode<=90?d.key=String.fromCharCode(e.keyCode-64):e.keyCode===32?d.key=t.C0.NUL:e.keyCode>=51&&e.keyCode<=55?d.key=String.fromCharCode(e.keyCode-51+27):e.keyCode===56?d.key=t.C0.DEL:e.keyCode===219?d.key=t.C0.ESC:e.keyCode===220?d.key=t.C0.FS:e.keyCode===221&&(d.key=t.C0.GS)}return d}},482:(x,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.Utf8ToUtf32=n.StringToUtf32=n.utf32ToString=n.stringFromCodePoint=void 0,n.stringFromCodePoint=function(Z){return Z>65535?(Z-=65536,String.fromCharCode(55296+(Z>>10))+String.fromCharCode(Z%1024+56320)):String.fromCharCode(Z)},n.utf32ToString=function(Z,e,S){e===void 0&&(e=0),S===void 0&&(S=Z.length);for(var r="",E=e;E<S;++E){var d=Z[E];d>65535?(d-=65536,r+=String.fromCharCode(55296+(d>>10))+String.fromCharCode(d%1024+56320)):r+=String.fromCharCode(d)}return r};var o=function(){function Z(){this._interim=0}return Z.prototype.clear=function(){this._interim=0},Z.prototype.decode=function(e,S){var r=e.length;if(!r)return 0;var E=0,d=0;this._interim&&(56320<=(W=e.charCodeAt(d++))&&W<=57343?S[E++]=1024*(this._interim-55296)+W-56320+65536:(S[E++]=this._interim,S[E++]=W),this._interim=0);for(var l=d;l<r;++l){var N=e.charCodeAt(l);if(55296<=N&&N<=56319){if(++l>=r)return this._interim=N,E;var W;56320<=(W=e.charCodeAt(l))&&W<=57343?S[E++]=1024*(N-55296)+W-56320+65536:(S[E++]=N,S[E++]=W)}else N!==65279&&(S[E++]=N)}return E},Z}();n.StringToUtf32=o;var t=function(){function Z(){this.interim=new Uint8Array(3)}return Z.prototype.clear=function(){this.interim.fill(0)},Z.prototype.decode=function(e,S){var r=e.length;if(!r)return 0;var E,d,l,N,W=0,Q=0,U=0;if(this.interim[0]){var F=!1,B=this.interim[0];B&=(224&B)==192?31:(240&B)==224?15:7;for(var R=0,J=void 0;(J=63&this.interim[++R])&&R<4;)B<<=6,B|=J;for(var V=(224&this.interim[0])==192?2:(240&this.interim[0])==224?3:4,k=V-R;U<k;){if(U>=r)return 0;if((192&(J=e[U++]))!=128){U--,F=!0;break}this.interim[R++]=J,B<<=6,B|=63&J}F||(V===2?B<128?U--:S[W++]=B:V===3?B<2048||B>=55296&&B<=57343||B===65279||(S[W++]=B):B<65536||B>1114111||(S[W++]=B)),this.interim.fill(0)}for(var i=r-4,a=U;a<r;){for(;!(!(a<i)||128&(E=e[a])||128&(d=e[a+1])||128&(l=e[a+2])||128&(N=e[a+3]));)S[W++]=E,S[W++]=d,S[W++]=l,S[W++]=N,a+=4;if((E=e[a++])<128)S[W++]=E;else if((224&E)==192){if(a>=r)return this.interim[0]=E,W;if((192&(d=e[a++]))!=128){a--;continue}if((Q=(31&E)<<6|63&d)<128){a--;continue}S[W++]=Q}else if((240&E)==224){if(a>=r)return this.interim[0]=E,W;if((192&(d=e[a++]))!=128){a--;continue}if(a>=r)return this.interim[0]=E,this.interim[1]=d,W;if((192&(l=e[a++]))!=128){a--;continue}if((Q=(15&E)<<12|(63&d)<<6|63&l)<2048||Q>=55296&&Q<=57343||Q===65279)continue;S[W++]=Q}else if((248&E)==240){if(a>=r)return this.interim[0]=E,W;if((192&(d=e[a++]))!=128){a--;continue}if(a>=r)return this.interim[0]=E,this.interim[1]=d,W;if((192&(l=e[a++]))!=128){a--;continue}if(a>=r)return this.interim[0]=E,this.interim[1]=d,this.interim[2]=l,W;if((192&(N=e[a++]))!=128){a--;continue}if((Q=(7&E)<<18|(63&d)<<12|(63&l)<<6|63&N)<65536||Q>1114111)continue;S[W++]=Q}}return W},Z}();n.Utf8ToUtf32=t},225:(x,n,o)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.UnicodeV6=void 0;var t,Z=o(8273),e=[[768,879],[1155,1158],[1160,1161],[1425,1469],[1471,1471],[1473,1474],[1476,1477],[1479,1479],[1536,1539],[1552,1557],[1611,1630],[1648,1648],[1750,1764],[1767,1768],[1770,1773],[1807,1807],[1809,1809],[1840,1866],[1958,1968],[2027,2035],[2305,2306],[2364,2364],[2369,2376],[2381,2381],[2385,2388],[2402,2403],[2433,2433],[2492,2492],[2497,2500],[2509,2509],[2530,2531],[2561,2562],[2620,2620],[2625,2626],[2631,2632],[2635,2637],[2672,2673],[2689,2690],[2748,2748],[2753,2757],[2759,2760],[2765,2765],[2786,2787],[2817,2817],[2876,2876],[2879,2879],[2881,2883],[2893,2893],[2902,2902],[2946,2946],[3008,3008],[3021,3021],[3134,3136],[3142,3144],[3146,3149],[3157,3158],[3260,3260],[3263,3263],[3270,3270],[3276,3277],[3298,3299],[3393,3395],[3405,3405],[3530,3530],[3538,3540],[3542,3542],[3633,3633],[3636,3642],[3655,3662],[3761,3761],[3764,3769],[3771,3772],[3784,3789],[3864,3865],[3893,3893],[3895,3895],[3897,3897],[3953,3966],[3968,3972],[3974,3975],[3984,3991],[3993,4028],[4038,4038],[4141,4144],[4146,4146],[4150,4151],[4153,4153],[4184,4185],[4448,4607],[4959,4959],[5906,5908],[5938,5940],[5970,5971],[6002,6003],[6068,6069],[6071,6077],[6086,6086],[6089,6099],[6109,6109],[6155,6157],[6313,6313],[6432,6434],[6439,6440],[6450,6450],[6457,6459],[6679,6680],[6912,6915],[6964,6964],[6966,6970],[6972,6972],[6978,6978],[7019,7027],[7616,7626],[7678,7679],[8203,8207],[8234,8238],[8288,8291],[8298,8303],[8400,8431],[12330,12335],[12441,12442],[43014,43014],[43019,43019],[43045,43046],[64286,64286],[65024,65039],[65056,65059],[65279,65279],[65529,65531]],S=[[68097,68099],[68101,68102],[68108,68111],[68152,68154],[68159,68159],[119143,119145],[119155,119170],[119173,119179],[119210,119213],[119362,119364],[917505,917505],[917536,917631],[917760,917999]],r=function(){function E(){if(this.version="6",!t){t=new Uint8Array(65536),(0,Z.fill)(t,1),t[0]=0,(0,Z.fill)(t,0,1,32),(0,Z.fill)(t,0,127,160),(0,Z.fill)(t,2,4352,4448),t[9001]=2,t[9002]=2,(0,Z.fill)(t,2,11904,42192),t[12351]=1,(0,Z.fill)(t,2,44032,55204),(0,Z.fill)(t,2,63744,64256),(0,Z.fill)(t,2,65040,65050),(0,Z.fill)(t,2,65072,65136),(0,Z.fill)(t,2,65280,65377),(0,Z.fill)(t,2,65504,65511);for(var d=0;d<e.length;++d)(0,Z.fill)(t,0,e[d][0],e[d][1]+1)}}return E.prototype.wcwidth=function(d){return d<32?0:d<127?1:d<65536?t[d]:function(l,N){var W,Q=0,U=N.length-1;if(l<N[0][0]||l>N[U][1])return!1;for(;U>=Q;)if(l>N[W=Q+U>>1][1])Q=W+1;else{if(!(l<N[W][0]))return!0;U=W-1}return!1}(d,S)?0:d>=131072&&d<=196605||d>=196608&&d<=262141?2:1},E}();n.UnicodeV6=r},5981:(x,n,o)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.WriteBuffer=void 0;var t=o(8460),Z=typeof queueMicrotask>"u"?function(S){Promise.resolve().then(S)}:queueMicrotask,e=function(){function S(r){this._action=r,this._writeBuffer=[],this._callbacks=[],this._pendingData=0,this._bufferOffset=0,this._isSyncWriting=!1,this._syncCalls=0,this._onWriteParsed=new t.EventEmitter}return Object.defineProperty(S.prototype,"onWriteParsed",{get:function(){return this._onWriteParsed.event},enumerable:!1,configurable:!0}),S.prototype.writeSync=function(r,E){if(E!==void 0&&this._syncCalls>E)this._syncCalls=0;else if(this._pendingData+=r.length,this._writeBuffer.push(r),this._callbacks.push(void 0),this._syncCalls++,!this._isSyncWriting){var d;for(this._isSyncWriting=!0;d=this._writeBuffer.shift();){this._action(d);var l=this._callbacks.shift();l&&l()}this._pendingData=0,this._bufferOffset=2147483647,this._isSyncWriting=!1,this._syncCalls=0}},S.prototype.write=function(r,E){var d=this;if(this._pendingData>5e7)throw new Error("write data discarded, use flow control to avoid losing data");this._writeBuffer.length||(this._bufferOffset=0,setTimeout(function(){return d._innerWrite()})),this._pendingData+=r.length,this._writeBuffer.push(r),this._callbacks.push(E)},S.prototype._innerWrite=function(r,E){var d=this;r===void 0&&(r=0),E===void 0&&(E=!0);for(var l=r||Date.now();this._writeBuffer.length>this._bufferOffset;){var N=this._writeBuffer[this._bufferOffset],W=this._action(N,E);if(W)return void W.catch(function(U){return Z(function(){throw U}),Promise.resolve(!1)}).then(function(U){return Date.now()-l>=12?setTimeout(function(){return d._innerWrite(0,U)}):d._innerWrite(l,U)});var Q=this._callbacks[this._bufferOffset];if(Q&&Q(),this._bufferOffset++,this._pendingData-=N.length,Date.now()-l>=12)break}this._writeBuffer.length>this._bufferOffset?(this._bufferOffset>50&&(this._writeBuffer=this._writeBuffer.slice(this._bufferOffset),this._callbacks=this._callbacks.slice(this._bufferOffset),this._bufferOffset=0),setTimeout(function(){return d._innerWrite()})):(this._writeBuffer.length=0,this._callbacks.length=0,this._pendingData=0,this._bufferOffset=0),this._onWriteParsed.fire()},S}();n.WriteBuffer=e},5941:function(x,n){var o=this&&this.__read||function(S,r){var E=typeof Symbol=="function"&&S[Symbol.iterator];if(!E)return S;var d,l,N=E.call(S),W=[];try{for(;(r===void 0||r-- >0)&&!(d=N.next()).done;)W.push(d.value)}catch(Q){l={error:Q}}finally{try{d&&!d.done&&(E=N.return)&&E.call(N)}finally{if(l)throw l.error}}return W};Object.defineProperty(n,"__esModule",{value:!0}),n.toRgbString=n.parseColor=void 0;var t=/^([\da-f])\/([\da-f])\/([\da-f])$|^([\da-f]{2})\/([\da-f]{2})\/([\da-f]{2})$|^([\da-f]{3})\/([\da-f]{3})\/([\da-f]{3})$|^([\da-f]{4})\/([\da-f]{4})\/([\da-f]{4})$/,Z=/^[\da-f]+$/;function e(S,r){var E=S.toString(16),d=E.length<2?"0"+E:E;switch(r){case 4:return E[0];case 8:return d;case 12:return(d+d).slice(0,3);default:return d+d}}n.parseColor=function(S){if(S){var r=S.toLowerCase();if(r.indexOf("rgb:")===0){r=r.slice(4);var E=t.exec(r);if(E){var d=E[1]?15:E[4]?255:E[7]?4095:65535;return[Math.round(parseInt(E[1]||E[4]||E[7]||E[10],16)/d*255),Math.round(parseInt(E[2]||E[5]||E[8]||E[11],16)/d*255),Math.round(parseInt(E[3]||E[6]||E[9]||E[12],16)/d*255)]}}else if(r.indexOf("#")===0&&(r=r.slice(1),Z.exec(r)&&[3,6,9,12].includes(r.length))){for(var l=r.length/3,N=[0,0,0],W=0;W<3;++W){var Q=parseInt(r.slice(l*W,l*W+l),16);N[W]=l===1?Q<<4:l===2?Q:l===3?Q>>4:Q>>8}return N}}},n.toRgbString=function(S,r){r===void 0&&(r=16);var E=o(S,3),d=E[0],l=E[1],N=E[2];return"rgb:"+e(d,r)+"/"+e(l,r)+"/"+e(N,r)}},5770:(x,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.PAYLOAD_LIMIT=void 0,n.PAYLOAD_LIMIT=1e7},6351:(x,n,o)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.DcsHandler=n.DcsParser=void 0;var t=o(482),Z=o(8742),e=o(5770),S=[],r=function(){function l(){this._handlers=Object.create(null),this._active=S,this._ident=0,this._handlerFb=function(){},this._stack={paused:!1,loopPosition:0,fallThrough:!1}}return l.prototype.dispose=function(){this._handlers=Object.create(null),this._handlerFb=function(){},this._active=S},l.prototype.registerHandler=function(N,W){this._handlers[N]===void 0&&(this._handlers[N]=[]);var Q=this._handlers[N];return Q.push(W),{dispose:function(){var U=Q.indexOf(W);U!==-1&&Q.splice(U,1)}}},l.prototype.clearHandler=function(N){this._handlers[N]&&delete this._handlers[N]},l.prototype.setHandlerFallback=function(N){this._handlerFb=N},l.prototype.reset=function(){if(this._active.length)for(var N=this._stack.paused?this._stack.loopPosition-1:this._active.length-1;N>=0;--N)this._active[N].unhook(!1);this._stack.paused=!1,this._active=S,this._ident=0},l.prototype.hook=function(N,W){if(this.reset(),this._ident=N,this._active=this._handlers[N]||S,this._active.length)for(var Q=this._active.length-1;Q>=0;Q--)this._active[Q].hook(W);else this._handlerFb(this._ident,"HOOK",W)},l.prototype.put=function(N,W,Q){if(this._active.length)for(var U=this._active.length-1;U>=0;U--)this._active[U].put(N,W,Q);else this._handlerFb(this._ident,"PUT",(0,t.utf32ToString)(N,W,Q))},l.prototype.unhook=function(N,W){if(W===void 0&&(W=!0),this._active.length){var Q=!1,U=this._active.length-1,F=!1;if(this._stack.paused&&(U=this._stack.loopPosition-1,Q=W,F=this._stack.fallThrough,this._stack.paused=!1),!F&&Q===!1){for(;U>=0&&(Q=this._active[U].unhook(N))!==!0;U--)if(Q instanceof Promise)return this._stack.paused=!0,this._stack.loopPosition=U,this._stack.fallThrough=!1,Q;U--}for(;U>=0;U--)if((Q=this._active[U].unhook(!1))instanceof Promise)return this._stack.paused=!0,this._stack.loopPosition=U,this._stack.fallThrough=!0,Q}else this._handlerFb(this._ident,"UNHOOK",N);this._active=S,this._ident=0},l}();n.DcsParser=r;var E=new Z.Params;E.addParam(0);var d=function(){function l(N){this._handler=N,this._data="",this._params=E,this._hitLimit=!1}return l.prototype.hook=function(N){this._params=N.length>1||N.params[0]?N.clone():E,this._data="",this._hitLimit=!1},l.prototype.put=function(N,W,Q){this._hitLimit||(this._data+=(0,t.utf32ToString)(N,W,Q),this._data.length>e.PAYLOAD_LIMIT&&(this._data="",this._hitLimit=!0))},l.prototype.unhook=function(N){var W=this,Q=!1;if(this._hitLimit)Q=!1;else if(N&&(Q=this._handler(this._data,this._params))instanceof Promise)return Q.then(function(U){return W._params=E,W._data="",W._hitLimit=!1,U});return this._params=E,this._data="",this._hitLimit=!1,Q},l}();n.DcsHandler=d},2015:function(x,n,o){var t,Z=this&&this.__extends||(t=function(Q,U){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(F,B){F.__proto__=B}||function(F,B){for(var R in B)Object.prototype.hasOwnProperty.call(B,R)&&(F[R]=B[R])},t(Q,U)},function(Q,U){if(typeof U!="function"&&U!==null)throw new TypeError("Class extends value "+String(U)+" is not a constructor or null");function F(){this.constructor=Q}t(Q,U),Q.prototype=U===null?Object.create(U):(F.prototype=U.prototype,new F)});Object.defineProperty(n,"__esModule",{value:!0}),n.EscapeSequenceParser=n.VT500_TRANSITION_TABLE=n.TransitionTable=void 0;var e=o(844),S=o(8273),r=o(8742),E=o(6242),d=o(6351),l=function(){function Q(U){this.table=new Uint8Array(U)}return Q.prototype.setDefault=function(U,F){(0,S.fill)(this.table,U<<4|F)},Q.prototype.add=function(U,F,B,R){this.table[F<<8|U]=B<<4|R},Q.prototype.addMany=function(U,F,B,R){for(var J=0;J<U.length;J++)this.table[F<<8|U[J]]=B<<4|R},Q}();n.TransitionTable=l;var N=160;n.VT500_TRANSITION_TABLE=function(){var Q=new l(4095),U=Array.apply(null,Array(256)).map(function(k,i){return i}),F=function(k,i){return U.slice(k,i)},B=F(32,127),R=F(0,24);R.push(25),R.push.apply(R,F(28,32));var J,V=F(0,14);for(J in Q.setDefault(1,0),Q.addMany(B,0,2,0),V)Q.addMany([24,26,153,154],J,3,0),Q.addMany(F(128,144),J,3,0),Q.addMany(F(144,152),J,3,0),Q.add(156,J,0,0),Q.add(27,J,11,1),Q.add(157,J,4,8),Q.addMany([152,158,159],J,0,7),Q.add(155,J,11,3),Q.add(144,J,11,9);return Q.addMany(R,0,3,0),Q.addMany(R,1,3,1),Q.add(127,1,0,1),Q.addMany(R,8,0,8),Q.addMany(R,3,3,3),Q.add(127,3,0,3),Q.addMany(R,4,3,4),Q.add(127,4,0,4),Q.addMany(R,6,3,6),Q.addMany(R,5,3,5),Q.add(127,5,0,5),Q.addMany(R,2,3,2),Q.add(127,2,0,2),Q.add(93,1,4,8),Q.addMany(B,8,5,8),Q.add(127,8,5,8),Q.addMany([156,27,24,26,7],8,6,0),Q.addMany(F(28,32),8,0,8),Q.addMany([88,94,95],1,0,7),Q.addMany(B,7,0,7),Q.addMany(R,7,0,7),Q.add(156,7,0,0),Q.add(127,7,0,7),Q.add(91,1,11,3),Q.addMany(F(64,127),3,7,0),Q.addMany(F(48,60),3,8,4),Q.addMany([60,61,62,63],3,9,4),Q.addMany(F(48,60),4,8,4),Q.addMany(F(64,127),4,7,0),Q.addMany([60,61,62,63],4,0,6),Q.addMany(F(32,64),6,0,6),Q.add(127,6,0,6),Q.addMany(F(64,127),6,0,0),Q.addMany(F(32,48),3,9,5),Q.addMany(F(32,48),5,9,5),Q.addMany(F(48,64),5,0,6),Q.addMany(F(64,127),5,7,0),Q.addMany(F(32,48),4,9,5),Q.addMany(F(32,48),1,9,2),Q.addMany(F(32,48),2,9,2),Q.addMany(F(48,127),2,10,0),Q.addMany(F(48,80),1,10,0),Q.addMany(F(81,88),1,10,0),Q.addMany([89,90,92],1,10,0),Q.addMany(F(96,127),1,10,0),Q.add(80,1,11,9),Q.addMany(R,9,0,9),Q.add(127,9,0,9),Q.addMany(F(28,32),9,0,9),Q.addMany(F(32,48),9,9,12),Q.addMany(F(48,60),9,8,10),Q.addMany([60,61,62,63],9,9,10),Q.addMany(R,11,0,11),Q.addMany(F(32,128),11,0,11),Q.addMany(F(28,32),11,0,11),Q.addMany(R,10,0,10),Q.add(127,10,0,10),Q.addMany(F(28,32),10,0,10),Q.addMany(F(48,60),10,8,10),Q.addMany([60,61,62,63],10,0,11),Q.addMany(F(32,48),10,9,12),Q.addMany(R,12,0,12),Q.add(127,12,0,12),Q.addMany(F(28,32),12,0,12),Q.addMany(F(32,48),12,9,12),Q.addMany(F(48,64),12,0,11),Q.addMany(F(64,127),12,12,13),Q.addMany(F(64,127),10,12,13),Q.addMany(F(64,127),9,12,13),Q.addMany(R,13,13,13),Q.addMany(B,13,13,13),Q.add(127,13,0,13),Q.addMany([27,156,24,26],13,14,0),Q.add(N,0,2,0),Q.add(N,8,5,8),Q.add(N,6,0,6),Q.add(N,11,0,11),Q.add(N,13,13,13),Q}();var W=function(Q){function U(F){F===void 0&&(F=n.VT500_TRANSITION_TABLE);var B=Q.call(this)||this;return B._transitions=F,B._parseStack={state:0,handlers:[],handlerPos:0,transition:0,chunkPos:0},B.initialState=0,B.currentState=B.initialState,B._params=new r.Params,B._params.addParam(0),B._collect=0,B.precedingCodepoint=0,B._printHandlerFb=function(R,J,V){},B._executeHandlerFb=function(R){},B._csiHandlerFb=function(R,J){},B._escHandlerFb=function(R){},B._errorHandlerFb=function(R){return R},B._printHandler=B._printHandlerFb,B._executeHandlers=Object.create(null),B._csiHandlers=Object.create(null),B._escHandlers=Object.create(null),B._oscParser=new E.OscParser,B._dcsParser=new d.DcsParser,B._errorHandler=B._errorHandlerFb,B.registerEscHandler({final:"\\"},function(){return!0}),B}return Z(U,Q),U.prototype._identifier=function(F,B){B===void 0&&(B=[64,126]);var R=0;if(F.prefix){if(F.prefix.length>1)throw new Error("only one byte as prefix supported");if((R=F.prefix.charCodeAt(0))&&60>R||R>63)throw new Error("prefix must be in range 0x3c .. 0x3f")}if(F.intermediates){if(F.intermediates.length>2)throw new Error("only two bytes as intermediates are supported");for(var J=0;J<F.intermediates.length;++J){var V=F.intermediates.charCodeAt(J);if(32>V||V>47)throw new Error("intermediate must be in range 0x20 .. 0x2f");R<<=8,R|=V}}if(F.final.length!==1)throw new Error("final must be a single byte");var k=F.final.charCodeAt(0);if(B[0]>k||k>B[1])throw new Error("final must be in range "+B[0]+" .. "+B[1]);return(R<<=8)|k},U.prototype.identToString=function(F){for(var B=[];F;)B.push(String.fromCharCode(255&F)),F>>=8;return B.reverse().join("")},U.prototype.dispose=function(){this._csiHandlers=Object.create(null),this._executeHandlers=Object.create(null),this._escHandlers=Object.create(null),this._oscParser.dispose(),this._dcsParser.dispose()},U.prototype.setPrintHandler=function(F){this._printHandler=F},U.prototype.clearPrintHandler=function(){this._printHandler=this._printHandlerFb},U.prototype.registerEscHandler=function(F,B){var R=this._identifier(F,[48,126]);this._escHandlers[R]===void 0&&(this._escHandlers[R]=[]);var J=this._escHandlers[R];return J.push(B),{dispose:function(){var V=J.indexOf(B);V!==-1&&J.splice(V,1)}}},U.prototype.clearEscHandler=function(F){this._escHandlers[this._identifier(F,[48,126])]&&delete this._escHandlers[this._identifier(F,[48,126])]},U.prototype.setEscHandlerFallback=function(F){this._escHandlerFb=F},U.prototype.setExecuteHandler=function(F,B){this._executeHandlers[F.charCodeAt(0)]=B},U.prototype.clearExecuteHandler=function(F){this._executeHandlers[F.charCodeAt(0)]&&delete this._executeHandlers[F.charCodeAt(0)]},U.prototype.setExecuteHandlerFallback=function(F){this._executeHandlerFb=F},U.prototype.registerCsiHandler=function(F,B){var R=this._identifier(F);this._csiHandlers[R]===void 0&&(this._csiHandlers[R]=[]);var J=this._csiHandlers[R];return J.push(B),{dispose:function(){var V=J.indexOf(B);V!==-1&&J.splice(V,1)}}},U.prototype.clearCsiHandler=function(F){this._csiHandlers[this._identifier(F)]&&delete this._csiHandlers[this._identifier(F)]},U.prototype.setCsiHandlerFallback=function(F){this._csiHandlerFb=F},U.prototype.registerDcsHandler=function(F,B){return this._dcsParser.registerHandler(this._identifier(F),B)},U.prototype.clearDcsHandler=function(F){this._dcsParser.clearHandler(this._identifier(F))},U.prototype.setDcsHandlerFallback=function(F){this._dcsParser.setHandlerFallback(F)},U.prototype.registerOscHandler=function(F,B){return this._oscParser.registerHandler(F,B)},U.prototype.clearOscHandler=function(F){this._oscParser.clearHandler(F)},U.prototype.setOscHandlerFallback=function(F){this._oscParser.setHandlerFallback(F)},U.prototype.setErrorHandler=function(F){this._errorHandler=F},U.prototype.clearErrorHandler=function(){this._errorHandler=this._errorHandlerFb},U.prototype.reset=function(){this.currentState=this.initialState,this._oscParser.reset(),this._dcsParser.reset(),this._params.reset(),this._params.addParam(0),this._collect=0,this.precedingCodepoint=0,this._parseStack.state!==0&&(this._parseStack.state=2,this._parseStack.handlers=[])},U.prototype._preserveStack=function(F,B,R,J,V){this._parseStack.state=F,this._parseStack.handlers=B,this._parseStack.handlerPos=R,this._parseStack.transition=J,this._parseStack.chunkPos=V},U.prototype.parse=function(F,B,R){var J,V=0,k=0,i=0;if(this._parseStack.state)if(this._parseStack.state===2)this._parseStack.state=0,i=this._parseStack.chunkPos+1;else{if(R===void 0||this._parseStack.state===1)throw this._parseStack.state=1,new Error("improper continuation due to previous async handler, giving up parsing");var a=this._parseStack.handlers,h=this._parseStack.handlerPos-1;switch(this._parseStack.state){case 3:if(R===!1&&h>-1){for(;h>=0&&(J=a[h](this._params))!==!0;h--)if(J instanceof Promise)return this._parseStack.handlerPos=h,J}this._parseStack.handlers=[];break;case 4:if(R===!1&&h>-1){for(;h>=0&&(J=a[h]())!==!0;h--)if(J instanceof Promise)return this._parseStack.handlerPos=h,J}this._parseStack.handlers=[];break;case 6:if(V=F[this._parseStack.chunkPos],J=this._dcsParser.unhook(V!==24&&V!==26,R))return J;V===27&&(this._parseStack.transition|=1),this._params.reset(),this._params.addParam(0),this._collect=0;break;case 5:if(V=F[this._parseStack.chunkPos],J=this._oscParser.end(V!==24&&V!==26,R))return J;V===27&&(this._parseStack.transition|=1),this._params.reset(),this._params.addParam(0),this._collect=0}this._parseStack.state=0,i=this._parseStack.chunkPos+1,this.precedingCodepoint=0,this.currentState=15&this._parseStack.transition}for(var T=i;T<B;++T){switch(V=F[T],(k=this._transitions.table[this.currentState<<8|(V<160?V:N)])>>4){case 2:for(var s=T+1;;++s){if(s>=B||(V=F[s])<32||V>126&&V<N){this._printHandler(F,T,s),T=s-1;break}if(++s>=B||(V=F[s])<32||V>126&&V<N){this._printHandler(F,T,s),T=s-1;break}if(++s>=B||(V=F[s])<32||V>126&&V<N){this._printHandler(F,T,s),T=s-1;break}if(++s>=B||(V=F[s])<32||V>126&&V<N){this._printHandler(F,T,s),T=s-1;break}}break;case 3:this._executeHandlers[V]?this._executeHandlers[V]():this._executeHandlerFb(V),this.precedingCodepoint=0;break;case 0:break;case 1:if(this._errorHandler({position:T,code:V,currentState:this.currentState,collect:this._collect,params:this._params,abort:!1}).abort)return;break;case 7:for(var C=(a=this._csiHandlers[this._collect<<8|V])?a.length-1:-1;C>=0&&(J=a[C](this._params))!==!0;C--)if(J instanceof Promise)return this._preserveStack(3,a,C,k,T),J;C<0&&this._csiHandlerFb(this._collect<<8|V,this._params),this.precedingCodepoint=0;break;case 8:do switch(V){case 59:this._params.addParam(0);break;case 58:this._params.addSubParam(-1);break;default:this._params.addDigit(V-48)}while(++T<B&&(V=F[T])>47&&V<60);T--;break;case 9:this._collect<<=8,this._collect|=V;break;case 10:for(var D=this._escHandlers[this._collect<<8|V],p=D?D.length-1:-1;p>=0&&(J=D[p]())!==!0;p--)if(J instanceof Promise)return this._preserveStack(4,D,p,k,T),J;p<0&&this._escHandlerFb(this._collect<<8|V),this.precedingCodepoint=0;break;case 11:this._params.reset(),this._params.addParam(0),this._collect=0;break;case 12:this._dcsParser.hook(this._collect<<8|V,this._params);break;case 13:for(var c=T+1;;++c)if(c>=B||(V=F[c])===24||V===26||V===27||V>127&&V<N){this._dcsParser.put(F,T,c),T=c-1;break}break;case 14:if(J=this._dcsParser.unhook(V!==24&&V!==26))return this._preserveStack(6,[],0,k,T),J;V===27&&(k|=1),this._params.reset(),this._params.addParam(0),this._collect=0,this.precedingCodepoint=0;break;case 4:this._oscParser.start();break;case 5:for(var m=T+1;;m++)if(m>=B||(V=F[m])<32||V>127&&V<N){this._oscParser.put(F,T,m),T=m-1;break}break;case 6:if(J=this._oscParser.end(V!==24&&V!==26))return this._preserveStack(5,[],0,k,T),J;V===27&&(k|=1),this._params.reset(),this._params.addParam(0),this._collect=0,this.precedingCodepoint=0}this.currentState=15&k}},U}(e.Disposable);n.EscapeSequenceParser=W},6242:(x,n,o)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.OscHandler=n.OscParser=void 0;var t=o(5770),Z=o(482),e=[],S=function(){function E(){this._state=0,this._active=e,this._id=-1,this._handlers=Object.create(null),this._handlerFb=function(){},this._stack={paused:!1,loopPosition:0,fallThrough:!1}}return E.prototype.registerHandler=function(d,l){this._handlers[d]===void 0&&(this._handlers[d]=[]);var N=this._handlers[d];return N.push(l),{dispose:function(){var W=N.indexOf(l);W!==-1&&N.splice(W,1)}}},E.prototype.clearHandler=function(d){this._handlers[d]&&delete this._handlers[d]},E.prototype.setHandlerFallback=function(d){this._handlerFb=d},E.prototype.dispose=function(){this._handlers=Object.create(null),this._handlerFb=function(){},this._active=e},E.prototype.reset=function(){if(this._state===2)for(var d=this._stack.paused?this._stack.loopPosition-1:this._active.length-1;d>=0;--d)this._active[d].end(!1);this._stack.paused=!1,this._active=e,this._id=-1,this._state=0},E.prototype._start=function(){if(this._active=this._handlers[this._id]||e,this._active.length)for(var d=this._active.length-1;d>=0;d--)this._active[d].start();else this._handlerFb(this._id,"START")},E.prototype._put=function(d,l,N){if(this._active.length)for(var W=this._active.length-1;W>=0;W--)this._active[W].put(d,l,N);else this._handlerFb(this._id,"PUT",(0,Z.utf32ToString)(d,l,N))},E.prototype.start=function(){this.reset(),this._state=1},E.prototype.put=function(d,l,N){if(this._state!==3){if(this._state===1)for(;l<N;){var W=d[l++];if(W===59){this._state=2,this._start();break}if(W<48||57<W)return void(this._state=3);this._id===-1&&(this._id=0),this._id=10*this._id+W-48}this._state===2&&N-l>0&&this._put(d,l,N)}},E.prototype.end=function(d,l){if(l===void 0&&(l=!0),this._state!==0){if(this._state!==3)if(this._state===1&&this._start(),this._active.length){var N=!1,W=this._active.length-1,Q=!1;if(this._stack.paused&&(W=this._stack.loopPosition-1,N=l,Q=this._stack.fallThrough,this._stack.paused=!1),!Q&&N===!1){for(;W>=0&&(N=this._active[W].end(d))!==!0;W--)if(N instanceof Promise)return this._stack.paused=!0,this._stack.loopPosition=W,this._stack.fallThrough=!1,N;W--}for(;W>=0;W--)if((N=this._active[W].end(!1))instanceof Promise)return this._stack.paused=!0,this._stack.loopPosition=W,this._stack.fallThrough=!0,N}else this._handlerFb(this._id,"END",d);this._active=e,this._id=-1,this._state=0}},E}();n.OscParser=S;var r=function(){function E(d){this._handler=d,this._data="",this._hitLimit=!1}return E.prototype.start=function(){this._data="",this._hitLimit=!1},E.prototype.put=function(d,l,N){this._hitLimit||(this._data+=(0,Z.utf32ToString)(d,l,N),this._data.length>t.PAYLOAD_LIMIT&&(this._data="",this._hitLimit=!0))},E.prototype.end=function(d){var l=this,N=!1;if(this._hitLimit)N=!1;else if(d&&(N=this._handler(this._data))instanceof Promise)return N.then(function(W){return l._data="",l._hitLimit=!1,W});return this._data="",this._hitLimit=!1,N},E}();n.OscHandler=r},8742:(x,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.Params=void 0;var o=2147483647,t=function(){function Z(e,S){if(e===void 0&&(e=32),S===void 0&&(S=32),this.maxLength=e,this.maxSubParamsLength=S,S>256)throw new Error("maxSubParamsLength must not be greater than 256");this.params=new Int32Array(e),this.length=0,this._subParams=new Int32Array(S),this._subParamsLength=0,this._subParamsIdx=new Uint16Array(e),this._rejectDigits=!1,this._rejectSubDigits=!1,this._digitIsSub=!1}return Z.fromArray=function(e){var S=new Z;if(!e.length)return S;for(var r=Array.isArray(e[0])?1:0;r<e.length;++r){var E=e[r];if(Array.isArray(E))for(var d=0;d<E.length;++d)S.addSubParam(E[d]);else S.addParam(E)}return S},Z.prototype.clone=function(){var e=new Z(this.maxLength,this.maxSubParamsLength);return e.params.set(this.params),e.length=this.length,e._subParams.set(this._subParams),e._subParamsLength=this._subParamsLength,e._subParamsIdx.set(this._subParamsIdx),e._rejectDigits=this._rejectDigits,e._rejectSubDigits=this._rejectSubDigits,e._digitIsSub=this._digitIsSub,e},Z.prototype.toArray=function(){for(var e=[],S=0;S<this.length;++S){e.push(this.params[S]);var r=this._subParamsIdx[S]>>8,E=255&this._subParamsIdx[S];E-r>0&&e.push(Array.prototype.slice.call(this._subParams,r,E))}return e},Z.prototype.reset=function(){this.length=0,this._subParamsLength=0,this._rejectDigits=!1,this._rejectSubDigits=!1,this._digitIsSub=!1},Z.prototype.addParam=function(e){if(this._digitIsSub=!1,this.length>=this.maxLength)this._rejectDigits=!0;else{if(e<-1)throw new Error("values lesser than -1 are not allowed");this._subParamsIdx[this.length]=this._subParamsLength<<8|this._subParamsLength,this.params[this.length++]=e>o?o:e}},Z.prototype.addSubParam=function(e){if(this._digitIsSub=!0,this.length)if(this._rejectDigits||this._subParamsLength>=this.maxSubParamsLength)this._rejectSubDigits=!0;else{if(e<-1)throw new Error("values lesser than -1 are not allowed");this._subParams[this._subParamsLength++]=e>o?o:e,this._subParamsIdx[this.length-1]++}},Z.prototype.hasSubParams=function(e){return(255&this._subParamsIdx[e])-(this._subParamsIdx[e]>>8)>0},Z.prototype.getSubParams=function(e){var S=this._subParamsIdx[e]>>8,r=255&this._subParamsIdx[e];return r-S>0?this._subParams.subarray(S,r):null},Z.prototype.getSubParamsAll=function(){for(var e={},S=0;S<this.length;++S){var r=this._subParamsIdx[S]>>8,E=255&this._subParamsIdx[S];E-r>0&&(e[S]=this._subParams.slice(r,E))}return e},Z.prototype.addDigit=function(e){var S;if(!(this._rejectDigits||!(S=this._digitIsSub?this._subParamsLength:this.length)||this._digitIsSub&&this._rejectSubDigits)){var r=this._digitIsSub?this._subParams:this.params,E=r[S-1];r[S-1]=~E?Math.min(10*E+e,o):e}},Z}();n.Params=t},5741:(x,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.AddonManager=void 0;var o=function(){function t(){this._addons=[]}return t.prototype.dispose=function(){for(var Z=this._addons.length-1;Z>=0;Z--)this._addons[Z].instance.dispose()},t.prototype.loadAddon=function(Z,e){var S=this,r={instance:e,dispose:e.dispose,isDisposed:!1};this._addons.push(r),e.dispose=function(){return S._wrappedAddonDispose(r)},e.activate(Z)},t.prototype._wrappedAddonDispose=function(Z){if(!Z.isDisposed){for(var e=-1,S=0;S<this._addons.length;S++)if(this._addons[S]===Z){e=S;break}if(e===-1)throw new Error("Could not dispose an addon that has not been loaded");Z.isDisposed=!0,Z.dispose.apply(Z.instance),this._addons.splice(e,1)}},t}();n.AddonManager=o},8771:(x,n,o)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.BufferApiView=void 0;var t=o(3785),Z=o(511),e=function(){function S(r,E){this._buffer=r,this.type=E}return S.prototype.init=function(r){return this._buffer=r,this},Object.defineProperty(S.prototype,"cursorY",{get:function(){return this._buffer.y},enumerable:!1,configurable:!0}),Object.defineProperty(S.prototype,"cursorX",{get:function(){return this._buffer.x},enumerable:!1,configurable:!0}),Object.defineProperty(S.prototype,"viewportY",{get:function(){return this._buffer.ydisp},enumerable:!1,configurable:!0}),Object.defineProperty(S.prototype,"baseY",{get:function(){return this._buffer.ybase},enumerable:!1,configurable:!0}),Object.defineProperty(S.prototype,"length",{get:function(){return this._buffer.lines.length},enumerable:!1,configurable:!0}),S.prototype.getLine=function(r){var E=this._buffer.lines.get(r);if(E)return new t.BufferLineApiView(E)},S.prototype.getNullCell=function(){return new Z.CellData},S}();n.BufferApiView=e},3785:(x,n,o)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.BufferLineApiView=void 0;var t=o(511),Z=function(){function e(S){this._line=S}return Object.defineProperty(e.prototype,"isWrapped",{get:function(){return this._line.isWrapped},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"length",{get:function(){return this._line.length},enumerable:!1,configurable:!0}),e.prototype.getCell=function(S,r){if(!(S<0||S>=this._line.length))return r?(this._line.loadCell(S,r),r):this._line.loadCell(S,new t.CellData)},e.prototype.translateToString=function(S,r,E){return this._line.translateToString(S,r,E)},e}();n.BufferLineApiView=Z},8285:(x,n,o)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.BufferNamespaceApi=void 0;var t=o(8771),Z=o(8460),e=function(){function S(r){var E=this;this._core=r,this._onBufferChange=new Z.EventEmitter,this._normal=new t.BufferApiView(this._core.buffers.normal,"normal"),this._alternate=new t.BufferApiView(this._core.buffers.alt,"alternate"),this._core.buffers.onBufferActivate(function(){return E._onBufferChange.fire(E.active)})}return Object.defineProperty(S.prototype,"onBufferChange",{get:function(){return this._onBufferChange.event},enumerable:!1,configurable:!0}),Object.defineProperty(S.prototype,"active",{get:function(){if(this._core.buffers.active===this._core.buffers.normal)return this.normal;if(this._core.buffers.active===this._core.buffers.alt)return this.alternate;throw new Error("Active buffer is neither normal nor alternate")},enumerable:!1,configurable:!0}),Object.defineProperty(S.prototype,"normal",{get:function(){return this._normal.init(this._core.buffers.normal)},enumerable:!1,configurable:!0}),Object.defineProperty(S.prototype,"alternate",{get:function(){return this._alternate.init(this._core.buffers.alt)},enumerable:!1,configurable:!0}),S}();n.BufferNamespaceApi=e},7975:(x,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.ParserApi=void 0;var o=function(){function t(Z){this._core=Z}return t.prototype.registerCsiHandler=function(Z,e){return this._core.registerCsiHandler(Z,function(S){return e(S.toArray())})},t.prototype.addCsiHandler=function(Z,e){return this.registerCsiHandler(Z,e)},t.prototype.registerDcsHandler=function(Z,e){return this._core.registerDcsHandler(Z,function(S,r){return e(S,r.toArray())})},t.prototype.addDcsHandler=function(Z,e){return this.registerDcsHandler(Z,e)},t.prototype.registerEscHandler=function(Z,e){return this._core.registerEscHandler(Z,e)},t.prototype.addEscHandler=function(Z,e){return this.registerEscHandler(Z,e)},t.prototype.registerOscHandler=function(Z,e){return this._core.registerOscHandler(Z,e)},t.prototype.addOscHandler=function(Z,e){return this.registerOscHandler(Z,e)},t}();n.ParserApi=o},7090:(x,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.UnicodeApi=void 0;var o=function(){function t(Z){this._core=Z}return t.prototype.register=function(Z){this._core.unicodeService.register(Z)},Object.defineProperty(t.prototype,"versions",{get:function(){return this._core.unicodeService.versions},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"activeVersion",{get:function(){return this._core.unicodeService.activeVersion},set:function(Z){this._core.unicodeService.activeVersion=Z},enumerable:!1,configurable:!0}),t}();n.UnicodeApi=o},744:function(x,n,o){var t,Z=this&&this.__extends||(t=function(W,Q){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(U,F){U.__proto__=F}||function(U,F){for(var B in F)Object.prototype.hasOwnProperty.call(F,B)&&(U[B]=F[B])},t(W,Q)},function(W,Q){if(typeof Q!="function"&&Q!==null)throw new TypeError("Class extends value "+String(Q)+" is not a constructor or null");function U(){this.constructor=W}t(W,Q),W.prototype=Q===null?Object.create(Q):(U.prototype=Q.prototype,new U)}),e=this&&this.__decorate||function(W,Q,U,F){var B,R=arguments.length,J=R<3?Q:F===null?F=Object.getOwnPropertyDescriptor(Q,U):F;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")J=Reflect.decorate(W,Q,U,F);else for(var V=W.length-1;V>=0;V--)(B=W[V])&&(J=(R<3?B(J):R>3?B(Q,U,J):B(Q,U))||J);return R>3&&J&&Object.defineProperty(Q,U,J),J},S=this&&this.__param||function(W,Q){return function(U,F){Q(U,F,W)}};Object.defineProperty(n,"__esModule",{value:!0}),n.BufferService=n.MINIMUM_ROWS=n.MINIMUM_COLS=void 0;var r=o(2585),E=o(5295),d=o(8460),l=o(844);n.MINIMUM_COLS=2,n.MINIMUM_ROWS=1;var N=function(W){function Q(U){var F=W.call(this)||this;return F._optionsService=U,F.isUserScrolling=!1,F._onResize=new d.EventEmitter,F._onScroll=new d.EventEmitter,F.cols=Math.max(U.rawOptions.cols||0,n.MINIMUM_COLS),F.rows=Math.max(U.rawOptions.rows||0,n.MINIMUM_ROWS),F.buffers=new E.BufferSet(U,F),F}return Z(Q,W),Object.defineProperty(Q.prototype,"onResize",{get:function(){return this._onResize.event},enumerable:!1,configurable:!0}),Object.defineProperty(Q.prototype,"onScroll",{get:function(){return this._onScroll.event},enumerable:!1,configurable:!0}),Object.defineProperty(Q.prototype,"buffer",{get:function(){return this.buffers.active},enumerable:!1,configurable:!0}),Q.prototype.dispose=function(){W.prototype.dispose.call(this),this.buffers.dispose()},Q.prototype.resize=function(U,F){this.cols=U,this.rows=F,this.buffers.resize(U,F),this.buffers.setupTabStops(this.cols),this._onResize.fire({cols:U,rows:F})},Q.prototype.reset=function(){this.buffers.reset(),this.isUserScrolling=!1},Q.prototype.scroll=function(U,F){F===void 0&&(F=!1);var B,R=this.buffer;(B=this._cachedBlankLine)&&B.length===this.cols&&B.getFg(0)===U.fg&&B.getBg(0)===U.bg||(B=R.getBlankLine(U,F),this._cachedBlankLine=B),B.isWrapped=F;var J=R.ybase+R.scrollTop,V=R.ybase+R.scrollBottom;if(R.scrollTop===0){var k=R.lines.isFull;V===R.lines.length-1?k?R.lines.recycle().copyFrom(B):R.lines.push(B.clone()):R.lines.splice(V+1,0,B.clone()),k?this.isUserScrolling&&(R.ydisp=Math.max(R.ydisp-1,0)):(R.ybase++,this.isUserScrolling||R.ydisp++)}else{var i=V-J+1;R.lines.shiftElements(J+1,i-1,-1),R.lines.set(V,B.clone())}this.isUserScrolling||(R.ydisp=R.ybase),this._onScroll.fire(R.ydisp)},Q.prototype.scrollLines=function(U,F,B){var R=this.buffer;if(U<0){if(R.ydisp===0)return;this.isUserScrolling=!0}else U+R.ydisp>=R.ybase&&(this.isUserScrolling=!1);var J=R.ydisp;R.ydisp=Math.max(Math.min(R.ydisp+U,R.ybase),0),J!==R.ydisp&&(F||this._onScroll.fire(R.ydisp))},Q.prototype.scrollPages=function(U){this.scrollLines(U*(this.rows-1))},Q.prototype.scrollToTop=function(){this.scrollLines(-this.buffer.ydisp)},Q.prototype.scrollToBottom=function(){this.scrollLines(this.buffer.ybase-this.buffer.ydisp)},Q.prototype.scrollToLine=function(U){var F=U-this.buffer.ydisp;F!==0&&this.scrollLines(F)},e([S(0,r.IOptionsService)],Q)}(l.Disposable);n.BufferService=N},7994:(x,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.CharsetService=void 0;var o=function(){function t(){this.glevel=0,this._charsets=[]}return t.prototype.reset=function(){this.charset=void 0,this._charsets=[],this.glevel=0},t.prototype.setgLevel=function(Z){this.glevel=Z,this.charset=this._charsets[Z]},t.prototype.setgCharset=function(Z,e){this._charsets[Z]=e,this.glevel===Z&&(this.charset=e)},t}();n.CharsetService=o},1753:function(x,n,o){var t=this&&this.__decorate||function(Q,U,F,B){var R,J=arguments.length,V=J<3?U:B===null?B=Object.getOwnPropertyDescriptor(U,F):B;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")V=Reflect.decorate(Q,U,F,B);else for(var k=Q.length-1;k>=0;k--)(R=Q[k])&&(V=(J<3?R(V):J>3?R(U,F,V):R(U,F))||V);return J>3&&V&&Object.defineProperty(U,F,V),V},Z=this&&this.__param||function(Q,U){return function(F,B){U(F,B,Q)}},e=this&&this.__values||function(Q){var U=typeof Symbol=="function"&&Symbol.iterator,F=U&&Q[U],B=0;if(F)return F.call(Q);if(Q&&typeof Q.length=="number")return{next:function(){return Q&&B>=Q.length&&(Q=void 0),{value:Q&&Q[B++],done:!Q}}};throw new TypeError(U?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(n,"__esModule",{value:!0}),n.CoreMouseService=void 0;var S=o(2585),r=o(8460),E={NONE:{events:0,restrict:function(){return!1}},X10:{events:1,restrict:function(Q){return Q.button!==4&&Q.action===1&&(Q.ctrl=!1,Q.alt=!1,Q.shift=!1,!0)}},VT200:{events:19,restrict:function(Q){return Q.action!==32}},DRAG:{events:23,restrict:function(Q){return Q.action!==32||Q.button!==3}},ANY:{events:31,restrict:function(Q){return!0}}};function d(Q,U){var F=(Q.ctrl?16:0)|(Q.shift?4:0)|(Q.alt?8:0);return Q.button===4?(F|=64,F|=Q.action):(F|=3&Q.button,4&Q.button&&(F|=64),8&Q.button&&(F|=128),Q.action===32?F|=32:Q.action!==0||U||(F|=3)),F}var l=String.fromCharCode,N={DEFAULT:function(Q){var U=[d(Q,!1)+32,Q.col+32,Q.row+32];return U[0]>255||U[1]>255||U[2]>255?"":"\x1B[M"+l(U[0])+l(U[1])+l(U[2])},SGR:function(Q){var U=Q.action===0&&Q.button!==4?"m":"M";return"\x1B[<"+d(Q,!0)+";"+Q.col+";"+Q.row+U}},W=function(){function Q(U,F){var B,R,J,V;this._bufferService=U,this._coreService=F,this._protocols={},this._encodings={},this._activeProtocol="",this._activeEncoding="",this._onProtocolChange=new r.EventEmitter,this._lastEvent=null;try{for(var k=e(Object.keys(E)),i=k.next();!i.done;i=k.next()){var a=i.value;this.addProtocol(a,E[a])}}catch(C){B={error:C}}finally{try{i&&!i.done&&(R=k.return)&&R.call(k)}finally{if(B)throw B.error}}try{for(var h=e(Object.keys(N)),T=h.next();!T.done;T=h.next()){var s=T.value;this.addEncoding(s,N[s])}}catch(C){J={error:C}}finally{try{T&&!T.done&&(V=h.return)&&V.call(h)}finally{if(J)throw J.error}}this.reset()}return Q.prototype.addProtocol=function(U,F){this._protocols[U]=F},Q.prototype.addEncoding=function(U,F){this._encodings[U]=F},Object.defineProperty(Q.prototype,"activeProtocol",{get:function(){return this._activeProtocol},set:function(U){if(!this._protocols[U])throw new Error('unknown protocol "'+U+'"');this._activeProtocol=U,this._onProtocolChange.fire(this._protocols[U].events)},enumerable:!1,configurable:!0}),Object.defineProperty(Q.prototype,"areMouseEventsActive",{get:function(){return this._protocols[this._activeProtocol].events!==0},enumerable:!1,configurable:!0}),Object.defineProperty(Q.prototype,"activeEncoding",{get:function(){return this._activeEncoding},set:function(U){if(!this._encodings[U])throw new Error('unknown encoding "'+U+'"');this._activeEncoding=U},enumerable:!1,configurable:!0}),Q.prototype.reset=function(){this.activeProtocol="NONE",this.activeEncoding="DEFAULT",this._lastEvent=null},Object.defineProperty(Q.prototype,"onProtocolChange",{get:function(){return this._onProtocolChange.event},enumerable:!1,configurable:!0}),Q.prototype.triggerMouseEvent=function(U){if(U.col<0||U.col>=this._bufferService.cols||U.row<0||U.row>=this._bufferService.rows||U.button===4&&U.action===32||U.button===3&&U.action!==32||U.button!==4&&(U.action===2||U.action===3)||(U.col++,U.row++,U.action===32&&this._lastEvent&&this._compareEvents(this._lastEvent,U))||!this._protocols[this._activeProtocol].restrict(U))return!1;var F=this._encodings[this._activeEncoding](U);return F&&(this._activeEncoding==="DEFAULT"?this._coreService.triggerBinaryEvent(F):this._coreService.triggerDataEvent(F,!0)),this._lastEvent=U,!0},Q.prototype.explainEvents=function(U){return{down:!!(1&U),up:!!(2&U),drag:!!(4&U),move:!!(8&U),wheel:!!(16&U)}},Q.prototype._compareEvents=function(U,F){return U.col===F.col&&U.row===F.row&&U.button===F.button&&U.action===F.action&&U.ctrl===F.ctrl&&U.alt===F.alt&&U.shift===F.shift},t([Z(0,S.IBufferService),Z(1,S.ICoreService)],Q)}();n.CoreMouseService=W},6975:function(x,n,o){var t,Z=this&&this.__extends||(t=function(U,F){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(B,R){B.__proto__=R}||function(B,R){for(var J in R)Object.prototype.hasOwnProperty.call(R,J)&&(B[J]=R[J])},t(U,F)},function(U,F){if(typeof F!="function"&&F!==null)throw new TypeError("Class extends value "+String(F)+" is not a constructor or null");function B(){this.constructor=U}t(U,F),U.prototype=F===null?Object.create(F):(B.prototype=F.prototype,new B)}),e=this&&this.__decorate||function(U,F,B,R){var J,V=arguments.length,k=V<3?F:R===null?R=Object.getOwnPropertyDescriptor(F,B):R;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")k=Reflect.decorate(U,F,B,R);else for(var i=U.length-1;i>=0;i--)(J=U[i])&&(k=(V<3?J(k):V>3?J(F,B,k):J(F,B))||k);return V>3&&k&&Object.defineProperty(F,B,k),k},S=this&&this.__param||function(U,F){return function(B,R){F(B,R,U)}};Object.defineProperty(n,"__esModule",{value:!0}),n.CoreService=void 0;var r=o(2585),E=o(8460),d=o(1439),l=o(844),N=Object.freeze({insertMode:!1}),W=Object.freeze({applicationCursorKeys:!1,applicationKeypad:!1,bracketedPasteMode:!1,origin:!1,reverseWraparound:!1,sendFocus:!1,wraparound:!0}),Q=function(U){function F(B,R,J,V){var k=U.call(this)||this;return k._bufferService=R,k._logService=J,k._optionsService=V,k.isCursorInitialized=!1,k.isCursorHidden=!1,k._onData=k.register(new E.EventEmitter),k._onUserInput=k.register(new E.EventEmitter),k._onBinary=k.register(new E.EventEmitter),k._scrollToBottom=B,k.register({dispose:function(){return k._scrollToBottom=void 0}}),k.modes=(0,d.clone)(N),k.decPrivateModes=(0,d.clone)(W),k}return Z(F,U),Object.defineProperty(F.prototype,"onData",{get:function(){return this._onData.event},enumerable:!1,configurable:!0}),Object.defineProperty(F.prototype,"onUserInput",{get:function(){return this._onUserInput.event},enumerable:!1,configurable:!0}),Object.defineProperty(F.prototype,"onBinary",{get:function(){return this._onBinary.event},enumerable:!1,configurable:!0}),F.prototype.reset=function(){this.modes=(0,d.clone)(N),this.decPrivateModes=(0,d.clone)(W)},F.prototype.triggerDataEvent=function(B,R){if(R===void 0&&(R=!1),!this._optionsService.rawOptions.disableStdin){var J=this._bufferService.buffer;J.ybase!==J.ydisp&&this._scrollToBottom(),R&&this._onUserInput.fire(),this._logService.debug('sending data "'+B+'"',function(){return B.split("").map(function(V){return V.charCodeAt(0)})}),this._onData.fire(B)}},F.prototype.triggerBinaryEvent=function(B){this._optionsService.rawOptions.disableStdin||(this._logService.debug('sending binary "'+B+'"',function(){return B.split("").map(function(R){return R.charCodeAt(0)})}),this._onBinary.fire(B))},e([S(1,r.IBufferService),S(2,r.ILogService),S(3,r.IOptionsService)],F)}(l.Disposable);n.CoreService=Q},9074:function(x,n,o){var t,Z=this&&this.__extends||(t=function(Q,U){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(F,B){F.__proto__=B}||function(F,B){for(var R in B)Object.prototype.hasOwnProperty.call(B,R)&&(F[R]=B[R])},t(Q,U)},function(Q,U){if(typeof U!="function"&&U!==null)throw new TypeError("Class extends value "+String(U)+" is not a constructor or null");function F(){this.constructor=Q}t(Q,U),Q.prototype=U===null?Object.create(U):(F.prototype=U.prototype,new F)}),e=this&&this.__generator||function(Q,U){var F,B,R,J,V={label:0,sent:function(){if(1&R[0])throw R[1];return R[1]},trys:[],ops:[]};return J={next:k(0),throw:k(1),return:k(2)},typeof Symbol=="function"&&(J[Symbol.iterator]=function(){return this}),J;function k(i){return function(a){return function(h){if(F)throw new TypeError("Generator is already executing.");for(;V;)try{if(F=1,B&&(R=2&h[0]?B.return:h[0]?B.throw||((R=B.return)&&R.call(B),0):B.next)&&!(R=R.call(B,h[1])).done)return R;switch(B=0,R&&(h=[2&h[0],R.value]),h[0]){case 0:case 1:R=h;break;case 4:return V.label++,{value:h[1],done:!1};case 5:V.label++,B=h[1],h=[0];continue;case 7:h=V.ops.pop(),V.trys.pop();continue;default:if(!((R=(R=V.trys).length>0&&R[R.length-1])||h[0]!==6&&h[0]!==2)){V=0;continue}if(h[0]===3&&(!R||h[1]>R[0]&&h[1]<R[3])){V.label=h[1];break}if(h[0]===6&&V.label<R[1]){V.label=R[1],R=h;break}if(R&&V.label<R[2]){V.label=R[2],V.ops.push(h);break}R[2]&&V.ops.pop(),V.trys.pop();continue}h=U.call(Q,V)}catch(T){h=[6,T],B=0}finally{F=R=0}if(5&h[0])throw h[1];return{value:h[0]?h[1]:void 0,done:!0}}([i,a])}}},S=this&&this.__values||function(Q){var U=typeof Symbol=="function"&&Symbol.iterator,F=U&&Q[U],B=0;if(F)return F.call(Q);if(Q&&typeof Q.length=="number")return{next:function(){return Q&&B>=Q.length&&(Q=void 0),{value:Q&&Q[B++],done:!Q}}};throw new TypeError(U?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(n,"__esModule",{value:!0}),n.DecorationService=void 0;var r=o(8055),E=o(8460),d=o(844),l=o(6106),N=function(Q){function U(){var F=Q.call(this)||this;return F._decorations=new l.SortedList(function(B){return B.marker.line}),F._onDecorationRegistered=F.register(new E.EventEmitter),F._onDecorationRemoved=F.register(new E.EventEmitter),F}return Z(U,Q),Object.defineProperty(U.prototype,"onDecorationRegistered",{get:function(){return this._onDecorationRegistered.event},enumerable:!1,configurable:!0}),Object.defineProperty(U.prototype,"onDecorationRemoved",{get:function(){return this._onDecorationRemoved.event},enumerable:!1,configurable:!0}),Object.defineProperty(U.prototype,"decorations",{get:function(){return this._decorations.values()},enumerable:!1,configurable:!0}),U.prototype.registerDecoration=function(F){var B=this;if(!F.marker.isDisposed){var R=new W(F);if(R){var J=R.marker.onDispose(function(){return R.dispose()});R.onDispose(function(){R&&(B._decorations.delete(R)&&B._onDecorationRemoved.fire(R),J.dispose())}),this._decorations.insert(R),this._onDecorationRegistered.fire(R)}return R}},U.prototype.reset=function(){var F,B;try{for(var R=S(this._decorations.values()),J=R.next();!J.done;J=R.next())J.value.dispose()}catch(V){F={error:V}}finally{try{J&&!J.done&&(B=R.return)&&B.call(R)}finally{if(F)throw F.error}}this._decorations.clear()},U.prototype.getDecorationsAtLine=function(F){return e(this,function(B){return[2,this._decorations.getKeyIterator(F)]})},U.prototype.getDecorationsAtCell=function(F,B,R){var J,V,k,i,a,h,T,s,C,D,p;return e(this,function(c){switch(c.label){case 0:J=0,V=0,c.label=1;case 1:c.trys.push([1,6,7,8]),k=S(this._decorations.getKeyIterator(B)),i=k.next(),c.label=2;case 2:return i.done?[3,5]:(a=i.value,J=(C=a.options.x)!==null&&C!==void 0?C:0,V=J+((D=a.options.width)!==null&&D!==void 0?D:1),!(F>=J&&F<V)||R&&((p=a.options.layer)!==null&&p!==void 0?p:"bottom")!==R?[3,4]:[4,a]);case 3:c.sent(),c.label=4;case 4:return i=k.next(),[3,2];case 5:return[3,8];case 6:return h=c.sent(),T={error:h},[3,8];case 7:try{i&&!i.done&&(s=k.return)&&s.call(k)}finally{if(T)throw T.error}return[7];case 8:return[2]}})},U.prototype.dispose=function(){var F,B;try{for(var R=S(this._decorations.values()),J=R.next();!J.done;J=R.next()){var V=J.value;this._onDecorationRemoved.fire(V)}}catch(k){F={error:k}}finally{try{J&&!J.done&&(B=R.return)&&B.call(R)}finally{if(F)throw F.error}}this.reset()},U}(d.Disposable);n.DecorationService=N;var W=function(Q){function U(F){var B=Q.call(this)||this;return B.options=F,B.isDisposed=!1,B.onRenderEmitter=B.register(new E.EventEmitter),B.onRender=B.onRenderEmitter.event,B._onDispose=B.register(new E.EventEmitter),B.onDispose=B._onDispose.event,B._cachedBg=null,B._cachedFg=null,B.marker=F.marker,B.options.overviewRulerOptions&&!B.options.overviewRulerOptions.position&&(B.options.overviewRulerOptions.position="full"),B}return Z(U,Q),Object.defineProperty(U.prototype,"backgroundColorRGB",{get:function(){return this._cachedBg===null&&(this.options.backgroundColor?this._cachedBg=r.css.toColor(this.options.backgroundColor):this._cachedBg=void 0),this._cachedBg},enumerable:!1,configurable:!0}),Object.defineProperty(U.prototype,"foregroundColorRGB",{get:function(){return this._cachedFg===null&&(this.options.foregroundColor?this._cachedFg=r.css.toColor(this.options.foregroundColor):this._cachedFg=void 0),this._cachedFg},enumerable:!1,configurable:!0}),U.prototype.dispose=function(){this._isDisposed||(this._isDisposed=!0,this._onDispose.fire(),Q.prototype.dispose.call(this))},U}(d.Disposable)},3730:function(x,n,o){var t=this&&this.__decorate||function(r,E,d,l){var N,W=arguments.length,Q=W<3?E:l===null?l=Object.getOwnPropertyDescriptor(E,d):l;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")Q=Reflect.decorate(r,E,d,l);else for(var U=r.length-1;U>=0;U--)(N=r[U])&&(Q=(W<3?N(Q):W>3?N(E,d,Q):N(E,d))||Q);return W>3&&Q&&Object.defineProperty(E,d,Q),Q},Z=this&&this.__param||function(r,E){return function(d,l){E(d,l,r)}};Object.defineProperty(n,"__esModule",{value:!0}),n.DirtyRowService=void 0;var e=o(2585),S=function(){function r(E){this._bufferService=E,this.clearRange()}return Object.defineProperty(r.prototype,"start",{get:function(){return this._start},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"end",{get:function(){return this._end},enumerable:!1,configurable:!0}),r.prototype.clearRange=function(){this._start=this._bufferService.buffer.y,this._end=this._bufferService.buffer.y},r.prototype.markDirty=function(E){E<this._start?this._start=E:E>this._end&&(this._end=E)},r.prototype.markRangeDirty=function(E,d){if(E>d){var l=E;E=d,d=l}E<this._start&&(this._start=E),d>this._end&&(this._end=d)},r.prototype.markAllDirty=function(){this.markRangeDirty(0,this._bufferService.rows-1)},t([Z(0,e.IBufferService)],r)}();n.DirtyRowService=S},4348:function(x,n,o){var t=this&&this.__values||function(l){var N=typeof Symbol=="function"&&Symbol.iterator,W=N&&l[N],Q=0;if(W)return W.call(l);if(l&&typeof l.length=="number")return{next:function(){return l&&Q>=l.length&&(l=void 0),{value:l&&l[Q++],done:!l}}};throw new TypeError(N?"Object is not iterable.":"Symbol.iterator is not defined.")},Z=this&&this.__read||function(l,N){var W=typeof Symbol=="function"&&l[Symbol.iterator];if(!W)return l;var Q,U,F=W.call(l),B=[];try{for(;(N===void 0||N-- >0)&&!(Q=F.next()).done;)B.push(Q.value)}catch(R){U={error:R}}finally{try{Q&&!Q.done&&(W=F.return)&&W.call(F)}finally{if(U)throw U.error}}return B},e=this&&this.__spreadArray||function(l,N,W){if(W||arguments.length===2)for(var Q,U=0,F=N.length;U<F;U++)!Q&&U in N||(Q||(Q=Array.prototype.slice.call(N,0,U)),Q[U]=N[U]);return l.concat(Q||Array.prototype.slice.call(N))};Object.defineProperty(n,"__esModule",{value:!0}),n.InstantiationService=n.ServiceCollection=void 0;var S=o(2585),r=o(8343),E=function(){function l(){for(var N,W,Q=[],U=0;U<arguments.length;U++)Q[U]=arguments[U];this._entries=new Map;try{for(var F=t(Q),B=F.next();!B.done;B=F.next()){var R=Z(B.value,2),J=R[0],V=R[1];this.set(J,V)}}catch(k){N={error:k}}finally{try{B&&!B.done&&(W=F.return)&&W.call(F)}finally{if(N)throw N.error}}}return l.prototype.set=function(N,W){var Q=this._entries.get(N);return this._entries.set(N,W),Q},l.prototype.forEach=function(N){this._entries.forEach(function(W,Q){return N(Q,W)})},l.prototype.has=function(N){return this._entries.has(N)},l.prototype.get=function(N){return this._entries.get(N)},l}();n.ServiceCollection=E;var d=function(){function l(){this._services=new E,this._services.set(S.IInstantiationService,this)}return l.prototype.setService=function(N,W){this._services.set(N,W)},l.prototype.getService=function(N){return this._services.get(N)},l.prototype.createInstance=function(N){for(var W,Q,U=[],F=1;F<arguments.length;F++)U[F-1]=arguments[F];var B=(0,r.getServiceDependencies)(N).sort(function(h,T){return h.index-T.index}),R=[];try{for(var J=t(B),V=J.next();!V.done;V=J.next()){var k=V.value,i=this._services.get(k.id);if(!i)throw new Error("[createInstance] "+N.name+" depends on UNKNOWN service "+k.id+".");R.push(i)}}catch(h){W={error:h}}finally{try{V&&!V.done&&(Q=J.return)&&Q.call(J)}finally{if(W)throw W.error}}var a=B.length>0?B[0].index:U.length;if(U.length!==a)throw new Error("[createInstance] First service dependency of "+N.name+" at position "+(a+1)+" conflicts with "+U.length+" static arguments");return new(N.bind.apply(N,e([void 0],Z(e(e([],Z(U),!1),Z(R),!1)),!1)))},l}();n.InstantiationService=d},7866:function(x,n,o){var t=this&&this.__decorate||function(l,N,W,Q){var U,F=arguments.length,B=F<3?N:Q===null?Q=Object.getOwnPropertyDescriptor(N,W):Q;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")B=Reflect.decorate(l,N,W,Q);else for(var R=l.length-1;R>=0;R--)(U=l[R])&&(B=(F<3?U(B):F>3?U(N,W,B):U(N,W))||B);return F>3&&B&&Object.defineProperty(N,W,B),B},Z=this&&this.__param||function(l,N){return function(W,Q){N(W,Q,l)}},e=this&&this.__read||function(l,N){var W=typeof Symbol=="function"&&l[Symbol.iterator];if(!W)return l;var Q,U,F=W.call(l),B=[];try{for(;(N===void 0||N-- >0)&&!(Q=F.next()).done;)B.push(Q.value)}catch(R){U={error:R}}finally{try{Q&&!Q.done&&(W=F.return)&&W.call(F)}finally{if(U)throw U.error}}return B},S=this&&this.__spreadArray||function(l,N,W){if(W||arguments.length===2)for(var Q,U=0,F=N.length;U<F;U++)!Q&&U in N||(Q||(Q=Array.prototype.slice.call(N,0,U)),Q[U]=N[U]);return l.concat(Q||Array.prototype.slice.call(N))};Object.defineProperty(n,"__esModule",{value:!0}),n.LogService=void 0;var r=o(2585),E={debug:r.LogLevelEnum.DEBUG,info:r.LogLevelEnum.INFO,warn:r.LogLevelEnum.WARN,error:r.LogLevelEnum.ERROR,off:r.LogLevelEnum.OFF},d=function(){function l(N){var W=this;this._optionsService=N,this.logLevel=r.LogLevelEnum.OFF,this._updateLogLevel(),this._optionsService.onOptionChange(function(Q){Q==="logLevel"&&W._updateLogLevel()})}return l.prototype._updateLogLevel=function(){this.logLevel=E[this._optionsService.rawOptions.logLevel]},l.prototype._evalLazyOptionalParams=function(N){for(var W=0;W<N.length;W++)typeof N[W]=="function"&&(N[W]=N[W]())},l.prototype._log=function(N,W,Q){this._evalLazyOptionalParams(Q),N.call.apply(N,S([console,"xterm.js: "+W],e(Q),!1))},l.prototype.debug=function(N){for(var W=[],Q=1;Q<arguments.length;Q++)W[Q-1]=arguments[Q];this.logLevel<=r.LogLevelEnum.DEBUG&&this._log(console.log,N,W)},l.prototype.info=function(N){for(var W=[],Q=1;Q<arguments.length;Q++)W[Q-1]=arguments[Q];this.logLevel<=r.LogLevelEnum.INFO&&this._log(console.info,N,W)},l.prototype.warn=function(N){for(var W=[],Q=1;Q<arguments.length;Q++)W[Q-1]=arguments[Q];this.logLevel<=r.LogLevelEnum.WARN&&this._log(console.warn,N,W)},l.prototype.error=function(N){for(var W=[],Q=1;Q<arguments.length;Q++)W[Q-1]=arguments[Q];this.logLevel<=r.LogLevelEnum.ERROR&&this._log(console.error,N,W)},t([Z(0,r.IOptionsService)],l)}();n.LogService=d},7302:function(x,n,o){var t=this&&this.__assign||function(){return t=Object.assign||function(E){for(var d,l=1,N=arguments.length;l<N;l++)for(var W in d=arguments[l])Object.prototype.hasOwnProperty.call(d,W)&&(E[W]=d[W]);return E},t.apply(this,arguments)};Object.defineProperty(n,"__esModule",{value:!0}),n.OptionsService=n.DEFAULT_OPTIONS=n.DEFAULT_BELL_SOUND=void 0;var Z=o(8460),e=o(6114);n.DEFAULT_BELL_SOUND="data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4LjMyLjEwNAAAAAAAAAAAAAAA//tQxAADB8AhSmxhIIEVCSiJrDCQBTcu3UrAIwUdkRgQbFAZC1CQEwTJ9mjRvBA4UOLD8nKVOWfh+UlK3z/177OXrfOdKl7pyn3Xf//WreyTRUoAWgBgkOAGbZHBgG1OF6zM82DWbZaUmMBptgQhGjsyYqc9ae9XFz280948NMBWInljyzsNRFLPWdnZGWrddDsjK1unuSrVN9jJsK8KuQtQCtMBjCEtImISdNKJOopIpBFpNSMbIHCSRpRR5iakjTiyzLhchUUBwCgyKiweBv/7UsQbg8isVNoMPMjAAAA0gAAABEVFGmgqK////9bP/6XCykxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq",n.DEFAULT_OPTIONS={cols:80,rows:24,cursorBlink:!1,cursorStyle:"block",cursorWidth:1,customGlyphs:!0,bellSound:n.DEFAULT_BELL_SOUND,bellStyle:"none",drawBoldTextInBrightColors:!0,fastScrollModifier:"alt",fastScrollSensitivity:5,fontFamily:"courier-new, courier, monospace",fontSize:15,fontWeight:"normal",fontWeightBold:"bold",lineHeight:1,linkTooltipHoverDuration:500,letterSpacing:0,logLevel:"info",scrollback:1e3,scrollSensitivity:1,screenReaderMode:!1,macOptionIsMeta:!1,macOptionClickForcesSelection:!1,minimumContrastRatio:1,disableStdin:!1,allowProposedApi:!0,allowTransparency:!1,tabStopWidth:8,theme:{},rightClickSelectsWord:e.isMac,rendererType:"canvas",windowOptions:{},windowsMode:!1,wordSeparator:" ()[]{}',\"`",altClickMovesCursor:!0,convertEol:!1,termName:"xterm",cancelEvents:!1,overviewRulerWidth:void 0};var S=["normal","bold","100","200","300","400","500","600","700","800","900"],r=function(){function E(d){this._onOptionChange=new Z.EventEmitter;var l=t({},n.DEFAULT_OPTIONS);for(var N in d)if(N in l)try{var W=d[N];l[N]=this._sanitizeAndValidateOption(N,W)}catch(Q){console.error(Q)}this.rawOptions=l,this.options=t({},l),this._setupOptions()}return Object.defineProperty(E.prototype,"onOptionChange",{get:function(){return this._onOptionChange.event},enumerable:!1,configurable:!0}),E.prototype._setupOptions=function(){var d=this,l=function(U){if(!(U in n.DEFAULT_OPTIONS))throw new Error('No option with key "'+U+'"');return d.rawOptions[U]},N=function(U,F){if(!(U in n.DEFAULT_OPTIONS))throw new Error('No option with key "'+U+'"');F=d._sanitizeAndValidateOption(U,F),d.rawOptions[U]!==F&&(d.rawOptions[U]=F,d._onOptionChange.fire(U))};for(var W in this.rawOptions){var Q={get:l.bind(this,W),set:N.bind(this,W)};Object.defineProperty(this.options,W,Q)}},E.prototype.setOption=function(d,l){this.options[d]=l},E.prototype._sanitizeAndValidateOption=function(d,l){switch(d){case"bellStyle":case"cursorStyle":case"rendererType":case"wordSeparator":l||(l=n.DEFAULT_OPTIONS[d]);break;case"fontWeight":case"fontWeightBold":if(typeof l=="number"&&1<=l&&l<=1e3)break;l=S.includes(l)?l:n.DEFAULT_OPTIONS[d];break;case"cursorWidth":l=Math.floor(l);case"lineHeight":case"tabStopWidth":if(l<1)throw new Error(d+" cannot be less than 1, value: "+l);break;case"minimumContrastRatio":l=Math.max(1,Math.min(21,Math.round(10*l)/10));break;case"scrollback":if((l=Math.min(l,4294967295))<0)throw new Error(d+" cannot be less than 0, value: "+l);break;case"fastScrollSensitivity":case"scrollSensitivity":if(l<=0)throw new Error(d+" cannot be less than or equal to 0, value: "+l);case"rows":case"cols":if(!l&&l!==0)throw new Error(d+" must be numeric, value: "+l)}return l},E.prototype.getOption=function(d){return this.options[d]},E}();n.OptionsService=r},8343:(x,n)=>{function o(t,Z,e){Z.di$target===Z?Z.di$dependencies.push({id:t,index:e}):(Z.di$dependencies=[{id:t,index:e}],Z.di$target=Z)}Object.defineProperty(n,"__esModule",{value:!0}),n.createDecorator=n.getServiceDependencies=n.serviceRegistry=void 0,n.serviceRegistry=new Map,n.getServiceDependencies=function(t){return t.di$dependencies||[]},n.createDecorator=function(t){if(n.serviceRegistry.has(t))return n.serviceRegistry.get(t);var Z=function(e,S,r){if(arguments.length!==3)throw new Error("@IServiceName-decorator can only be used to decorate a parameter");o(Z,e,r)};return Z.toString=function(){return t},n.serviceRegistry.set(t,Z),Z}},2585:(x,n,o)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.IDecorationService=n.IUnicodeService=n.IOptionsService=n.ILogService=n.LogLevelEnum=n.IInstantiationService=n.IDirtyRowService=n.ICharsetService=n.ICoreService=n.ICoreMouseService=n.IBufferService=void 0;var t,Z=o(8343);n.IBufferService=(0,Z.createDecorator)("BufferService"),n.ICoreMouseService=(0,Z.createDecorator)("CoreMouseService"),n.ICoreService=(0,Z.createDecorator)("CoreService"),n.ICharsetService=(0,Z.createDecorator)("CharsetService"),n.IDirtyRowService=(0,Z.createDecorator)("DirtyRowService"),n.IInstantiationService=(0,Z.createDecorator)("InstantiationService"),(t=n.LogLevelEnum||(n.LogLevelEnum={}))[t.DEBUG=0]="DEBUG",t[t.INFO=1]="INFO",t[t.WARN=2]="WARN",t[t.ERROR=3]="ERROR",t[t.OFF=4]="OFF",n.ILogService=(0,Z.createDecorator)("LogService"),n.IOptionsService=(0,Z.createDecorator)("OptionsService"),n.IUnicodeService=(0,Z.createDecorator)("UnicodeService"),n.IDecorationService=(0,Z.createDecorator)("DecorationService")},1480:(x,n,o)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.UnicodeService=void 0;var t=o(8460),Z=o(225),e=function(){function S(){this._providers=Object.create(null),this._active="",this._onChange=new t.EventEmitter;var r=new Z.UnicodeV6;this.register(r),this._active=r.version,this._activeProvider=r}return Object.defineProperty(S.prototype,"onChange",{get:function(){return this._onChange.event},enumerable:!1,configurable:!0}),Object.defineProperty(S.prototype,"versions",{get:function(){return Object.keys(this._providers)},enumerable:!1,configurable:!0}),Object.defineProperty(S.prototype,"activeVersion",{get:function(){return this._active},set:function(r){if(!this._providers[r])throw new Error('unknown Unicode version "'+r+'"');this._active=r,this._activeProvider=this._providers[r],this._onChange.fire(r)},enumerable:!1,configurable:!0}),S.prototype.register=function(r){this._providers[r.version]=r},S.prototype.wcwidth=function(r){return this._activeProvider.wcwidth(r)},S.prototype.getStringCellWidth=function(r){for(var E=0,d=r.length,l=0;l<d;++l){var N=r.charCodeAt(l);if(55296<=N&&N<=56319){if(++l>=d)return E+this.wcwidth(N);var W=r.charCodeAt(l);56320<=W&&W<=57343?N=1024*(N-55296)+W-56320+65536:E+=this.wcwidth(W)}E+=this.wcwidth(N)}return E},S}();n.UnicodeService=e}},nU={};return function x(n){var o=nU[n];if(o!==void 0)return o.exports;var t=nU[n]={exports:{}};return tU[n].call(t.exports,t,t.exports,x),t.exports}(4389)})()})})(EQ);var kQ={exports:{}};(function(SU,iU){(function(tU,nU){SU.exports=nU()})(self,function(){return(()=>{var tU={775:(x,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.FitAddon=void 0;var o=function(){function t(){}return t.prototype.activate=function(Z){this._terminal=Z},t.prototype.dispose=function(){},t.prototype.fit=function(){var Z=this.proposeDimensions();if(Z&&this._terminal){var e=this._terminal._core;this._terminal.rows===Z.rows&&this._terminal.cols===Z.cols||(e._renderService.clear(),this._terminal.resize(Z.cols,Z.rows))}},t.prototype.proposeDimensions=function(){if(this._terminal&&this._terminal.element&&this._terminal.element.parentElement){var Z=this._terminal._core;if(Z._renderService.dimensions.actualCellWidth!==0&&Z._renderService.dimensions.actualCellHeight!==0){var e=window.getComputedStyle(this._terminal.element.parentElement),S=parseInt(e.getPropertyValue("height")),r=Math.max(0,parseInt(e.getPropertyValue("width"))),E=window.getComputedStyle(this._terminal.element),d=S-(parseInt(E.getPropertyValue("padding-top"))+parseInt(E.getPropertyValue("padding-bottom"))),l=r-(parseInt(E.getPropertyValue("padding-right"))+parseInt(E.getPropertyValue("padding-left")))-Z.viewport.scrollBarWidth;return{cols:Math.max(2,Math.floor(l/Z._renderService.dimensions.actualCellWidth)),rows:Math.max(1,Math.floor(d/Z._renderService.dimensions.actualCellHeight))}}}},t}();n.FitAddon=o}},nU={};return function x(n){if(nU[n])return nU[n].exports;var o=nU[n]={exports:{}};return tU[n](o,o.exports,x),o.exports}(775)})()})})(kQ);const hQ=new URLSearchParams(window.location.search),tQ=hQ.get("app");function iQ(SU,iU){const tU=new rQ;tU.postMessage({app:iU}),tU.onmessage=nU=>{const{stdout:x}=nU.data,n=new Uint8Array(x);SU.write(n)},SU.onData(nU=>{tU.postMessage({data:nU})})}if(tQ!==null){window.document.body.innerHTML='<div id="terminal"></div>';const SU=document.getElementById("terminal");if(document.body.style.padding="0",document.body.style.margin="0",document.body.style.backgroundColor="#000",SU){const iU=new EQ.exports.Terminal({convertEol:!0}),tU=new kQ.exports.FitAddon;iU.loadAddon(tU),iU.open(document.querySelector("html")),tU.fit(),iQ(iU,tQ)}}else window.document.body.innerHTML=`
    <h1>Run WASI</h1>
    <p>
        <code>https://wasi.run?app=https://deno.land/x/wasm/tests/demo.wasm</code>
    </p>
    <p>
    <p>
    <h6>Source: <a href="https://github.com/richardanaya/wasi.run">https://github.com/richardanaya/wasi.run</a></h6>
    </p>
    <p>
    <h6><a href="https://www.youtube.com/watch?v=ggtEJC0Jv8A">What is WASI?</a> TLDR: Apps compiled to WebAssembly using a common system interface.</h6>
    </p>
    
    `;
